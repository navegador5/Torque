!function(Q,U){if("object"==typeof exports&&"object"==typeof module)module.exports=U();else if("function"==typeof define&&define.amd)define([],U);else{var F=U();for(var B in F)("object"==typeof exports?exports:Q)[B]=F[B]}}(window,(function(){return function(Q){var U={};function F(B){if(U[B])return U[B].exports;var I=U[B]={i:B,l:!1,exports:{}};return Q[B].call(I.exports,I,I.exports,F),I.l=!0,I.exports}return F.m=Q,F.c=U,F.d=function(Q,U,B){F.o(Q,U)||Object.defineProperty(Q,U,{enumerable:!0,get:B})},F.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},F.t=function(Q,U){if(1&U&&(Q=F(Q)),8&U)return Q;if(4&U&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var B=Object.create(null);if(F.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:Q}),2&U&&"string"!=typeof Q)for(var I in Q)F.d(B,I,function(U){return Q[U]}.bind(null,I));return B},F.n=function(Q){var U=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return F.d(U,"a",U),U},F.o=function(Q,U){return Object.prototype.hasOwnProperty.call(Q,U)},F.p="",F(F.s=10)}([function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Util = void 0;\r\n// 常用工具函数\r\nexports.Util = {\r\n    _id: 0,\r\n    /**\r\n     * 生成一个id（整数类型）\r\n     */\r\n    id() {\r\n        return this._id++;\r\n    },\r\n    /**\r\n     * 根据两个id生成一个复合id（字符串类型）: 'id1.id2'\r\n     * @param id1\r\n     * @param id2\r\n     */\r\n    compositeId(id1, id2) {\r\n        if (id1 < id2) {\r\n            return id1 + '.' + id2;\r\n        }\r\n        else {\r\n            return id2 + '.' + id1;\r\n        }\r\n    },\r\n    /**\r\n     * 对象合并\r\n     * @param originOpt 源对象\r\n     * @param destOpt 目标对象\r\n     */\r\n    merge(originOpt, destOpt) {\r\n        if (!originOpt || !destOpt)\r\n            return;\r\n        for (let key in destOpt) {\r\n            if (typeof destOpt[key] === 'object' &&\r\n                !Array.isArray(destOpt[key]) &&\r\n                originOpt[key] !== null &&\r\n                originOpt[key] !== undefined) {\r\n                this.merge(originOpt[key], destOpt[key]);\r\n            }\r\n            else {\r\n                if ((destOpt[key] !== null || destOpt[key] !== undefined) && originOpt[key] !== undefined) {\r\n                    originOpt[key] = destOpt[key];\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * 对象扩展\r\n     * @param originOpt 源对象\r\n     * @param extendOpt 扩展对象\r\n     */\r\n    extend(originOpt, extendOpt) {\r\n        if (!originOpt || !extendOpt)\r\n            return;\r\n        for (let key in extendOpt) {\r\n            if (typeof extendOpt[key] === 'object' &&\r\n                !Array.isArray(extendOpt[key]) &&\r\n                originOpt[key] !== null &&\r\n                originOpt[key] !== undefined) {\r\n                this.extend(originOpt[key], extendOpt[key]);\r\n            }\r\n            else {\r\n                if (extendOpt[key] !== null || extendOpt[key] !== undefined)\r\n                    originOpt[key] = extendOpt[key];\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * 从列表移除某个元素\r\n     * @param list 列表\r\n     * @param item 要移除的元素\r\n     */\r\n    remove(list, item) {\r\n        list.splice(list.findIndex(i => i['id'] === item['id']), 1);\r\n    },\r\n    /**\r\n     * 角度转弧度\r\n     * @param angle 角度\r\n     */\r\n    angle2Radian(angle) {\r\n        return (angle / 180) * Math.PI;\r\n    },\r\n    /**\r\n     * 弧度转角度\r\n     * @param radian 弧度\r\n     */\r\n    radian2Angle(radian) {\r\n        return radian / Math.PI * 180;\r\n    },\r\n    /**\r\n     * 返回页面加载完毕开始到当前的时间（微秒级，performance api）\r\n     */\r\n    now() {\r\n        return window.performance.now();\r\n    },\r\n    /**\r\n     * 直接插入排序\r\n     * @param list 要排序的列表\r\n     * @param fn 比较函数\r\n     */\r\n    insertSort(list, fn) {\r\n        let len = list.length, i, j, temp;\r\n        for (i = 1; i < len; i++) {\r\n            temp = list[i];\r\n            for (j = i - 1; j >= 0 && fn(list[j], temp) > 0; j--) {\r\n                list[j + 1] = list[j];\r\n            }\r\n            list[j + 1] = temp;\r\n        }\r\n    },\r\n    /**\r\n     * 对给定的value，收窄在min和max范围内\r\n     * @param value\r\n     * @param min\r\n     * @param max\r\n     */\r\n    clamp(value, min, max) {\r\n        if (value < min)\r\n            return min;\r\n        if (value > max)\r\n            return max;\r\n        return value;\r\n    },\r\n    /**\r\n     * 返回一个数的正负号\r\n     * @param value\r\n     */\r\n    sign(value) {\r\n        return value < 0 ? -1 : 1;\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports._tempVector4 = exports._tempVector3 = exports._tempVector2 = exports._tempVector1 = exports.Vector = void 0;\r\n// 二维向量 {x, y}\r\nclass Vector {\r\n    constructor(x, y) {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        if (x !== undefined && y !== undefined) {\r\n            this.set(x, y);\r\n        }\r\n    }\r\n    //-------------操作----------------\r\n    /**\r\n     * 设置值\r\n     * @param x\r\n     * @param y\r\n     */\r\n    set(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    /**\r\n     * 相加\r\n     * @param v\r\n     */\r\n    add(v, out) {\r\n        out = out || new Vector();\r\n        out.x = this.x + v.x;\r\n        out.y = this.y + v.y;\r\n        return out;\r\n    }\r\n    /**\r\n     * 相减\r\n     * @param v\r\n     */\r\n    sub(v, out) {\r\n        out = out || new Vector();\r\n        out.x = this.x - v.x;\r\n        out.y = this.y - v.y;\r\n        return out;\r\n    }\r\n    /**\r\n     * 点积\r\n     * @param v\r\n     */\r\n    dot(v) {\r\n        return this.x * v.x + this.y * v.y;\r\n    }\r\n    /**\r\n     * 叉积\r\n     * @param v\r\n     */\r\n    cro(v) {\r\n        return this.x * v.y - v.x * this.y;\r\n    }\r\n    /**\r\n     * 与标量进行叉积\r\n     * @param n\r\n     */\r\n    croNum(n, out) {\r\n        out = out || new Vector();\r\n        out.x = -n * this.y;\r\n        out.y = n * this.x;\r\n        return out;\r\n    }\r\n    /**\r\n     * 投影\r\n     * @param v\r\n     */\r\n    pro(v) {\r\n        return this.dot(v) / v.len();\r\n    }\r\n    /**\r\n     * 法向\r\n     */\r\n    nor(out) {\r\n        out = out || new Vector();\r\n        out.x = -this.y;\r\n        out.y = this.x;\r\n        return out;\r\n    }\r\n    /**\r\n     * 求模\r\n     */\r\n    len() {\r\n        return Math.hypot(this.x, this.y);\r\n    }\r\n    /**\r\n     * 平方模（节省求平方根操作）\r\n     */\r\n    len_s() {\r\n        return this.x * this.x + this.y * this.y;\r\n    }\r\n    /**\r\n     * 单位化\r\n     */\r\n    nol() {\r\n        let len = this.len();\r\n        if (len === 0) {\r\n            return new Vector();\r\n        }\r\n        this.x = this.x / len;\r\n        this.y = this.y / len;\r\n        return this;\r\n    }\r\n    /**\r\n     * 缩放\r\n     * @param n\r\n     */\r\n    scl(n, out) {\r\n        out = out || new Vector();\r\n        out.x = n * this.x;\r\n        out.y = n * this.y;\r\n        return out;\r\n    }\r\n    /**\r\n     * 反向\r\n     */\r\n    inv(out) {\r\n        out = out || new Vector();\r\n        out.x = -this.x;\r\n        out.y = -this.y;\r\n        return out;\r\n    }\r\n    /**\r\n     * 判断两向量是否相等\r\n     * @param v\r\n     */\r\n    eql(v) {\r\n        return this.x === v.x && this.y === v.y;\r\n    }\r\n    /**\r\n     * 求两向量夹角(弧度制)\r\n     * @param v\r\n     */\r\n    ang(v) {\r\n        return Math.acos(this.dot(v) / (this.len() * v.len()));\r\n    }\r\n    /**\r\n     * 克隆向量\r\n     */\r\n    col() {\r\n        return new Vector(this.x, this.y);\r\n    }\r\n    /**\r\n     * 绕某点旋转向量\r\n     * @param radian 角度（弧度制）\r\n     * @param point 绕的点\r\n     */\r\n    rot(radian, point, out) {\r\n        point = point || new Vector();\r\n        out = out || new Vector();\r\n        let cos = Math.cos(radian), sin = Math.sin(radian), dx = this.x - point.x, dy = this.y - point.y;\r\n        out.x = point.x + (dx * cos - dy * sin);\r\n        out.y = point.y + (dx * sin + dy * cos);\r\n        return out;\r\n    }\r\n    /**\r\n     * 求一个向量（点）按照direction方向，延长len长度后的坐标\r\n     * @param direction\r\n     * @param len\r\n     */\r\n    loc(direction, len, out) {\r\n        out = out || new Vector();\r\n        direction = direction.nol();\r\n        out.x = this.x + direction.x * len;\r\n        out.y = this.y + direction.y * len;\r\n        return out;\r\n    }\r\n}\r\nexports.Vector = Vector;\r\n;\r\nexports._tempVector1 = new Vector();\r\nexports._tempVector2 = new Vector();\r\nexports._tempVector3 = new Vector();\r\nexports._tempVector4 = new Vector();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Vertices = exports.Poly = void 0;\r\nconst vector_1 = __webpack_require__(1);\r\nconst line_1 = __webpack_require__(5);\r\nconst bound_1 = __webpack_require__(6);\r\nconst util_1 = __webpack_require__(0);\r\n// 一个顶点信息包\r\nclass Poly {\r\n    constructor(body, vertexList) {\r\n        this.id = util_1.Util.id();\r\n        this.body = body;\r\n        this.vertexList = vertexList;\r\n        this.axes = exports.Vertices.getAxes(vertexList);\r\n        this.center = exports.Vertices.getCenter(vertexList);\r\n        this.bound = exports.Vertices.getBound(vertexList);\r\n    }\r\n}\r\nexports.Poly = Poly;\r\n;\r\n// 顶点操作工具\r\nexports.Vertices = {\r\n    /**\r\n     * 创造顶点信息包\r\n     * @param body 顶点所属的刚体\r\n     * @param vertices 顶点集\r\n     */\r\n    create(body, vertexList) {\r\n        return new Poly(body, vertexList);\r\n    },\r\n    /**\r\n     * 获取多边形中心点\r\n     * @param vertexList\r\n     */\r\n    getCenter(vertexList) {\r\n        let range = this.getRange(vertexList), centerX = (range.max.x + range.min.x) / 2, centerY = (range.max.y + range.min.y) / 2;\r\n        return new vector_1.Vector(centerX, centerY);\r\n    },\r\n    /**\r\n     * 获取多边形质心\r\n     * @param vertexList\r\n     */\r\n    getCentroid(vertexList) {\r\n        let area = this.getArea(vertexList), centroid = new vector_1.Vector(0, 0), cross = 0, temp, j;\r\n        for (let i = 0; i < vertexList.length; i++) {\r\n            j = (i + 1) % vertexList.length;\r\n            cross = vertexList[i].cro(vertexList[j]);\r\n            temp = vertexList[i].add(vertexList[j]).scl(cross);\r\n            centroid.add(temp, centroid);\r\n        }\r\n        return centroid.scl(1 / (6 * area), centroid);\r\n    },\r\n    /**\r\n     * 获取多边形面积\r\n     * @param vertexList\r\n     */\r\n    getArea(vertexList) {\r\n        let area = 0, j = vertexList.length - 1;\r\n        for (let i = 0; i < vertexList.length; i++) {\r\n            area += (vertexList[j].x - vertexList[i].x) * (vertexList[j].y + vertexList[i].y);\r\n            j = i;\r\n        }\r\n        return area / 2;\r\n    },\r\n    /**\r\n     * 获取多边形的转动惯量\r\n     * 公式来自：https://blog.csdn.net/weixin_34194702/article/details/93587529\r\n     * @param vertexList\r\n     * @param mass 质量\r\n     * @param position\r\n     */\r\n    getInertia(vertexList, mass, position) {\r\n        let numerator = 0, denominator = 0, v = vertexList, cur, next, cross;\r\n        for (let n = 0; n < v.length; n++) {\r\n            cur = v[n].sub(position, cur);\r\n            next = v[(n + 1) % v.length].sub(position, next);\r\n            cross = Math.abs(cur.cro(next));\r\n            numerator += cross * (cur.dot(cur) + cur.dot(next) + next.dot(next));\r\n            denominator += cross;\r\n        }\r\n        return (mass / 6) * (numerator / denominator);\r\n    },\r\n    /**\r\n     * 求顶点围成的所有面\r\n     * @param vertexList\r\n     */\r\n    getEdge(vertexList) {\r\n        let edges = [], v = vertexList, j;\r\n        for (let i = 0; i < v.length; i++) {\r\n            j = (i + 1) % v.length;\r\n            edges.push([v[i], v[j]]);\r\n        }\r\n        return edges;\r\n    },\r\n    /**\r\n     * 求顶点围成的所有面的轴\r\n     * @param vertexList\r\n     */\r\n    getAxes(vertexList) {\r\n        let edges = this.getEdge(vertexList), edgeVector = null, axes = [];\r\n        for (let i = 0; i < edges.length; i++) {\r\n            edgeVector = edges[i][1].sub(edges[i][0]);\r\n            axes.push(edgeVector.nor().nol());\r\n        }\r\n        return axes;\r\n    },\r\n    /**\r\n     * 获取顶点集的范围\r\n     * @param vertexList\r\n     */\r\n    getRange(vertexList) {\r\n        let xList = vertexList.map(v => v.x), yList = vertexList.map(v => v.y);\r\n        return {\r\n            min: new vector_1.Vector(Math.min.apply(Math, xList), Math.min.apply(Math, yList)),\r\n            max: new vector_1.Vector(Math.max.apply(Math, xList), Math.max.apply(Math, yList))\r\n        };\r\n    },\r\n    /**\r\n     * 获取顶点集形成的包围盒\r\n     * @param vertexList\r\n     */\r\n    getBound(vertexList) {\r\n        let range = exports.Vertices.getRange(vertexList);\r\n        return new bound_1.Bound(range.min, range.max);\r\n    },\r\n    /**\r\n     * 使用斜率筛去共线的轴\r\n     * @param axes 要筛选的轴\r\n     */\r\n    uniqueAxes(axes) {\r\n        let axis, tmpAxes = [], axesTable = {}, i, gradient;\r\n        for (i = 0; i < axes.length; i++) {\r\n            axis = axes[i];\r\n            gradient = (axis.y === 0) ? Infinity : (axis.x / axis.y);\r\n            // 限制精度\r\n            gradient = gradient.toFixed(3).toString();\r\n            axesTable[gradient] = axis;\r\n        }\r\n        Object.keys(axesTable).map(item => {\r\n            tmpAxes.push(axesTable[item]);\r\n        });\r\n        return tmpAxes;\r\n    },\r\n    /**\r\n     * 旋转顶点\r\n     * @param poly 多边形\r\n     * @param radian 弧度\r\n     * @param point 绕点\r\n     */\r\n    rotate(poly, radian, point) {\r\n        let vertexList = poly.vertexList, axes = poly.axes, i;\r\n        // 转动顶点\r\n        for (i = 0; i < vertexList.length; i++) {\r\n            vertexList[i].rot(radian, point, vertexList[i]);\r\n        }\r\n        // 转动轴\r\n        for (i = 0; i < axes.length; i++) {\r\n            axes[i].rot(radian, null, axes[i]);\r\n        }\r\n        // 更新几何中心\r\n        poly.center.rot(radian, point, poly.center);\r\n        // 更新包围盒\r\n        poly.bound.update(poly.vertexList);\r\n    },\r\n    /**\r\n     * 位移顶点\r\n     * @param poly 多边形\r\n     * @param distance 位移向量\r\n     */\r\n    translate(poly, distance) {\r\n        let v = poly.vertexList, i;\r\n        // 位移顶点\r\n        for (i = 0; i < v.length; i++) {\r\n            v[i].x += distance.x;\r\n            v[i].y += distance.y;\r\n        }\r\n        poly.center.x += distance.x;\r\n        poly.center.y += distance.y;\r\n        // 位移包围盒\r\n        poly.bound.translate(distance);\r\n    },\r\n    /**\r\n     * 将凹多边形分解为多个子凸多边形\r\n     * @param poly\r\n     */\r\n    divide(poly) {\r\n        // 将拆分出来的多边形保存到这个数组\r\n        let parts = [], v = poly.vertexList.slice(0), partA, partB, vertexListA, vertexListB, axes = poly.axes.slice(0), axesA, axesB, xAxis, vTest, vDiv, dividePointA, dividePointB, len = v.length, i, j, cur, next, next2, flag = false;\r\n        for (i = 0; i < len; i++) {\r\n            cur = i;\r\n            next = (i + 1) % len;\r\n            next2 = (i + 2) % len;\r\n            xAxis = v[next].sub(v[cur]);\r\n            vTest = v[next2].sub(v[cur]);\r\n            if (xAxis.cro(vTest) < 0) {\r\n                for (j = i + 3; j < len; j++) {\r\n                    vDiv = v[j].sub(v[cur]);\r\n                    if (xAxis.cro(vDiv) > 0) {\r\n                        flag = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (flag)\r\n                    break;\r\n            }\r\n        }\r\n        // 获取两个分割点\r\n        dividePointA = v[next],\r\n            dividePointB = v[j];\r\n        // 拆分为两个多边形vertexListA和vertexListB\r\n        vertexListB = v.splice(next2, j - next2);\r\n        vertexListA = v;\r\n        vertexListB.unshift(dividePointA);\r\n        vertexListB.push(dividePointB);\r\n        axesB = axes.splice(next, j - next);\r\n        axesA = axes;\r\n        partA = exports.Vertices.create(poly.body, vertexListA);\r\n        partB = exports.Vertices.create(poly.body, vertexListB);\r\n        partA.axes = axesA;\r\n        partB.axes = axesB;\r\n        // 检测拆分出来的两个多边形是否是凹多边形，若果是，继续递归拆分\r\n        if (this.isConcave(vertexListA)) {\r\n            parts.push(...this.divide(partA));\r\n        }\r\n        else {\r\n            parts.push(partA);\r\n        }\r\n        if (this.isConcave(vertexListB)) {\r\n            parts.push(...this.divide(partB));\r\n        }\r\n        else {\r\n            parts.push(partB);\r\n        }\r\n        return parts;\r\n    },\r\n    /**\r\n     * 将多边形分割为多个小三角形\r\n     * 作用：分割成多个小三角形后，对每个小三角形生成包围盒，在碰撞检测可以遍历小三角形，进行包围盒相交检测，\r\n     * 可以过滤掉多边形没有发生碰撞的部分，大大提升性能\r\n     * 参考：https://blog.csdn.net/zzq61974/article/details/87635763\r\n     * @param poly\r\n     */\r\n    decomposition(poly) {\r\n        let v = poly.vertexList, \r\n        // 当前正在切割的顶点\r\n        curClipVertex = v.slice(0), \r\n        // 保存所有凹点\r\n        caves = [], \r\n        // 当前顶点下标\r\n        curVertexIndex, \r\n        // 上一个顶点的下标\r\n        prevVertexIndex, \r\n        // 下一个顶点的下标\r\n        nextVertexIndex, \r\n        // 当前顶点\r\n        curVertex, \r\n        // 上一个点\r\n        prevVertex, \r\n        // 下一个点\r\n        nextVertex, \r\n        // 顶点集\r\n        vertexList = [], \r\n        // 轴集\r\n        axes = [], \r\n        // 小三角形集\r\n        parts = [], part = null, i;\r\n        // 若该图形顶点小于等于5，不用分割\r\n        if (curClipVertex.length <= 5)\r\n            return [poly];\r\n        // 获取凹点\r\n        caves = this.findCaves(v);\r\n        while (true) {\r\n            // 3个顶点才能构成一个三角形，小于3个顶点说明分割完毕，退出\r\n            if (curClipVertex.length < 3)\r\n                break;\r\n            // 寻找切割点\r\n            for (i = 1; i < curClipVertex.length; i++) {\r\n                curVertexIndex = i;\r\n                prevVertexIndex = i - 1;\r\n                nextVertexIndex = (i + 1) % curClipVertex.length;\r\n                curVertex = curClipVertex[curVertexIndex];\r\n                prevVertex = curClipVertex[prevVertexIndex];\r\n                nextVertex = curClipVertex[nextVertexIndex];\r\n                // 选取顶点\r\n                vertexList = [prevVertex, curVertex, nextVertex];\r\n                // 若当前图形没有凹点（凸多边形）或若当前顶点不是凹点并且当前三角形不包含凹点，则取用\r\n                if (caves.length === 0 ||\r\n                    (caves.indexOf(curVertex) < 0 && !caves.some(point => this.isContains(vertexList, point)))) {\r\n                    break;\r\n                }\r\n                ;\r\n            }\r\n            // 若上一个顶点和当前顶点形成的边不穿过原多边形中（即上一个顶点和当前顶点形成的边是原多边形的一条边）\r\n            // 那么取其边和轴\r\n            if (!line_1.Lines.isIntersectWithVertices([prevVertex, curVertex], v)) {\r\n                axes.push(poly.axes[prevVertexIndex]);\r\n            }\r\n            // 与上面同理\r\n            if (!line_1.Lines.isIntersectWithVertices([curVertex, nextVertex], v)) {\r\n                axes.push(poly.axes[curVertexIndex]);\r\n            }\r\n            // 与上面同理\r\n            if (!line_1.Lines.isIntersectWithVertices([prevVertex, nextVertex], v)) {\r\n                axes.push(poly.axes[nextVertexIndex]);\r\n            }\r\n            part = exports.Vertices.create(poly.body, vertexList);\r\n            part.axes = axes;\r\n            parts.push(part);\r\n            // 在图形中移除一个分割点\r\n            curClipVertex.splice(curVertexIndex, 1);\r\n            vertexList = [];\r\n            axes = [];\r\n        }\r\n        return parts;\r\n    },\r\n    /**\r\n     * 求两顶点围成的多边形的交点\r\n     * 由于在本引擎中，相交的只会是两个凸多边形，所以相交点数量上限为2个，到达两个便return\r\n     * @param edges1\r\n     * @param edges2\r\n     */\r\n    intersection(edges1, edges2) {\r\n        // 待剪辑顶点集\r\n        let intersectPoint = [], i, j;\r\n        for (i = 0; i < edges1.length; i++) {\r\n            for (j = 0; j < edges2.length; j++) {\r\n                if (line_1.Lines.isIntersect(edges1[i], edges2[j])) {\r\n                    intersectPoint.push(line_1.Lines.intersection(edges1[i], edges2[j]));\r\n                    // 求得2个交点时就返回\r\n                    if (intersectPoint.length >= 2)\r\n                        return intersectPoint;\r\n                }\r\n            }\r\n        }\r\n        return intersectPoint;\r\n    },\r\n    /**\r\n     * 判断是否包含顶点（射线法）\r\n     * 参考：https://www.cnblogs.com/anningwang/p/7581545.html\r\n     * @param vertexList\r\n     * @param point 检测的顶点\r\n     */\r\n    isContains(vertexList, point) {\r\n        let v = vertexList, i, j, len = vertexList.length, flag = false;\r\n        for (i = 0, j = len - 1; i < len; j = i++) {\r\n            if (v[i].eql(point))\r\n                return false;\r\n            if (((v[i].y > point.y) != (v[j].y > point.y))\r\n                && (point.x < (v[j].x - v[i].x) * (point.y - v[i].y) / (v[j].y - v[i].y) + v[i].x))\r\n                flag = !flag;\r\n        }\r\n        return flag;\r\n    },\r\n    /**\r\n     * 判断是否为凹多边形\r\n     * @param vertexList\r\n     */\r\n    isConcave(vertexList) {\r\n        let v = vertexList, \r\n        // 上两向量间的叉积\r\n        prevCor, \r\n        // 当前两向量的叉积\r\n        curCor, \r\n        // 上一顶点到当前顶点的向量\r\n        prev2Cur, \r\n        // 当前顶点到下一顶点的向量\r\n        cur2Next, len = v.length, i, j, k;\r\n        for (i = 1; i < len; i++) {\r\n            j = i - 1;\r\n            k = (i + 1) % len;\r\n            prev2Cur = v[i].sub(v[j]);\r\n            cur2Next = v[k].sub(v[i]);\r\n            // 计算向量叉积\r\n            curCor = prev2Cur.cro(cur2Next) >= 0 ? 1 : -1;\r\n            if (prevCor !== undefined && prevCor !== curCor) {\r\n                return true;\r\n            }\r\n            prevCor = curCor;\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * 转换到世界坐标\r\n     * @param point 参考点\r\n     * @param vertexList\r\n     */\r\n    transform2World(point, vertexList) {\r\n        return vertexList.map(v => v.add(point, v));\r\n    },\r\n    /**\r\n     * 转换到本地坐标\r\n     * @param point 参考点\r\n     * @param vertexList\r\n     */\r\n    transform2Local(point, vertexList) {\r\n        return vertexList.map(v => v.sub(point, v));\r\n    },\r\n    /**\r\n     * 求多边形在某个轴的投影\r\n     * @param vertexList\r\n     * @param axis 投影轴\r\n     */\r\n    projection(vertexList, axis) {\r\n        let projectionRange = vertexList.map(v => v.pro(axis));\r\n        return {\r\n            min: Math.min.apply(Math, projectionRange),\r\n            max: Math.max.apply(Math, projectionRange)\r\n        };\r\n    },\r\n    /**\r\n     * 计算顶点集中离给定点最近的顶点\r\n     * @param point 给定点\r\n     * @param vertexList 顶点集\r\n     */\r\n    getClosestVertex(point, vertexList) {\r\n        let v = vertexList, i, min = Infinity, length, index, len = v.length;\r\n        for (i = 0; i < len; i++) {\r\n            length = v[i].sub(point).len();\r\n            if (length < min) {\r\n                min = length;\r\n                index = i;\r\n            }\r\n        }\r\n        return vertexList[index];\r\n    },\r\n    /**\r\n     * 寻找顶点集中所有凹点\r\n     * @param vertexList\r\n     */\r\n    findCaves(vertexList) {\r\n        let caves = [], v = vertexList, prevVertex, curVertex, nextVertex, len = v.length, i;\r\n        for (i = 1; i < len; i++) {\r\n            prevVertex = v[i - 1];\r\n            curVertex = v[i];\r\n            nextVertex = v[(i + 1) % len];\r\n            // 利用叉乘判断\r\n            if (curVertex.sub(prevVertex).cro(nextVertex.sub(curVertex)) < 0) {\r\n                caves.push(curVertex);\r\n            }\r\n        }\r\n        return caves;\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n')},function(module,exports,__webpack_require__){"use strict";eval("\r\n/**\r\n * 事件管理器\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Event = void 0;\r\nclass EventEmitter {\r\n    /**\r\n     * 绑定事件\r\n     * @param obj\r\n     * @param eventName\r\n     * @param fn\r\n     */\r\n    bind(obj, eventName, fn) {\r\n        obj.methods[eventName] = fn;\r\n    }\r\n    /**\r\n     * 解绑事件\r\n     * @param obj\r\n     * @param eventName\r\n     */\r\n    unBind(obj, eventName) {\r\n        obj.methods[eventName] = null;\r\n    }\r\n    /**\r\n     * 事件发射\r\n     * @param obj\r\n     * @param eventName 事件名称\r\n     */\r\n    emit(obj, eventName, ...para) {\r\n        obj.methods[eventName] && typeof obj.methods[eventName] === 'function' && obj.methods[eventName](...para);\r\n    }\r\n}\r\nexports.Event = new EventEmitter();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXZlbnQvZXZlbnRFbWl0dGVyLnRzP2NlOTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBOztHQUVHOzs7QUFJSCxNQUFNLFlBQVk7SUFFZDs7Ozs7T0FLRztJQUNILElBQUksQ0FBQyxHQUFRLEVBQUUsU0FBaUIsRUFBRSxFQUFZO1FBQzFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQ2hDLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsTUFBTSxDQUFDLEdBQVEsRUFBRSxTQUFpQjtRQUM5QixHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLElBQUksQ0FBQztJQUNsQyxDQUFDO0lBR0Q7Ozs7T0FJRztJQUNILElBQUksQ0FBSSxHQUFRLEVBQUUsU0FBaUIsRUFBRSxHQUFHLElBQVM7UUFDN0MsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxPQUFPLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEtBQUssVUFBVSxJQUFJLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztJQUM5RyxDQUFDO0NBQ0o7QUFHWSxhQUFLLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQyIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi8qKlxyXG4gKiDkuovku7bnrqHnkIblmahcclxuICovXHJcblxyXG5cclxuXHJcbmNsYXNzIEV2ZW50RW1pdHRlciB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnu5Hlrprkuovku7ZcclxuICAgICAqIEBwYXJhbSBvYmogXHJcbiAgICAgKiBAcGFyYW0gZXZlbnROYW1lIFxyXG4gICAgICogQHBhcmFtIGZuIFxyXG4gICAgICovXHJcbiAgICBiaW5kKG9iajogYW55LCBldmVudE5hbWU6IHN0cmluZywgZm46IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgb2JqLm1ldGhvZHNbZXZlbnROYW1lXSA9IGZuO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6Kej57uR5LqL5Lu2XHJcbiAgICAgKiBAcGFyYW0gb2JqIFxyXG4gICAgICogQHBhcmFtIGV2ZW50TmFtZSBcclxuICAgICAqL1xyXG4gICAgdW5CaW5kKG9iajogYW55LCBldmVudE5hbWU6IHN0cmluZykge1xyXG4gICAgICAgIG9iai5tZXRob2RzW2V2ZW50TmFtZV0gPSBudWxsO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIOS6i+S7tuWPkeWwhFxyXG4gICAgICogQHBhcmFtIG9iaiBcclxuICAgICAqIEBwYXJhbSBldmVudE5hbWUg5LqL5Lu25ZCN56ewIFxyXG4gICAgICovXHJcbiAgICBlbWl0PFQ+KG9iajogYW55LCBldmVudE5hbWU6IHN0cmluZywgLi4ucGFyYTogYW55KSB7XHJcbiAgICAgICAgb2JqLm1ldGhvZHNbZXZlbnROYW1lXSAmJiB0eXBlb2Ygb2JqLm1ldGhvZHNbZXZlbnROYW1lXSA9PT0gJ2Z1bmN0aW9uJyAmJiBvYmoubWV0aG9kc1tldmVudE5hbWVdKC4uLnBhcmEpO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEV2ZW50ID0gbmV3IEV2ZW50RW1pdHRlcigpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Arcs = exports.Arc = void 0;\r\nconst vector_1 = __webpack_require__(1);\r\nconst vertices_1 = __webpack_require__(2);\r\nconst bound_1 = __webpack_require__(6);\r\n// 一个圆形信息包\r\nclass Arc {\r\n    constructor(body, center, radius) {\r\n        this.id = body.id;\r\n        this.body = body;\r\n        this.center = center;\r\n        this.radius = radius;\r\n        this.bound = exports.Arcs.getBound(center, radius);\r\n    }\r\n}\r\nexports.Arc = Arc;\r\nexports.Arcs = {\r\n    /**\r\n     * 创造圆形信息包\r\n     * @param body\r\n     */\r\n    create(body) {\r\n        return new Arc(body, body.position.col(), body.radius);\r\n    },\r\n    /**\r\n     * 获取两个圆的圆心间的距离\r\n     * @param circleA\r\n     * @param circleB\r\n     */\r\n    distance(circleA, circleB) {\r\n        return circleA.center.sub(circleB.center).len();\r\n    },\r\n    /**\r\n     * 获取圆形和顶点集间的轴\r\n     * @param vertices 顶点信息\r\n     */\r\n    getAxes(circle, poly) {\r\n        let closestVertex = vertices_1.Vertices.getClosestVertex(circle.center, poly.vertexList);\r\n        return closestVertex.sub(circle.center).nol();\r\n    },\r\n    getBound(center, radius) {\r\n        let min = new vector_1.Vector(center.x - radius, center.y - radius), max = new vector_1.Vector(center.x + radius, center.y + radius);\r\n        return new bound_1.Bound(min, max);\r\n    },\r\n    /**\r\n     * 获取圆形在给定轴上的投影\r\n     * @param axis\r\n     */\r\n    Projection(circle, axis) {\r\n        let len = circle.center.pro(axis);\r\n        return {\r\n            min: len - circle.radius,\r\n            max: len + circle.radius\r\n        };\r\n    },\r\n    /**\r\n     * 查看圆形是否包含某个点\r\n     * @param circle\r\n     * @param point\r\n     */\r\n    isContains(circle, point) {\r\n        return circle.radius * circle.radius - circle.center.sub(point).len_s() > 0;\r\n    },\r\n    /**\r\n     * 位移圆形\r\n     * @param arc\r\n     * @param distance 位移向量\r\n     */\r\n    translate(arc, distance) {\r\n        arc.center.x += distance.x;\r\n        arc.center.y += distance.y;\r\n        // 位移包围盒\r\n        arc.bound.translate(distance);\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tbW9uL2FyY3MudHM/MjcyZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx3Q0FBd0M7QUFFeEMsMENBQTRDO0FBQzVDLHVDQUEyQztBQUkzQyxVQUFVO0FBQ1YsTUFBYSxHQUFHO0lBT1osWUFBWSxJQUFZLEVBQUUsTUFBYyxFQUFFLE1BQWM7UUFDcEQsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxLQUFLLEdBQUcsWUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDL0MsQ0FBQztDQUNKO0FBZEQsa0JBY0M7QUFLWSxZQUFJLEdBQUc7SUFDaEI7OztPQUdHO0lBQ0gsTUFBTSxDQUFDLElBQVk7UUFDZixPQUFPLElBQUksR0FBRyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMzRCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILFFBQVEsQ0FBQyxPQUFZLEVBQUUsT0FBWTtRQUMvQixPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNwRCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsT0FBTyxDQUFDLE1BQVcsRUFBRSxJQUFVO1FBQzNCLElBQUksYUFBYSxHQUFHLG1CQUFRLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDOUUsT0FBTyxhQUFhLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNsRCxDQUFDO0lBRUQsUUFBUSxDQUFDLE1BQWMsRUFBRSxNQUFjO1FBQ25DLElBQUksR0FBRyxHQUFHLElBQUksZUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEdBQUcsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLEVBQ3RELEdBQUcsR0FBRyxJQUFJLGVBQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDO1FBRTNELE9BQU8sSUFBSSxhQUFLLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRDs7O09BR0c7SUFDSCxVQUFVLENBQUMsTUFBVyxFQUFFLElBQVk7UUFDaEMsSUFBSSxHQUFHLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFbEMsT0FBTztZQUNILEdBQUcsRUFBRSxHQUFHLEdBQUcsTUFBTSxDQUFDLE1BQU07WUFDeEIsR0FBRyxFQUFFLEdBQUcsR0FBRyxNQUFNLENBQUMsTUFBTTtTQUMzQixDQUFDO0lBQ04sQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxVQUFVLENBQUMsTUFBVyxFQUFFLEtBQWE7UUFDakMsT0FBTyxNQUFNLENBQUMsTUFBTSxHQUFDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzlFLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsU0FBUyxDQUFDLEdBQVEsRUFBRSxRQUFnQjtRQUNoQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBQzNCLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFFM0IsUUFBUTtRQUNSLEdBQUcsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7Q0FDSixDQUFDIiwiZmlsZSI6IjQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWZWN0b3IgfSBmcm9tIFwiLi4vbWF0aC92ZWN0b3JcIjtcclxuaW1wb3J0IHsgQ2lyY2xlIH0gZnJvbSBcIi4uL2JvZHkvY2lyY2xlXCI7XHJcbmltcG9ydCB7IFBvbHksIFZlcnRpY2VzIH0gZnJvbSBcIi4vdmVydGljZXNcIjtcclxuaW1wb3J0IHsgQm91bmQgfSBmcm9tIFwiLi4vY29sbGlzaW9uL2JvdW5kXCI7XHJcblxyXG5cclxuXHJcbi8vIOS4gOS4quWchuW9ouS/oeaBr+WMhVxyXG5leHBvcnQgY2xhc3MgQXJjIHtcclxuICAgIGlkOiBudW1iZXI7XHJcbiAgICBjZW50ZXI6IFZlY3RvcjtcclxuICAgIHJhZGl1czogbnVtYmVyO1xyXG4gICAgYm9keTogQ2lyY2xlO1xyXG4gICAgYm91bmQ6IEJvdW5kXHJcblxyXG4gICAgY29uc3RydWN0b3IoYm9keTogQ2lyY2xlLCBjZW50ZXI6IFZlY3RvciwgcmFkaXVzOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLmlkID0gYm9keS5pZDtcclxuICAgICAgICB0aGlzLmJvZHkgPSBib2R5O1xyXG4gICAgICAgIHRoaXMuY2VudGVyID0gY2VudGVyO1xyXG4gICAgICAgIHRoaXMucmFkaXVzID0gcmFkaXVzO1xyXG4gICAgICAgIHRoaXMuYm91bmQgPSBBcmNzLmdldEJvdW5kKGNlbnRlciwgcmFkaXVzKTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEFyY3MgPSB7XHJcbiAgICAvKipcclxuICAgICAqIOWIm+mAoOWchuW9ouS/oeaBr+WMhVxyXG4gICAgICogQHBhcmFtIGJvZHkgXHJcbiAgICAgKi9cclxuICAgIGNyZWF0ZShib2R5OiBDaXJjbGUpOiBBcmMge1xyXG4gICAgICAgIHJldHVybiBuZXcgQXJjKGJvZHksIGJvZHkucG9zaXRpb24uY29sKCksIGJvZHkucmFkaXVzKTtcclxuICAgIH0sXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflj5bkuKTkuKrlnIbnmoTlnIblv4Ppl7TnmoTot53nprtcclxuICAgICAqIEBwYXJhbSBjaXJjbGVBIFxyXG4gICAgICogQHBhcmFtIGNpcmNsZUIgXHJcbiAgICAgKi9cclxuICAgIGRpc3RhbmNlKGNpcmNsZUE6IEFyYywgY2lyY2xlQjogQXJjKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gY2lyY2xlQS5jZW50ZXIuc3ViKGNpcmNsZUIuY2VudGVyKS5sZW4oKTtcclxuICAgIH0sXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflj5blnIblvaLlkozpobbngrnpm4bpl7TnmoTovbRcclxuICAgICAqIEBwYXJhbSB2ZXJ0aWNlcyDpobbngrnkv6Hmga9cclxuICAgICAqL1xyXG4gICAgZ2V0QXhlcyhjaXJjbGU6IEFyYywgcG9seTogUG9seSk6IFZlY3RvciB7XHJcbiAgICAgICAgbGV0IGNsb3Nlc3RWZXJ0ZXggPSBWZXJ0aWNlcy5nZXRDbG9zZXN0VmVydGV4KGNpcmNsZS5jZW50ZXIsIHBvbHkudmVydGV4TGlzdCk7XHJcbiAgICAgICAgcmV0dXJuIGNsb3Nlc3RWZXJ0ZXguc3ViKGNpcmNsZS5jZW50ZXIpLm5vbCgpO1xyXG4gICAgfSxcclxuXHJcbiAgICBnZXRCb3VuZChjZW50ZXI6IFZlY3RvciwgcmFkaXVzOiBudW1iZXIpOiBCb3VuZCB7XHJcbiAgICAgICAgbGV0IG1pbiA9IG5ldyBWZWN0b3IoY2VudGVyLnggLSByYWRpdXMsIGNlbnRlci55IC0gcmFkaXVzKSxcclxuICAgICAgICAgICAgbWF4ID0gbmV3IFZlY3RvcihjZW50ZXIueCArIHJhZGl1cywgY2VudGVyLnkgKyByYWRpdXMpO1xyXG5cclxuICAgICAgICByZXR1cm4gbmV3IEJvdW5kKG1pbiwgbWF4KTtcclxuICAgIH0sXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflj5blnIblvaLlnKjnu5nlrprovbTkuIrnmoTmipXlvbFcclxuICAgICAqIEBwYXJhbSBheGlzIFxyXG4gICAgICovXHJcbiAgICBQcm9qZWN0aW9uKGNpcmNsZTogQXJjLCBheGlzOiBWZWN0b3IpOiB7bWluOiBudW1iZXIsIG1heDogbnVtYmVyfSB7XHJcbiAgICAgICAgbGV0IGxlbiA9IGNpcmNsZS5jZW50ZXIucHJvKGF4aXMpO1xyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBtaW46IGxlbiAtIGNpcmNsZS5yYWRpdXMsXHJcbiAgICAgICAgICAgIG1heDogbGVuICsgY2lyY2xlLnJhZGl1c1xyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5p+l55yL5ZyG5b2i5piv5ZCm5YyF5ZCr5p+Q5Liq54K5XHJcbiAgICAgKiBAcGFyYW0gY2lyY2xlIFxyXG4gICAgICogQHBhcmFtIHBvaW50IFxyXG4gICAgICovXHJcbiAgICBpc0NvbnRhaW5zKGNpcmNsZTogQXJjLCBwb2ludDogVmVjdG9yKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIGNpcmNsZS5yYWRpdXMqY2lyY2xlLnJhZGl1cyAtIGNpcmNsZS5jZW50ZXIuc3ViKHBvaW50KS5sZW5fcygpID4gMDsgXHJcbiAgICB9LFxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5L2N56e75ZyG5b2iXHJcbiAgICAgKiBAcGFyYW0gYXJjXHJcbiAgICAgKiBAcGFyYW0gZGlzdGFuY2Ug5L2N56e75ZCR6YePXHJcbiAgICAgKi9cclxuICAgIHRyYW5zbGF0ZShhcmM6IEFyYywgZGlzdGFuY2U6IFZlY3Rvcikge1xyXG4gICAgICAgIGFyYy5jZW50ZXIueCArPSBkaXN0YW5jZS54O1xyXG4gICAgICAgIGFyYy5jZW50ZXIueSArPSBkaXN0YW5jZS55O1xyXG5cclxuICAgICAgICAvLyDkvY3np7vljIXlm7Tnm5JcclxuICAgICAgICBhcmMuYm91bmQudHJhbnNsYXRlKGRpc3RhbmNlKTtcclxuICAgIH1cclxufTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Lines = void 0;\r\n/**\r\n * 线段操作工具\r\n * line: [start: Vector, end: Vector]\r\n */\r\nexports.Lines = {\r\n    /**\r\n     * 判断点在线段的哪一侧\r\n     * @param line 线段\r\n     * @param point 被检测点\r\n     */\r\n    side(line, point) {\r\n        let v1 = line[1].sub(line[0]), v2 = point.sub(line[0]), cor = v2.cro(v1);\r\n        // > 0：左侧；< 0：右侧；= 0：点在线上\r\n        if (cor === 0)\r\n            return cor;\r\n        else if (cor < 0) {\r\n            return -1;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    },\r\n    /**\r\n     * 判断两条线段是否相交\r\n     * 参考：https://www.cnblogs.com/tuyang1129/p/9390376.html\r\n     * @param line1 第一条线段\r\n     * @param line2 第二条线段\r\n     */\r\n    isIntersect(line1, line2) {\r\n        let point11 = line1[0], point12 = line1[1], point21 = line2[0], point22 = line2[1];\r\n        return this.side(line1, point21) !== this.side(line1, point22) && this.side(line2, point11) !== this.side(line2, point12);\r\n    },\r\n    /**\r\n     * 查看一条直线是否穿过一个多边形\r\n     * 原理：查看多边形的所有顶点是否在线段的同一侧\r\n     * @param line\r\n     * @param vertexList\r\n     */\r\n    isIntersectWithVertices(line, vertexList) {\r\n        let curCor, prevCor, len = vertexList.length, i;\r\n        for (i = 0; i < len; i++) {\r\n            curCor = this.side(line, vertexList[i]);\r\n            if (curCor === 0)\r\n                continue;\r\n            if (prevCor && prevCor !== curCor)\r\n                return true;\r\n            prevCor = curCor;\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * 求两线段的交点（相似三角形法）\r\n     * 参考：https://blog.csdn.net/Mr_HCW/article/details/82856056\r\n     * @param line1 第一条线段\r\n     * @param line2 第二条线段\r\n     */\r\n    intersection(line1, line2) {\r\n        let v1 = line1[1].sub(line1[0]), v2 = line2[1].sub(line2[0]), tv1 = line1[0].sub(line2[0]), tv2 = line1[1].sub(line2[1]), d1 = Math.abs(tv1.cro(v1) / v1.len()), d2 = Math.abs(tv2.cro(v1) / v1.len()), tv3 = v2.scl(d1 / (d1 + d2));\r\n        return line2[0].add(tv3);\r\n    },\r\n    /**\r\n     * 将线段投影到某个轴\r\n     * @param line\r\n     * @param axis\r\n     */\r\n    projection(line, axis) {\r\n        let n1 = line[0].pro(axis), n2 = line[1].pro(axis);\r\n        if (n1 > n2) {\r\n            return { min: n2, max: n1 };\r\n        }\r\n        else {\r\n            return { min: n1, max: n2 };\r\n        }\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tbW9uL2xpbmUudHM/NjJlMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFXQTs7O0dBR0c7QUFDVSxhQUFLLEdBQUc7SUFFakI7Ozs7T0FJRztJQUNILElBQUksQ0FBQyxJQUFpQixFQUFFLEtBQWE7UUFDakMsSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFDekIsRUFBRSxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQ3ZCLEdBQUcsR0FBRyxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRXJCLHlCQUF5QjtRQUN6QixJQUFHLEdBQUcsS0FBSyxDQUFDO1lBQUUsT0FBTyxHQUFHLENBQUM7YUFDcEIsSUFBRyxHQUFHLEdBQUcsQ0FBQyxFQUFFO1lBQ2IsT0FBTyxDQUFDLENBQUMsQ0FBQztTQUNiO2FBQ0k7WUFDRCxPQUFPLENBQUM7U0FDWDtJQUNMLENBQUM7SUFHRDs7Ozs7T0FLRztJQUNILFdBQVcsQ0FBQyxLQUFrQixFQUFFLEtBQWtCO1FBQzlDLElBQUksT0FBTyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFDbEIsT0FBTyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFDbEIsT0FBTyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFDbEIsT0FBTyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUV2QixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxLQUFLLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxLQUFLLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzlILENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILHVCQUF1QixDQUFDLElBQWlCLEVBQUUsVUFBc0I7UUFDN0QsSUFBSSxNQUFNLEVBQUUsT0FBTyxFQUFFLEdBQUcsR0FBRyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztRQUVoRCxLQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNyQixNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFFeEMsSUFBRyxNQUFNLEtBQUssQ0FBQztnQkFBRSxTQUFTO1lBRTFCLElBQUcsT0FBTyxJQUFJLE9BQU8sS0FBSyxNQUFNO2dCQUFFLE9BQU8sSUFBSSxDQUFDO1lBRTlDLE9BQU8sR0FBRyxNQUFNLENBQUM7U0FDcEI7UUFFRCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSCxZQUFZLENBQUMsS0FBa0IsRUFBRSxLQUFrQjtRQUMvQyxJQUFJLEVBQUUsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUMzQixFQUFFLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFDM0IsR0FBRyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQzVCLEdBQUcsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUM1QixFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUNyQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUNyQyxHQUFHLEdBQUcsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLEdBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQztRQUUvQixPQUFPLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxVQUFVLENBQUMsSUFBaUIsRUFBRSxJQUFZO1FBQ3RDLElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQ3RCLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRTNCLElBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRTtZQUNSLE9BQU8sRUFBRSxHQUFHLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsQ0FBQztTQUMvQjthQUNJO1lBQ0QsT0FBTyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxDQUFDO1NBQy9CO0lBQ0wsQ0FBQztDQUNKLENBQUMiLCJmaWxlIjoiNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZlY3RvciB9IGZyb20gXCIuLi9tYXRoL3ZlY3RvclwiO1xyXG5pbXBvcnQgeyBWZXJ0ZXhMaXN0IH0gZnJvbSBcIi4vdmVydGljZXNcIjtcclxuXHJcblxyXG4vKipcclxuICog57q/5q6157G75Z6LXHJcbiAqIFtzdGFydDoge3gsIHl9LCBlbmQ6IHt4LCB5fV1cclxuICovXHJcbmV4cG9ydCB0eXBlIExpbmVTZWdtZW50ID0gVmVjdG9yW107XHJcblxyXG5cclxuLyoqXHJcbiAqIOe6v+auteaTjeS9nOW3peWFt1xyXG4gKiBsaW5lOiBbc3RhcnQ6IFZlY3RvciwgZW5kOiBWZWN0b3JdXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgTGluZXMgPSB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliKTmlq3ngrnlnKjnur/mrrXnmoTlk6rkuIDkvqdcclxuICAgICAqIEBwYXJhbSBsaW5lIOe6v+autVxyXG4gICAgICogQHBhcmFtIHBvaW50IOiiq+ajgOa1i+eCuVxyXG4gICAgICovXHJcbiAgICBzaWRlKGxpbmU6IExpbmVTZWdtZW50LCBwb2ludDogVmVjdG9yKTogbnVtYmVyIHtcclxuICAgICAgICBsZXQgdjEgPSBsaW5lWzFdLnN1YihsaW5lWzBdKSxcclxuICAgICAgICAgICAgdjIgPSBwb2ludC5zdWIobGluZVswXSksXHJcbiAgICAgICAgICAgIGNvciA9IHYyLmNybyh2MSk7XHJcbiAgICBcclxuICAgICAgICAvLyA+IDDvvJrlt6bkvqfvvJs8IDDvvJrlj7PkvqfvvJs9IDDvvJrngrnlnKjnur/kuIpcclxuICAgICAgICBpZihjb3IgPT09IDApIHJldHVybiBjb3I7XHJcbiAgICAgICAgZWxzZSBpZihjb3IgPCAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAtMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiAxXHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliKTmlq3kuKTmnaHnur/mrrXmmK/lkKbnm7jkuqRcclxuICAgICAqIOWPguiAg++8mmh0dHBzOi8vd3d3LmNuYmxvZ3MuY29tL3R1eWFuZzExMjkvcC85MzkwMzc2Lmh0bWxcclxuICAgICAqIEBwYXJhbSBsaW5lMSDnrKzkuIDmnaHnur/mrrVcclxuICAgICAqIEBwYXJhbSBsaW5lMiDnrKzkuozmnaHnur/mrrVcclxuICAgICAqL1xyXG4gICAgaXNJbnRlcnNlY3QobGluZTE6IExpbmVTZWdtZW50LCBsaW5lMjogTGluZVNlZ21lbnQpOiBib29sZWFuIHtcclxuICAgICAgICBsZXQgcG9pbnQxMSA9IGxpbmUxWzBdLFxyXG4gICAgICAgICAgICBwb2ludDEyID0gbGluZTFbMV0sIFxyXG4gICAgICAgICAgICBwb2ludDIxID0gbGluZTJbMF0sXHJcbiAgICAgICAgICAgIHBvaW50MjIgPSBsaW5lMlsxXTtcclxuICAgIFxyXG4gICAgICAgIHJldHVybiB0aGlzLnNpZGUobGluZTEsIHBvaW50MjEpICE9PSB0aGlzLnNpZGUobGluZTEsIHBvaW50MjIpICYmIHRoaXMuc2lkZShsaW5lMiwgcG9pbnQxMSkgIT09IHRoaXMuc2lkZShsaW5lMiwgcG9pbnQxMik7XHJcbiAgICB9LFxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5p+l55yL5LiA5p2h55u057q/5piv5ZCm56m/6L+H5LiA5Liq5aSa6L655b2iXHJcbiAgICAgKiDljp/nkIbvvJrmn6XnnIvlpJrovrnlvaLnmoTmiYDmnInpobbngrnmmK/lkKblnKjnur/mrrXnmoTlkIzkuIDkvqdcclxuICAgICAqIEBwYXJhbSBsaW5lIFxyXG4gICAgICogQHBhcmFtIHZlcnRleExpc3QgXHJcbiAgICAgKi9cclxuICAgIGlzSW50ZXJzZWN0V2l0aFZlcnRpY2VzKGxpbmU6IExpbmVTZWdtZW50LCB2ZXJ0ZXhMaXN0OiBWZXJ0ZXhMaXN0KTogYm9vbGVhbiB7XHJcbiAgICAgICAgbGV0IGN1ckNvciwgcHJldkNvciwgbGVuID0gdmVydGV4TGlzdC5sZW5ndGgsIGk7XHJcblxyXG4gICAgICAgIGZvcihpID0gMDsgaSA8IGxlbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIGN1ckNvciA9IHRoaXMuc2lkZShsaW5lLCB2ZXJ0ZXhMaXN0W2ldKTtcclxuXHJcbiAgICAgICAgICAgIGlmKGN1ckNvciA9PT0gMCkgY29udGludWU7XHJcblxyXG4gICAgICAgICAgICBpZihwcmV2Q29yICYmIHByZXZDb3IgIT09IGN1ckNvcikgcmV0dXJuIHRydWU7XHJcblxyXG4gICAgICAgICAgICBwcmV2Q29yID0gY3VyQ29yO1xyXG4gICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfSxcclxuXHJcbiAgICAvKipcclxuICAgICAqIOaxguS4pOe6v+auteeahOS6pOeCue+8iOebuOS8vOS4ieinkuW9ouazle+8iVxyXG4gICAgICog5Y+C6ICD77yaaHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01yX0hDVy9hcnRpY2xlL2RldGFpbHMvODI4NTYwNTZcclxuICAgICAqIEBwYXJhbSBsaW5lMSDnrKzkuIDmnaHnur/mrrVcclxuICAgICAqIEBwYXJhbSBsaW5lMiDnrKzkuozmnaHnur/mrrVcclxuICAgICAqL1xyXG4gICAgaW50ZXJzZWN0aW9uKGxpbmUxOiBMaW5lU2VnbWVudCwgbGluZTI6IExpbmVTZWdtZW50KTogVmVjdG9yIHtcclxuICAgICAgICBsZXQgdjEgPSBsaW5lMVsxXS5zdWIobGluZTFbMF0pLFxyXG4gICAgICAgICAgICB2MiA9IGxpbmUyWzFdLnN1YihsaW5lMlswXSksXHJcbiAgICAgICAgICAgIHR2MSA9IGxpbmUxWzBdLnN1YihsaW5lMlswXSksXHJcbiAgICAgICAgICAgIHR2MiA9IGxpbmUxWzFdLnN1YihsaW5lMlsxXSksXHJcbiAgICAgICAgICAgIGQxID0gTWF0aC5hYnModHYxLmNybyh2MSkgLyB2MS5sZW4oKSksXHJcbiAgICAgICAgICAgIGQyID0gTWF0aC5hYnModHYyLmNybyh2MSkgLyB2MS5sZW4oKSksXHJcbiAgICAgICAgICAgIHR2MyA9IHYyLnNjbChkMS8oZDEgKyBkMikpO1xyXG5cclxuICAgICAgICByZXR1cm4gbGluZTJbMF0uYWRkKHR2Myk7XHJcbiAgICB9LFxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5bCG57q/5q615oqV5b2x5Yiw5p+Q5Liq6L20XHJcbiAgICAgKiBAcGFyYW0gbGluZSBcclxuICAgICAqIEBwYXJhbSBheGlzIFxyXG4gICAgICovXHJcbiAgICBwcm9qZWN0aW9uKGxpbmU6IExpbmVTZWdtZW50LCBheGlzOiBWZWN0b3IpOiB7IG1pbjogbnVtYmVyLCBtYXg6IG51bWJlciB9IHtcclxuICAgICAgICBsZXQgbjEgPSBsaW5lWzBdLnBybyhheGlzKSxcclxuICAgICAgICAgICAgbjIgPSBsaW5lWzFdLnBybyhheGlzKTtcclxuICAgICAgICBcclxuICAgICAgICBpZihuMSA+IG4yKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7IG1pbjogbjIsIG1heDogbjEgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7IG1pbjogbjEsIG1heDogbjIgfTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///5\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Bound = void 0;\r\nconst vertices_1 = __webpack_require__(2);\r\n// AABB包围盒（速度扩展的）\r\nclass Bound {\r\n    constructor(min, max) {\r\n        this.set(min, max);\r\n    }\r\n    /**\r\n     * 设置包围盒范围\r\n     *\r\n     *  min ----------|\r\n     *   |            |\r\n     *   |            |\r\n     *   | --------- max\r\n     *\r\n     * @param min 最小值\r\n     * @param max 最大值\r\n     */\r\n    set(min, max) {\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    /**\r\n     * 位移包围盒\r\n     * @param distance\r\n     */\r\n    translate(distance) {\r\n        this.min.x += distance.x;\r\n        this.min.y += distance.y;\r\n        this.max.x += distance.x;\r\n        this.max.y += distance.y;\r\n    }\r\n    /**\r\n     * 更新包围盒（通常发生在刚体发生旋转，min和max都要重新计算）\r\n     * @param vertexList\r\n     */\r\n    update(vertexList) {\r\n        let range = vertices_1.Vertices.getRange(vertexList);\r\n        this.min.x = range.min.x;\r\n        this.min.y = range.min.y;\r\n        this.max.x = range.max.x;\r\n        this.max.y = range.max.y;\r\n    }\r\n    /**\r\n     * 判断与另一个包围盒是否相交\r\n     * @param bound\r\n     */\r\n    isIntersect(bound) {\r\n        return (this.min.x < bound.max.x && this.max.x > bound.min.x) && (this.min.y < bound.max.y && bound.min.y < this.max.y);\r\n    }\r\n    /**\r\n     * 查看点是否在包围盒中\r\n     * @param point\r\n     */\r\n    isContains(point) {\r\n        return point.x > this.min.x && point.x < this.max.x && point.y > this.min.y && point.y < this.max.y;\r\n    }\r\n}\r\nexports.Bound = Bound;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29sbGlzaW9uL2JvdW5kLnRzP2QxMTciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsMENBQTBEO0FBRzFELGlCQUFpQjtBQUNqQixNQUFhLEtBQUs7SUFJZCxZQUFZLEdBQVcsRUFBRSxHQUFXO1FBQ2hDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7SUFFRDs7Ozs7Ozs7OztPQVVHO0lBQ0gsR0FBRyxDQUFDLEdBQVcsRUFBRSxHQUFXO1FBQ3hCLElBQUksQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDO1FBQ2YsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7SUFDbkIsQ0FBQztJQUVEOzs7T0FHRztJQUNILFNBQVMsQ0FBQyxRQUFnQjtRQUN0QixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksUUFBUSxDQUFDLENBQUMsQ0FBQztRQUN6QixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFFRDs7O09BR0c7SUFDSCxNQUFNLENBQUMsVUFBc0I7UUFDekIsSUFBSSxLQUFLLEdBQUcsbUJBQVEsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLENBQUM7UUFFMUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVEOzs7T0FHRztJQUNILFdBQVcsQ0FBQyxLQUFZO1FBQ3BCLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM1SCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsVUFBVSxDQUFDLEtBQWE7UUFDcEIsT0FBTyxLQUFLLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEtBQUssQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ3hHLENBQUM7Q0FDSjtBQS9ERCxzQkErREMiLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZlY3RvciB9IGZyb20gXCIuLi9tYXRoL3ZlY3RvclwiO1xyXG5pbXBvcnQgeyBWZXJ0ZXhMaXN0LCBWZXJ0aWNlcyB9IGZyb20gXCIuLi9jb21tb24vdmVydGljZXNcIjtcclxuXHJcblxyXG4vLyBBQUJC5YyF5Zu055uS77yI6YCf5bqm5omp5bGV55qE77yJXHJcbmV4cG9ydCBjbGFzcyBCb3VuZCB7XHJcbiAgICBtaW46IFZlY3RvcjtcclxuICAgIG1heDogVmVjdG9yO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG1pbjogVmVjdG9yLCBtYXg6IFZlY3Rvcikge1xyXG4gICAgICAgIHRoaXMuc2V0KG1pbiwgbWF4KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOiuvue9ruWMheWbtOebkuiMg+WbtFxyXG4gICAgICogXHJcbiAgICAgKiAgbWluIC0tLS0tLS0tLS18XHJcbiAgICAgKiAgIHwgICAgICAgICAgICB8XHJcbiAgICAgKiAgIHwgICAgICAgICAgICB8XHJcbiAgICAgKiAgIHwgLS0tLS0tLS0tIG1heFxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0gbWluIOacgOWwj+WAvFxyXG4gICAgICogQHBhcmFtIG1heCDmnIDlpKflgLxcclxuICAgICAqL1xyXG4gICAgc2V0KG1pbjogVmVjdG9yLCBtYXg6IFZlY3Rvcikge1xyXG4gICAgICAgIHRoaXMubWluID0gbWluO1xyXG4gICAgICAgIHRoaXMubWF4ID0gbWF4O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5L2N56e75YyF5Zu055uSXHJcbiAgICAgKiBAcGFyYW0gZGlzdGFuY2VcclxuICAgICAqL1xyXG4gICAgdHJhbnNsYXRlKGRpc3RhbmNlOiBWZWN0b3IpIHtcclxuICAgICAgICB0aGlzLm1pbi54ICs9IGRpc3RhbmNlLng7XHJcbiAgICAgICAgdGhpcy5taW4ueSArPSBkaXN0YW5jZS55O1xyXG4gICAgICAgIHRoaXMubWF4LnggKz0gZGlzdGFuY2UueDtcclxuICAgICAgICB0aGlzLm1heC55ICs9IGRpc3RhbmNlLnk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmm7TmlrDljIXlm7Tnm5LvvIjpgJrluLjlj5HnlJ/lnKjliJrkvZPlj5HnlJ/ml4vovazvvIxtaW7lkoxtYXjpg73opoHph43mlrDorqHnrpfvvIlcclxuICAgICAqIEBwYXJhbSB2ZXJ0ZXhMaXN0IFxyXG4gICAgICovXHJcbiAgICB1cGRhdGUodmVydGV4TGlzdDogVmVydGV4TGlzdCkge1xyXG4gICAgICAgIGxldCByYW5nZSA9IFZlcnRpY2VzLmdldFJhbmdlKHZlcnRleExpc3QpO1xyXG5cclxuICAgICAgICB0aGlzLm1pbi54ID0gcmFuZ2UubWluLng7XHJcbiAgICAgICAgdGhpcy5taW4ueSA9IHJhbmdlLm1pbi55O1xyXG4gICAgICAgIHRoaXMubWF4LnggPSByYW5nZS5tYXgueDtcclxuICAgICAgICB0aGlzLm1heC55ID0gcmFuZ2UubWF4Lnk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliKTmlq3kuI7lj6bkuIDkuKrljIXlm7Tnm5LmmK/lkKbnm7jkuqRcclxuICAgICAqIEBwYXJhbSBib3VuZCBcclxuICAgICAqL1xyXG4gICAgaXNJbnRlcnNlY3QoYm91bmQ6IEJvdW5kKTogQm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuICh0aGlzLm1pbi54IDwgYm91bmQubWF4LnggJiYgdGhpcy5tYXgueCA+IGJvdW5kLm1pbi54KSAmJiAodGhpcy5taW4ueSA8IGJvdW5kLm1heC55ICYmIGJvdW5kLm1pbi55IDwgdGhpcy5tYXgueSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmn6XnnIvngrnmmK/lkKblnKjljIXlm7Tnm5LkuK1cclxuICAgICAqIEBwYXJhbSBwb2ludCBcclxuICAgICAqL1xyXG4gICAgaXNDb250YWlucyhwb2ludDogVmVjdG9yKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHBvaW50LnggPiB0aGlzLm1pbi54ICYmIHBvaW50LnggPCB0aGlzLm1heC54ICYmIHBvaW50LnkgPiB0aGlzLm1pbi55ICYmIHBvaW50LnkgPCB0aGlzLm1heC55O1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Manifold = exports.Collision = exports.Contact = void 0;\r\nconst vector_1 = __webpack_require__(1);\r\nconst util_1 = __webpack_require__(0);\r\n// 接触点信息\r\nclass Contact {\r\n    constructor(vertex) {\r\n        this.vertex = new vector_1.Vector();\r\n        this.vertex.x = vertex.x;\r\n        this.vertex.y = vertex.y;\r\n        this.shareNormal = 0;\r\n        this.shareTangent = 0;\r\n        this.inverseMass = 0;\r\n        this.normalImpulse = 0;\r\n        this.tangentImpulse = 0;\r\n        this.bias = 0;\r\n    }\r\n}\r\nexports.Contact = Contact;\r\n/**\r\n * 一个碰撞结构，包含了碰撞的所有信息\r\n */\r\nclass Collision {\r\n    constructor() {\r\n        // 碰撞法线\r\n        this.normal = new vector_1.Vector();\r\n        // 碰撞切线\r\n        this.tangent = new vector_1.Vector();\r\n        // 穿透向量\r\n        this.penetration = new vector_1.Vector();\r\n    }\r\n}\r\nexports.Collision = Collision;\r\n;\r\n/**\r\n * 碰撞流形\r\n * 主要用于记录相互碰撞的刚体和进行碰撞缓存\r\n */\r\nclass Manifold {\r\n    constructor(collision, timeStamp) {\r\n        // 碰撞接触点\r\n        this.contacts = [];\r\n        this.bodyA = collision.bodyA;\r\n        this.bodyB = collision.bodyB;\r\n        this.partA = collision.partA;\r\n        this.partB = collision.partB;\r\n        this.id = util_1.Util.compositeId(this.partA.id, this.partB.id);\r\n        this.collision = collision;\r\n        this.contacts = collision.contacts;\r\n        this.isActive = true;\r\n        this.confirmedActive = true;\r\n        this.timeCreated = timeStamp;\r\n        this.timeUpdated = timeStamp;\r\n        this.friction = 0;\r\n        this.restitution = 0;\r\n        this.inverseMass = 0;\r\n        this.update(collision, timeStamp);\r\n    }\r\n    /**\r\n     * 更新流形\r\n     * @param collision 碰撞信息\r\n     * @param timeStamp 时间戳\r\n     */\r\n    update(collision, timeStamp) {\r\n        this.collision = collision;\r\n        // 如果该碰撞对真的发生了碰撞\r\n        if (collision.collide) {\r\n            let bodyA, bodyB;\r\n            bodyA = collision.bodyA;\r\n            bodyB = collision.bodyB;\r\n            this.friction = Math.sqrt(bodyA.friction * bodyB.friction);\r\n            this.restitution = (bodyA.restitution + bodyB.restitution) / 2;\r\n            this.inverseMass = bodyA.invMass + bodyB.invMass;\r\n            this.contacts = collision.contacts;\r\n            this.toggleActive(true, timeStamp);\r\n        }\r\n        // 否则\r\n        else {\r\n            this.isActive && this.toggleActive(false, timeStamp);\r\n        }\r\n    }\r\n    /**\r\n     * 更改流形激活状态\r\n     * @param active 激活状态\r\n     * @param timeStamp 时间戳\r\n     */\r\n    toggleActive(active, timeStamp) {\r\n        this.isActive = active;\r\n        if (active) {\r\n            this.timeUpdated = timeStamp;\r\n        }\r\n        else {\r\n            this.contacts = [];\r\n        }\r\n    }\r\n}\r\nexports.Manifold = Manifold;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///7\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\n/**\r\n * 刚体基类：所有刚体继承自Body\r\n */\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Body = exports.bodyType = void 0;\r\nconst vector_1 = __webpack_require__(1);\r\nconst util_1 = __webpack_require__(0);\r\nconst eventEmitter_1 = __webpack_require__(3);\r\n/**\r\n * 刚体类型\r\n * 圆形：0\r\n * 多边形：1\r\n * 胶囊体：2\r\n * 平面：3\r\n * 复合体：4\r\n */\r\nvar bodyType;\r\n(function (bodyType) {\r\n    bodyType[bodyType["circle"] = 0] = "circle";\r\n    bodyType[bodyType["polygon"] = 1] = "polygon";\r\n    bodyType[bodyType["capsule"] = 2] = "capsule";\r\n    bodyType[bodyType["composite"] = 3] = "composite";\r\n})(bodyType = exports.bodyType || (exports.bodyType = {}));\r\n;\r\nclass Body {\r\n    constructor(opt, type) {\r\n        this.id = util_1.Util.id();\r\n        this.type = type;\r\n        this.engine = null;\r\n        this.data = null;\r\n        this.origin = new vector_1.Vector(0, 0);\r\n        this.position = new vector_1.Vector(0, 0);\r\n        this.rotation = 0;\r\n        this.velocity = new vector_1.Vector(0, 0);\r\n        this.angularVelocity = 0;\r\n        this.motion = 0;\r\n        this.mass = 10;\r\n        this.area = 0;\r\n        this.density = 1;\r\n        this.inertia = 0;\r\n        this.invInertia = 0;\r\n        this.force = new vector_1.Vector(0, 0);\r\n        this.torque = 0;\r\n        this.friction = 0.4;\r\n        this.restitution = 1;\r\n        this.constraint = null;\r\n        this.fixed = false;\r\n        this.sleeping = false;\r\n        this.sleepCounter = 0;\r\n        this.mask = 1;\r\n        this.parts = [];\r\n        this.bound = null;\r\n        this.collisionNum = 0;\r\n        this.methods = {\r\n            filter: (maskA, maskB) => { return true; },\r\n            beforeAppend: (body) => { },\r\n            afterAppend: (body) => { },\r\n            beforeRemove: (body) => { },\r\n            afterRemove: (body) => { },\r\n            sleepStart: (body) => { },\r\n            sleepEnd: (body) => { }\r\n        };\r\n        util_1.Util.extend(this, opt);\r\n        if (this.fixed)\r\n            this.sleeping = true;\r\n        this.init(opt);\r\n        this.area = this.getArea();\r\n        this.density = this.getDensity();\r\n        this.invMass = this.getInvMass();\r\n        this.position = this.getCentroid();\r\n        this.inertia = this.getInertia();\r\n        this.invInertia = this.getInvInertia();\r\n        this.motion = 0;\r\n        // 设置渲染函数\r\n        this.setRender(() => { });\r\n    }\r\n    /**\r\n     * 初始化一些数据\r\n     */\r\n    init(opt) { }\r\n    /**\r\n     * 计算质量倒数\r\n     */\r\n    getInvMass() {\r\n        return (this.mass === 0 || this.fixed) ? 0 : 1 / this.mass;\r\n    }\r\n    /**\r\n     * 计算转动惯量倒数\r\n     */\r\n    getInvInertia() {\r\n        return (this.inertia === 0 || this.fixed) ? 0 : 1 / this.inertia;\r\n    }\r\n    /**\r\n     * 计算密度\r\n     */\r\n    getDensity() {\r\n        return this.mass / this.area;\r\n    }\r\n    /**\r\n     * 计算面积\r\n     * @override\r\n     */\r\n    getArea() {\r\n        return 1;\r\n    }\r\n    /**\r\n     * 计算质心\r\n     * @override\r\n     */\r\n    getCentroid() {\r\n        return null;\r\n    }\r\n    /**\r\n     * 计算转动惯量\r\n     * @override\r\n     */\r\n    getInertia() {\r\n        return 1;\r\n    }\r\n    /**\r\n     * 设置用户想要携带的信息数据\r\n     * @param data 数据\r\n     */\r\n    setData(data) {\r\n        if (data !== null && data !== undefined) {\r\n            this.data = data;\r\n        }\r\n    }\r\n    /**\r\n     * 设置刚体的引擎属性\r\n     * @param engine\r\n     */\r\n    setEngine(engine) {\r\n        this.engine = engine;\r\n    }\r\n    /**\r\n     * 设置渲染函数\r\n     * @param fn\r\n     */\r\n    setRender(fn) {\r\n        if (fn && typeof fn === \'function\')\r\n            this.render = fn;\r\n    }\r\n    /**\r\n     * 位移刚体\r\n     * @override\r\n     * @param distance 位移向量\r\n     */\r\n    translate(distance) { }\r\n    /**\r\n     * 旋转刚体\r\n     * @override\r\n     * @param angle 角度\r\n     * @param point 绕点\r\n     */\r\n    rotate(angle, point) { }\r\n    /**\r\n     * 发生碰撞\r\n     * @param body\r\n     */\r\n    collide(body) {\r\n        this.collisionNum++;\r\n        // 触发碰撞钩子\r\n        eventEmitter_1.Event.emit(this, \'collide\', this, body);\r\n    }\r\n    /**\r\n     * 发生分离\r\n     */\r\n    separate() {\r\n        this.collisionNum--;\r\n        // 触发分离钩子\r\n        if (this.collisionNum === 0) {\r\n            eventEmitter_1.Event.emit(this, \'isolate\', this);\r\n        }\r\n    }\r\n    /**\r\n     * 应用冲量\r\n     * @param impulse 冲量\r\n     * @param offset 作用点（本地坐标系）\r\n     * @param dt 步长\r\n     */\r\n    applyImpulse(impulse, offset) {\r\n        this.velocity.x += impulse.x * this.invMass;\r\n        this.velocity.y += impulse.y * this.invMass;\r\n        this.angularVelocity += this.invInertia * offset.cro(impulse);\r\n    }\r\n    /**\r\n     * 应用力\r\n     * @param force 力\r\n     * @param offset 作用点（本地坐标系）\r\n     */\r\n    applyForce(force, offset) {\r\n        this.force.x += force.x;\r\n        this.force.y += force.y;\r\n        if (offset !== undefined) {\r\n            this.torque += offset.cro(this.force);\r\n        }\r\n    }\r\n    /**\r\n     * 积分受力\r\n     * @param dt\r\n     */\r\n    integrateForces(dt) {\r\n        if (this.fixed || this.sleeping) {\r\n            return;\r\n        }\r\n        this.velocity.x += dt * this.force.x * this.invMass;\r\n        this.velocity.y += dt * this.force.y * this.invMass;\r\n        this.angularVelocity += dt * this.torque * this.invInertia;\r\n    }\r\n    /**\r\n     * 积分速度\r\n     * - 使用隐式欧拉积分\r\n     * @param dt\r\n     */\r\n    integrateVelocities(dt) {\r\n        if (this.fixed || this.sleeping) {\r\n            return;\r\n        }\r\n        let dx = dt * this.velocity.x, dy = dt * this.velocity.y, dr = dt * this.angularVelocity;\r\n        this.position.x += dx;\r\n        this.position.y += dy;\r\n        this.rotation += dr;\r\n        //位移刚体\r\n        this.translate(new vector_1.Vector(dx, dy));\r\n        // 旋转刚体\r\n        if (this.angularVelocity !== 0) {\r\n            this.rotate(dr, this.position);\r\n        }\r\n        // 更新标量速度\r\n        let speed = Math.hypot(dx, dy), angularSpeed = Math.abs(dr);\r\n        //更新动量\r\n        this.motion = speed * speed + angularSpeed * angularSpeed;\r\n        this.force.x = 0;\r\n        this.force.y = 0;\r\n        this.torque = 0;\r\n    }\r\n}\r\nexports.Body = Body;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\n/**\r\n * 多边形刚体\r\n */\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Polygon = void 0;\r\nconst body_1 = __webpack_require__(8);\r\nconst vertices_1 = __webpack_require__(2);\r\nclass Polygon extends body_1.Body {\r\n    constructor(opt) {\r\n        super(opt, body_1.bodyType.polygon);\r\n        // 用户一开始便设置了旋转的情况\r\n        if (this.rotation) {\r\n            this.rotate(this.rotation, this.position);\r\n        }\r\n    }\r\n    init(opt) {\r\n        // 将向量转化为顶点\r\n        if (opt.vertices) {\r\n            this.vertexList = opt.vertices.slice(0);\r\n        }\r\n        // 顶点数 > 3才构成多边形\r\n        if (this.vertexList && this.vertexList.length < 3)\r\n            return;\r\n        this.parts = this.getParts();\r\n    }\r\n    /**\r\n     * 获取世界坐标\r\n     */\r\n    getPoly() {\r\n        return vertices_1.Vertices.create(this, vertices_1.Vertices.transform2World(this.origin, this.vertexList));\r\n    }\r\n    getArea() {\r\n        return Math.abs(vertices_1.Vertices.getArea(this.vertexList));\r\n    }\r\n    getCentroid() {\r\n        return vertices_1.Vertices.getCentroid(this.vertexList);\r\n    }\r\n    getInertia() {\r\n        return vertices_1.Vertices.getInertia(this.vertexList, this.mass, this.position);\r\n    }\r\n    translate(distance) {\r\n        // 位移图形原点\r\n        this.origin.x += distance.x;\r\n        this.origin.y += distance.y;\r\n        // 位移多边形顶点\r\n        vertices_1.Vertices.translate(this.poly, distance);\r\n        // 若多边形是凹多边形, 位移子多边形包围盒\r\n        if (this.isConcave) {\r\n            for (let i = 0; i < this.parts.length; i++) {\r\n                let part = this.parts[i];\r\n                part.center.x += distance.x;\r\n                part.center.y += distance.y;\r\n                part.bound.translate(distance);\r\n            }\r\n        }\r\n    }\r\n    rotate(radian, point) {\r\n        // 旋转顶点\r\n        vertices_1.Vertices.rotate(this.poly, radian, point);\r\n        // 若多边形是凹多边形, 更新子多边形包围盒\r\n        if (this.isConcave) {\r\n            for (let i = 0; i < this.parts.length; i++) {\r\n                let part = this.parts[i];\r\n                part.center.rot(radian, point, part.center);\r\n                part.bound.update(part.vertexList);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 分割多边形\r\n     * 若是凹多边形，则先分割为多个凸多边形，然后凸多边形再分割为小三角形\r\n     * 若是凸多边形，则直接分割为小三角形\r\n     */\r\n    getParts() {\r\n        let parts = [], poly = this.getPoly();\r\n        // 若是凹多边形\r\n        if (vertices_1.Vertices.isConcave(poly.vertexList)) {\r\n            this.isConcave = true;\r\n            parts = vertices_1.Vertices.divide(poly);\r\n        }\r\n        // 若是凸多边形\r\n        else {\r\n            parts = [poly];\r\n        }\r\n        this.bound = poly.bound;\r\n        this.poly = poly;\r\n        return parts;\r\n    }\r\n}\r\nexports.Polygon = Polygon;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n')},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Torque = void 0;\r\nconst interface_1 = __webpack_require__(11);\r\nconst bodiesFactory_1 = __webpack_require__(22);\r\nconst util_1 = __webpack_require__(0);\r\nconst line_1 = __webpack_require__(5);\r\nconst arcs_1 = __webpack_require__(4);\r\nconst vector_1 = __webpack_require__(1);\r\ninterface_1.TorqueWorld['body'] = new bodiesFactory_1.BodiesFactory();\r\ninterface_1.TorqueWorld['util'] = util_1.Util;\r\ninterface_1.TorqueWorld['math'] = {\r\n    vector: (x, y) => new vector_1.Vector(x, y)\r\n};\r\ninterface_1.TorqueWorld['geometry'] = {\r\n    vertex: vector_1.Vector,\r\n    line: line_1.Lines,\r\n    arcs: arcs_1.Arcs\r\n};\r\nexports.Torque = interface_1.TorqueWorld;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdG9ycXVlLnRzP2JhZmYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNENBQStDO0FBQy9DLGdEQUFxRDtBQUNyRCxzQ0FBcUM7QUFDckMsc0NBQXNDO0FBQ3RDLHNDQUFxQztBQUNyQyx3Q0FBdUM7QUFFdkMsdUJBQVcsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLDZCQUFhLEVBQUUsQ0FBQztBQUMxQyx1QkFBVyxDQUFDLE1BQU0sQ0FBQyxHQUFHLFdBQUksQ0FBQztBQUMzQix1QkFBVyxDQUFDLE1BQU0sQ0FBQyxHQUFHO0lBQ2xCLE1BQU0sRUFBRSxDQUFDLENBQVMsRUFBRSxDQUFTLEVBQUUsRUFBRSxDQUFDLElBQUksZUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7Q0FDckQsQ0FBQztBQUNGLHVCQUFXLENBQUMsVUFBVSxDQUFDLEdBQUc7SUFDdEIsTUFBTSxFQUFFLGVBQU07SUFDZCxJQUFJLEVBQUUsWUFBSztJQUNYLElBQUksRUFBRSxXQUFJO0NBQ2IsQ0FBQztBQUVXLGNBQU0sR0FBRyx1QkFBVyxDQUFDIiwiZmlsZSI6IjEwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9ycXVlV29ybGQgfSBmcm9tIFwiLi9jb3JlL2ludGVyZmFjZVwiO1xyXG5pbXBvcnQgeyBCb2RpZXNGYWN0b3J5IH0gZnJvbSBcIi4vY29yZS9ib2RpZXNGYWN0b3J5XCI7XHJcbmltcG9ydCB7IFV0aWwgfSBmcm9tIFwiLi9jb21tb24vdXRpbFwiO1xyXG5pbXBvcnQgeyBMaW5lcyB9IGZyb20gXCIuL2NvbW1vbi9saW5lXCI7XHJcbmltcG9ydCB7IEFyY3MgfSBmcm9tIFwiLi9jb21tb24vYXJjc1wiO1xyXG5pbXBvcnQgeyBWZWN0b3IgfSBmcm9tIFwiLi9tYXRoL3ZlY3RvclwiO1xyXG5cclxuVG9ycXVlV29ybGRbJ2JvZHknXSA9IG5ldyBCb2RpZXNGYWN0b3J5KCk7XHJcblRvcnF1ZVdvcmxkWyd1dGlsJ10gPSBVdGlsO1xyXG5Ub3JxdWVXb3JsZFsnbWF0aCddID0ge1xyXG4gICAgdmVjdG9yOiAoeDogbnVtYmVyLCB5OiBudW1iZXIpID0+IG5ldyBWZWN0b3IoeCwgeSlcclxufTtcclxuVG9ycXVlV29ybGRbJ2dlb21ldHJ5J10gPSB7XHJcbiAgICB2ZXJ0ZXg6IFZlY3RvcixcclxuICAgIGxpbmU6IExpbmVzLFxyXG4gICAgYXJjczogQXJjc1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IFRvcnF1ZSA9IFRvcnF1ZVdvcmxkOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///10\n")},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TorqueWorld = void 0;\r\nconst util_1 = __webpack_require__(0);\r\nconst engine_1 = __webpack_require__(12);\r\nconst eventEmitter_1 = __webpack_require__(3);\r\n// Torque主类\r\nclass TorqueWorld {\r\n    constructor(width, height, opt) {\r\n        this.engine = new engine_1.Engine(width, height, opt);\r\n    }\r\n    /**\r\n     * 增加刚体\r\n     * @param body\r\n     */\r\n    append(body) {\r\n        if (Array.isArray(body)) {\r\n            body.map(b => this.append(b));\r\n        }\r\n        else {\r\n            eventEmitter_1.Event.emit(body, 'beforeAppend', body);\r\n            body.setEngine(this.engine);\r\n            this.engine.bodies.push(body);\r\n            eventEmitter_1.Event.emit(body, 'afterAppend', body);\r\n        }\r\n    }\r\n    /**\r\n     * 移除刚体\r\n     * @param body\r\n     */\r\n    remove(body) {\r\n        eventEmitter_1.Event.emit(body, 'beforeRemove', body);\r\n        util_1.Util.remove(this.engine.bodies, body);\r\n        eventEmitter_1.Event.emit(body, 'afterRemove', body);\r\n    }\r\n    /**\r\n     * 清空引擎\r\n     */\r\n    clear() {\r\n        this.engine.bodies.map(body => this.remove(body));\r\n        this.engine.manifoldTable.clear();\r\n    }\r\n    /**\r\n     * 克隆刚体\r\n     * @param body\r\n     */\r\n    clone(body) {\r\n        return null;\r\n    }\r\n    /**\r\n     * 设置引擎参数\r\n     * @param opt\r\n     */\r\n    setEngineOption(opt) {\r\n        this.engine.setOption(opt);\r\n    }\r\n    /**\r\n     * 添加时间步函数\r\n     * @param fn\r\n     */\r\n    step(fn) {\r\n        this.engine.timeStepper.addStep(fn);\r\n    }\r\n    /**\r\n     * 开始运行\r\n     * @param frameNumLimit 限制运行多少帧停下\r\n     */\r\n    start(frameNumLimit) {\r\n        this.engine.timeStepper.start(frameNumLimit);\r\n    }\r\n    /**\r\n     * 暂停运行\r\n     */\r\n    pause() {\r\n        this.engine.timeStepper.pause();\r\n    }\r\n}\r\nexports.TorqueWorld = TorqueWorld;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29yZS9pbnRlcmZhY2UudHM/MjY1ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxzQ0FBc0M7QUFDdEMseUNBQTZDO0FBQzdDLDhDQUE4QztBQU85QyxXQUFXO0FBQ1gsTUFBYSxXQUFXO0lBR3BCLFlBQVksS0FBYSxFQUFFLE1BQWMsRUFBRSxHQUFlO1FBQ3RELElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxlQUFNLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsTUFBTSxDQUFDLElBQW1CO1FBQ3RCLElBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNwQixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ2pDO2FBQ0k7WUFDRCxvQkFBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsY0FBYyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzVCLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM5QixvQkFBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ3pDO0lBQ0wsQ0FBQztJQUNEOzs7T0FHRztJQUNILE1BQU0sQ0FBQyxJQUFVO1FBQ2Isb0JBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLGNBQWMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUN2QyxXQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3RDLG9CQUFLLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVEOztPQUVHO0lBQ0gsS0FBSztRQUNELElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsS0FBSyxDQUFDLElBQVU7UUFDWixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsZUFBZSxDQUFDLEdBQWM7UUFDMUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVEOzs7T0FHRztJQUNILElBQUksQ0FBQyxFQUF3QjtRQUN6QixJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVEOzs7T0FHRztJQUNILEtBQUssQ0FBQyxhQUFzQjtRQUN4QixJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVEOztPQUVHO0lBQ0gsS0FBSztRQUNELElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3BDLENBQUM7Q0FDSjtBQTlFRCxrQ0E4RUMiLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb2R5IH0gZnJvbSBcIi4uL2JvZHkvYm9keVwiO1xyXG5pbXBvcnQgeyBVdGlsIH0gZnJvbSBcIi4uL2NvbW1vbi91dGlsXCI7XHJcbmltcG9ydCB7IEVuZ2luZSwgRW5naW5lT3B0IH0gZnJvbSBcIi4vZW5naW5lXCI7XHJcbmltcG9ydCB7IEV2ZW50IH0gZnJvbSBcIi4uL2V2ZW50L2V2ZW50RW1pdHRlclwiO1xyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4vLyBUb3JxdWXkuLvnsbtcclxuZXhwb3J0IGNsYXNzIFRvcnF1ZVdvcmxkIHtcclxuICAgIHByaXZhdGUgZW5naW5lOiBFbmdpbmU7XHJcblxyXG4gICAgY29uc3RydWN0b3Iod2lkdGg6IG51bWJlciwgaGVpZ2h0OiBudW1iZXIsIG9wdD86IEVuZ2luZU9wdCkge1xyXG4gICAgICAgIHRoaXMuZW5naW5lID0gbmV3IEVuZ2luZSh3aWR0aCwgaGVpZ2h0LCBvcHQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5aKe5Yqg5Yia5L2TXHJcbiAgICAgKiBAcGFyYW0gYm9keSBcclxuICAgICAqL1xyXG4gICAgYXBwZW5kKGJvZHk6IEJvZHkgfCBCb2R5W10pIHtcclxuICAgICAgICBpZihBcnJheS5pc0FycmF5KGJvZHkpKSB7XHJcbiAgICAgICAgICAgIGJvZHkubWFwKGIgPT4gdGhpcy5hcHBlbmQoYikpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgRXZlbnQuZW1pdChib2R5LCAnYmVmb3JlQXBwZW5kJywgYm9keSk7XHJcbiAgICAgICAgICAgIGJvZHkuc2V0RW5naW5lKHRoaXMuZW5naW5lKTtcclxuICAgICAgICAgICAgdGhpcy5lbmdpbmUuYm9kaWVzLnB1c2goYm9keSk7XHJcbiAgICAgICAgICAgIEV2ZW50LmVtaXQoYm9keSwgJ2FmdGVyQXBwZW5kJywgYm9keSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDnp7vpmaTliJrkvZNcclxuICAgICAqIEBwYXJhbSBib2R5IFxyXG4gICAgICovXHJcbiAgICByZW1vdmUoYm9keTogQm9keSkge1xyXG4gICAgICAgIEV2ZW50LmVtaXQoYm9keSwgJ2JlZm9yZVJlbW92ZScsIGJvZHkpO1xyXG4gICAgICAgIFV0aWwucmVtb3ZlKHRoaXMuZW5naW5lLmJvZGllcywgYm9keSk7XHJcbiAgICAgICAgRXZlbnQuZW1pdChib2R5LCAnYWZ0ZXJSZW1vdmUnLCBib2R5KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOa4heepuuW8leaTjlxyXG4gICAgICovXHJcbiAgICBjbGVhcigpIHtcclxuICAgICAgICB0aGlzLmVuZ2luZS5ib2RpZXMubWFwKGJvZHkgPT4gdGhpcy5yZW1vdmUoYm9keSkpO1xyXG4gICAgICAgIHRoaXMuZW5naW5lLm1hbmlmb2xkVGFibGUuY2xlYXIoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWFi+mahuWImuS9k1xyXG4gICAgICogQHBhcmFtIGJvZHkgXHJcbiAgICAgKi9cclxuICAgIGNsb25lKGJvZHk6IEJvZHkpOiBCb2R5IHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOiuvue9ruW8leaTjuWPguaVsFxyXG4gICAgICogQHBhcmFtIG9wdCBcclxuICAgICAqL1xyXG4gICAgc2V0RW5naW5lT3B0aW9uKG9wdDogRW5naW5lT3B0KSB7XHJcbiAgICAgICAgdGhpcy5lbmdpbmUuc2V0T3B0aW9uKG9wdCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmt7vliqDml7bpl7TmraXlh73mlbBcclxuICAgICAqIEBwYXJhbSBmbiBcclxuICAgICAqL1xyXG4gICAgc3RlcChmbjogKGR0OiBudW1iZXIpID0+IHZvaWQpIHtcclxuICAgICAgICB0aGlzLmVuZ2luZS50aW1lU3RlcHBlci5hZGRTdGVwKGZuKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOW8gOWni+i/kOihjFxyXG4gICAgICogQHBhcmFtIGZyYW1lTnVtTGltaXQg6ZmQ5Yi26L+Q6KGM5aSa5bCR5bin5YGc5LiLXHJcbiAgICAgKi9cclxuICAgIHN0YXJ0KGZyYW1lTnVtTGltaXQ/OiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLmVuZ2luZS50aW1lU3RlcHBlci5zdGFydChmcmFtZU51bUxpbWl0KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaaguWBnOi/kOihjFxyXG4gICAgICovXHJcbiAgICBwYXVzZSgpIHtcclxuICAgICAgICB0aGlzLmVuZ2luZS50aW1lU3RlcHBlci5wYXVzZSgpO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///11\n")},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Engine = void 0;\r\nconst vector_1 = __webpack_require__(1);\r\nconst util_1 = __webpack_require__(0);\r\nconst timeStepper_1 = __webpack_require__(13);\r\nconst detector_1 = __webpack_require__(14);\r\nconst resolver_1 = __webpack_require__(18);\r\nconst sleeping_1 = __webpack_require__(20);\r\nconst manifoldTable_1 = __webpack_require__(21);\r\nconst eventEmitter_1 = __webpack_require__(3);\r\n// 主引擎\r\nclass Engine {\r\n    constructor(width, height, opt) {\r\n        this.width = width || 0;\r\n        this.height = height || 0;\r\n        this.gravity = new vector_1.Vector(0, 9);\r\n        this.enableSleeping = true;\r\n        this.enableCollisionDetection = true;\r\n        this.enableCollisionResolve = true;\r\n        this.methods = {\r\n            onTickStart: () => { },\r\n            onTickEnd: () => { },\r\n            beforeUpdate: () => { },\r\n            afterUpdate: () => { },\r\n            beforeRender: () => { },\r\n            afterRender: () => { },\r\n            onStart: () => { },\r\n            onPause: () => { },\r\n            collisionStart: (manifolds) => { },\r\n            collisionActive: (manifolds) => { },\r\n            collisionEnd: (manifolds) => { }\r\n        };\r\n        util_1.Util.merge(this, opt);\r\n        this.bodies = [];\r\n        this.timeStepper = new timeStepper_1.TimeStepper(this, opt);\r\n        this.detector = new detector_1.Detector(this, opt);\r\n        this.manifoldTable = new manifoldTable_1.ManifoldTable(opt);\r\n        this.resolver = new resolver_1.Resolver(this, opt);\r\n        this.sleeping = new sleeping_1.Sleeping(opt);\r\n    }\r\n    /**\r\n     * 引擎更新\r\n     * @param dt 步长\r\n     * @param timeStamp 时间戳\r\n     */\r\n    update(dt, timeStamp) {\r\n        let broadPhasePair = [], collisions = [];\r\n        if (this.enableSleeping) {\r\n            // 更新刚体的休眠/唤醒状态\r\n            this.sleeping.update(this.bodies);\r\n        }\r\n        for (let i = 0; i < this.bodies.length; i++) {\r\n            let force = this.gravity.scl(this.bodies[i].mass * 50);\r\n            // 应用受力\r\n            this.bodies[i].applyForce(force);\r\n            // 积分受力\r\n            this.bodies[i].integrateForces(dt);\r\n        }\r\n        // 解决所有约束\r\n        this.resolver.solveConstraint();\r\n        // 是否开启碰撞检测\r\n        if (this.enableCollisionDetection) {\r\n            // 粗阶段检测\r\n            broadPhasePair = this.detector.broadPhase.detect(this.bodies);\r\n            // 细阶段检测\r\n            collisions = this.detector.narrowPhase.detect(broadPhasePair);\r\n            // console.log(collisions);\r\n            this.manifoldTable.update(collisions, timeStamp);\r\n            // 移除缓存表超时的碰撞对\r\n            this.manifoldTable.filter(timeStamp);\r\n            // 是否开启了碰撞求解\r\n            if (this.enableCollisionResolve) {\r\n                // 若发现有休眠的刚体发生碰撞，则唤醒\r\n                if (this.enableSleeping)\r\n                    this.sleeping.afterCollision(this.manifoldTable.list);\r\n                // 求解碰撞约束\r\n                this.resolver.solveCollision(this.manifoldTable.list, dt);\r\n            }\r\n        }\r\n        for (let i = 0; i < this.bodies.length; i++) {\r\n            // 积分速度\r\n            this.bodies[i].integrateVelocities(dt);\r\n        }\r\n        this.manifoldTable.collisionStart.length &&\r\n            eventEmitter_1.Event.emit(this, 'collisionStart', this.manifoldTable.collisionStart);\r\n        this.manifoldTable.collisionActive.length &&\r\n            eventEmitter_1.Event.emit(this, 'collisionActive', this.manifoldTable.collisionActive);\r\n        this.manifoldTable.collisionEnd.length &&\r\n            eventEmitter_1.Event.emit(this, 'collisionEnd', this.manifoldTable.collisionEnd);\r\n    }\r\n    /**\r\n     * 渲染物理引擎\r\n     * @param dt\r\n     */\r\n    render(dt) {\r\n        for (let i = 0; i < this.bodies.length; i++) {\r\n            if (this.bodies[i].sleeping || this.bodies[i].fixed) {\r\n                continue;\r\n            }\r\n            // 渲染刚体\r\n            this.bodies[i].render(this.bodies[i], dt);\r\n        }\r\n    }\r\n    /**\r\n     * 设置引擎参数\r\n     * @param opt\r\n     */\r\n    setOption(opt) {\r\n        util_1.Util.merge(this, opt);\r\n        util_1.Util.merge(this.timeStepper, opt);\r\n        util_1.Util.merge(this.manifoldTable, opt);\r\n        util_1.Util.merge(this.resolver, opt);\r\n    }\r\n}\r\nexports.Engine = Engine;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///12\n")},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TimeStepper = void 0;\r\nconst util_1 = __webpack_require__(0);\r\nconst eventEmitter_1 = __webpack_require__(3);\r\n/**\r\n * 时间步迭代器\r\n */\r\nclass TimeStepper {\r\n    constructor(engine, opt) {\r\n        this.engine = engine;\r\n        this.status = false;\r\n        this.tickProcessorList = [];\r\n        this.fps = opt.fps || 60;\r\n        this.deltaFixed = opt.deltaFixed === undefined ? true : opt.deltaFixed;\r\n        this.deltaRecordLimit = 60;\r\n        util_1.Util.merge(this, opt);\r\n        this.dt = 1 / this.fps;\r\n        this.dtMin = this.dt;\r\n        this.dtMax = this.dt * 2;\r\n        this.frameCounter = 0;\r\n        this.frameStamp = 0;\r\n        this.prevTime = 0;\r\n        this.frameTotal = 0;\r\n        this.frameNumLimit = -1;\r\n        this.deltaRecorder = [];\r\n    }\r\n    /**\r\n     * 一次tick，也就是一次模拟\r\n     * @param timeStamp 当前时间戳\r\n     */\r\n    tick(timeStamp = 0) {\r\n        let dt;\r\n        // 固定dt\r\n        if (this.deltaFixed === false) {\r\n            // 动态计算dt\r\n            dt = (timeStamp - this.prevTime) || this.dt;\r\n            this.prevTime = timeStamp;\r\n            // 根据过去的变化步长情况，优化当前步长，使引擎稳定\r\n            this.deltaRecorder.push(dt);\r\n            this.deltaRecorder = this.deltaRecorder.slice(-this.deltaRecordLimit);\r\n            dt = util_1.Util.clamp(Math.min.apply(Math, this.deltaRecorder), this.dtMin, this.dtMax);\r\n            // 更新dt\r\n            this.dt = dt;\r\n        }\r\n        // 动态计算fps\r\n        this.frameCounter += 1;\r\n        if (timeStamp - this.frameStamp >= 1000) {\r\n            this.fps = this.frameCounter * ((timeStamp - this.frameStamp) / 1000);\r\n            this.frameStamp = timeStamp;\r\n            this.frameCounter = 0;\r\n        }\r\n        eventEmitter_1.Event.emit(this.engine, 'onTickStart');\r\n        // 更新物理引擎\r\n        eventEmitter_1.Event.emit(this.engine, 'beforeUpdate');\r\n        this.engine.update(this.dt, timeStamp);\r\n        eventEmitter_1.Event.emit(this.engine, 'afterUpdate');\r\n        // 渲染物理引擎\r\n        eventEmitter_1.Event.emit(this.engine, 'beforeRender');\r\n        this.engine.render(this.dt);\r\n        eventEmitter_1.Event.emit(this.engine, 'afterRender');\r\n        // 执行用户自定义函数\r\n        this.tickProcessorList.map(fn => fn(timeStamp));\r\n        eventEmitter_1.Event.emit(this.engine, 'onTickEnd');\r\n        this.frameTotal++;\r\n        if (this.frameNumLimit > 0 && this.frameTotal >= this.frameNumLimit) {\r\n            this.pause();\r\n            return;\r\n        }\r\n        this.raf = window.requestAnimationFrame(this.tick.bind(this));\r\n    }\r\n    /**\r\n     * 在一次tick中增加额外自定义的处理函数\r\n     * @param fn 要增加的处理函数\r\n     */\r\n    addStep(fn) {\r\n        typeof fn === 'function' && this.tickProcessorList.push(fn);\r\n    }\r\n    /**\r\n     * 开始模拟\r\n     * @param frameNumLimit 限制运行多少帧停下\r\n     */\r\n    start(frameNumLimit) {\r\n        if (this.status)\r\n            return;\r\n        if (frameNumLimit && frameNumLimit > 0) {\r\n            this.frameNumLimit = frameNumLimit;\r\n        }\r\n        this.status = true;\r\n        eventEmitter_1.Event.emit(this.engine, 'onStart');\r\n        this.tick();\r\n    }\r\n    /**\r\n     * 暂停模拟\r\n     */\r\n    pause() {\r\n        if (!this.status)\r\n            return;\r\n        this.status = false;\r\n        this.frameTotal = 0;\r\n        eventEmitter_1.Event.emit(this.engine, 'pause');\r\n        window.cancelAnimationFrame(this.raf);\r\n    }\r\n}\r\nexports.TimeStepper = TimeStepper;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///13\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Detector = void 0;\r\nconst broadPhase_1 = __webpack_require__(15);\r\nconst narrowPhase_1 = __webpack_require__(16);\r\n/**\r\n * 碰撞检测\r\n */\r\nclass Detector {\r\n    constructor(engine, opt) {\r\n        this.broadPhase = new broadPhase_1.BroadPhase(engine);\r\n        this.narrowPhase = new narrowPhase_1.NarrowPhase(engine);\r\n    }\r\n}\r\nexports.Detector = Detector;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29sbGlzaW9uL2RldGVjdG9yLnRzPzhiODYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNkNBQTBDO0FBQzFDLDhDQUE0QztBQUc1Qzs7R0FFRztBQUlILE1BQWEsUUFBUTtJQU1qQixZQUFZLE1BQWMsRUFBRSxHQUFjO1FBQ3RDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSx1QkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSx5QkFBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQy9DLENBQUM7Q0FDSjtBQVZELDRCQVVDIiwiZmlsZSI6IjE0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQnJvYWRQaGFzZSB9IGZyb20gXCIuL2Jyb2FkUGhhc2VcIjtcclxuaW1wb3J0IHsgTmFycm93UGhhc2UgfSBmcm9tIFwiLi9uYXJyb3dQaGFzZVwiO1xyXG5pbXBvcnQgeyBFbmdpbmUsIEVuZ2luZU9wdCB9IGZyb20gXCIuLi9jb3JlL2VuZ2luZVwiO1xyXG5cclxuLyoqXHJcbiAqIOeisOaSnuajgOa1i1xyXG4gKi9cclxuXHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIERldGVjdG9yIHtcclxuICAgIC8vIOeyl+ajgOafpVxyXG4gICAgYnJvYWRQaGFzZTogQnJvYWRQaGFzZTtcclxuICAgIC8vIOe7huajgOa1i1xyXG4gICAgbmFycm93UGhhc2U6IE5hcnJvd1BoYXNlOyAgIFxyXG5cclxuICAgIGNvbnN0cnVjdG9yKGVuZ2luZTogRW5naW5lLCBvcHQ6IEVuZ2luZU9wdCkge1xyXG4gICAgICAgIHRoaXMuYnJvYWRQaGFzZSA9IG5ldyBCcm9hZFBoYXNlKGVuZ2luZSk7XHJcbiAgICAgICAgdGhpcy5uYXJyb3dQaGFzZSA9IG5ldyBOYXJyb3dQaGFzZShlbmdpbmUpO1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///14\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.BroadPhase = void 0;\r\nconst util_1 = __webpack_require__(0);\r\nclass BroadPhase {\r\n    constructor(engine) {\r\n        this.engine = engine;\r\n    }\r\n    /**\r\n     * 检测\r\n     * @param bodies 所有刚体\r\n     */\r\n    detect(bodies) {\r\n        return this.sweepAndPrune(bodies);\r\n    }\r\n    /**\r\n     * 查看刚体是否出了可视区\r\n     * @param bound\r\n     */\r\n    isBodyOutWindow(bound) {\r\n        return bound.max.y < 0 || bound.min.x > this.engine.width || bound.min.y > this.engine.height || bound.max.x < 0;\r\n    }\r\n    /**\r\n     * 查看两个刚体是否允许发生碰撞\r\n     * @param bodyA\r\n     * @param bodyB\r\n     */\r\n    canCollide(bodyA, bodyB) {\r\n        // 若bodies[i]的碰撞过滤器过滤了bodies[i]，不进行检测\r\n        if (!bodyA.methods.filter(bodyA.mask, bodyB.mask) || !bodyB.methods.filter(bodyB.mask, bodyA.mask))\r\n            return false;\r\n        // 若刚体已经移出可视区了，跳过\r\n        if (this.isBodyOutWindow(bodyA.bound) || this.isBodyOutWindow(bodyB.bound))\r\n            return false;\r\n        // 两个静态刚体 ，跳过\r\n        if (bodyA.fixed && bodyB.fixed)\r\n            return false;\r\n        // 两个睡眠刚体，跳过\r\n        if (bodyA.sleeping && bodyB.sleeping)\r\n            return false;\r\n        return true;\r\n    }\r\n    /**\r\n     * Sweep & Prune\r\n     * @param bodies\r\n     */\r\n    sweepAndPrune(bodies) {\r\n        let broadPhasePairList = [], i, j, len = bodies.length;\r\n        // 包围盒在x轴上排序 （直接插入排序）\r\n        // 第一次排序时包围盒趋向于无序，这时复杂度为O(n^2) \r\n        // 而因为时间相干性，在之后的每帧包围盒趋向有序，此时直接插入排序效率最高，为O(n^2)\r\n        util_1.Util.insertSort(bodies, (bodyA, bodyB) => bodyA.bound.min.x - bodyB.bound.min.x);\r\n        for (i = 0; i < len; i++) {\r\n            for (j = i + 1; j < len; j++) {\r\n                // 已经不可能发生碰撞了，跳出循环\r\n                if (bodies[i].bound.max.x < bodies[j].bound.min.x)\r\n                    break;\r\n                // 若A，B不可以发生碰撞，返回\r\n                if (!this.canCollide(bodies[i], bodies[j]))\r\n                    continue;\r\n                // 一个个对比包围盒是否相交\r\n                if (bodies[i].bound.isIntersect(bodies[j].bound)) {\r\n                    broadPhasePairList.push({\r\n                        bodyA: bodies[i],\r\n                        bodyB: bodies[j]\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return broadPhasePairList;\r\n    }\r\n}\r\nexports.BroadPhase = BroadPhase;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29sbGlzaW9uL2Jyb2FkUGhhc2UudHM/ZWRmYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxzQ0FBc0M7QUFrQnRDLE1BQWEsVUFBVTtJQUduQixZQUFZLE1BQWM7UUFDdEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDekIsQ0FBQztJQUVEOzs7T0FHRztJQUNILE1BQU0sQ0FBQyxNQUFjO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0ssZUFBZSxDQUFDLEtBQVk7UUFDaEMsT0FBTyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3JILENBQUM7SUFFRDs7OztPQUlHO0lBQ0ssVUFBVSxDQUFDLEtBQVcsRUFBRSxLQUFXO1FBQ3ZDLHFDQUFxQztRQUNyQyxJQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUM7WUFBRSxPQUFPLEtBQUssQ0FBQztRQUVoSCxpQkFBaUI7UUFDakIsSUFBRyxJQUFJLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7WUFBRSxPQUFPLEtBQUssQ0FBQztRQUV4RixhQUFhO1FBQ2IsSUFBRyxLQUFLLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQyxLQUFLO1lBQUUsT0FBTyxLQUFLLENBQUM7UUFFNUMsWUFBWTtRQUNaLElBQUcsS0FBSyxDQUFDLFFBQVEsSUFBSSxLQUFLLENBQUMsUUFBUTtZQUFFLE9BQU8sS0FBSyxDQUFDO1FBRWxELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFRDs7O09BR0c7SUFDSyxhQUFhLENBQUMsTUFBYztRQUNoQyxJQUFJLGtCQUFrQixHQUFxQixFQUFFLEVBQ3pDLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFFOUIscUJBQXFCO1FBQ3JCLCtCQUErQjtRQUMvQiw4Q0FBOEM7UUFDOUMsV0FBSSxDQUFDLFVBQVUsQ0FBTyxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFdkYsS0FBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDckIsS0FBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUN6QixrQkFBa0I7Z0JBQ2xCLElBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7b0JBQUUsTUFBTTtnQkFFeEQsaUJBQWlCO2dCQUNqQixJQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUFFLFNBQVM7Z0JBRXBELGVBQWU7Z0JBQ2YsSUFBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUU7b0JBQzdDLGtCQUFrQixDQUFDLElBQUksQ0FBQzt3QkFDcEIsS0FBSyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7d0JBQ2hCLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDO3FCQUNuQixDQUFDLENBQUM7aUJBQ047YUFDSjtTQUNKO1FBRUQsT0FBTyxrQkFBa0IsQ0FBQztJQUM5QixDQUFDO0NBQ0o7QUE3RUQsZ0NBNkVDIiwiZmlsZSI6IjE1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm9keSB9IGZyb20gXCIuLi9ib2R5L2JvZHlcIjtcclxuaW1wb3J0IHsgVXRpbCB9IGZyb20gXCIuLi9jb21tb24vdXRpbFwiO1xyXG5pbXBvcnQgeyBCb3VuZCB9IGZyb20gXCIuL2JvdW5kXCI7XHJcbmltcG9ydCB7IEVuZ2luZSB9IGZyb20gXCIuLi9jb3JlL2VuZ2luZVwiO1xyXG5cclxuLyoqXHJcbiAqIOeyl+ajgOa1i+mYtuaute+8jOS9v+eUqFN3ZWVwICYgUHJ1bmXnrpfms5VcclxuICog5Y+C6ICD77yaaHR0cHM6Ly9saW5rLnNwcmluZ2VyLmNvbS9hcnRpY2xlLzEwLjEwMDcvczAwMzcxLTAxMy0wODgwLTdcclxuICovXHJcblxyXG5cclxuLy8g57KX5qOA5rWL6Zi25q6155Sf5oiQ55qE57uT5p6c5a+557uT5p6EXHJcbmV4cG9ydCB0eXBlIGJyb2FkUGhhc2VQYWlyID0ge1xyXG4gICAgYm9keUE6IEJvZHk7XHJcbiAgICBib2R5QjogQm9keTtcclxufTtcclxuXHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIEJyb2FkUGhhc2Uge1xyXG4gICAgZW5naW5lOiBFbmdpbmU7XHJcblxyXG4gICAgY29uc3RydWN0b3IoZW5naW5lOiBFbmdpbmUpIHtcclxuICAgICAgICB0aGlzLmVuZ2luZSA9IGVuZ2luZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOajgOa1i1xyXG4gICAgICogQHBhcmFtIGJvZGllcyDmiYDmnInliJrkvZNcclxuICAgICAqL1xyXG4gICAgZGV0ZWN0KGJvZGllczogQm9keVtdKTogYnJvYWRQaGFzZVBhaXJbXSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3dlZXBBbmRQcnVuZShib2RpZXMpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5p+l55yL5Yia5L2T5piv5ZCm5Ye65LqG5Y+v6KeG5Yy6XHJcbiAgICAgKiBAcGFyYW0gYm91bmQgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgaXNCb2R5T3V0V2luZG93KGJvdW5kOiBCb3VuZCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiBib3VuZC5tYXgueSA8IDAgfHwgYm91bmQubWluLnggPiB0aGlzLmVuZ2luZS53aWR0aCB8fCBib3VuZC5taW4ueSA+IHRoaXMuZW5naW5lLmhlaWdodCB8fCBib3VuZC5tYXgueCA8IDA7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmn6XnnIvkuKTkuKrliJrkvZPmmK/lkKblhYHorrjlj5HnlJ/norDmkp5cclxuICAgICAqIEBwYXJhbSBib2R5QSBcclxuICAgICAqIEBwYXJhbSBib2R5QiBcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBjYW5Db2xsaWRlKGJvZHlBOiBCb2R5LCBib2R5QjogQm9keSk6IGJvb2xlYW4ge1xyXG4gICAgICAgIC8vIOiLpWJvZGllc1tpXeeahOeisOaSnui/h+a7pOWZqOi/h+a7pOS6hmJvZGllc1tpXe+8jOS4jei/m+ihjOajgOa1i1xyXG4gICAgICAgIGlmKCFib2R5QS5tZXRob2RzLmZpbHRlcihib2R5QS5tYXNrLCBib2R5Qi5tYXNrKSB8fCAhYm9keUIubWV0aG9kcy5maWx0ZXIoYm9keUIubWFzaywgYm9keUEubWFzaykpIHJldHVybiBmYWxzZTtcclxuICAgICAgICBcclxuICAgICAgICAvLyDoi6XliJrkvZPlt7Lnu4/np7vlh7rlj6/op4bljLrkuobvvIzot7Pov4dcclxuICAgICAgICBpZih0aGlzLmlzQm9keU91dFdpbmRvdyhib2R5QS5ib3VuZCkgfHwgdGhpcy5pc0JvZHlPdXRXaW5kb3coYm9keUIuYm91bmQpKSByZXR1cm4gZmFsc2U7XHJcblxyXG4gICAgICAgIC8vIOS4pOS4qumdmeaAgeWImuS9kyDvvIzot7Pov4dcclxuICAgICAgICBpZihib2R5QS5maXhlZCAmJiBib2R5Qi5maXhlZCkgcmV0dXJuIGZhbHNlO1xyXG5cclxuICAgICAgICAvLyDkuKTkuKrnnaHnnKDliJrkvZPvvIzot7Pov4dcclxuICAgICAgICBpZihib2R5QS5zbGVlcGluZyAmJiBib2R5Qi5zbGVlcGluZykgcmV0dXJuIGZhbHNlO1xyXG5cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIFN3ZWVwICYgUHJ1bmVcclxuICAgICAqIEBwYXJhbSBib2RpZXMgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgc3dlZXBBbmRQcnVuZShib2RpZXM6IEJvZHlbXSk6IGJyb2FkUGhhc2VQYWlyW10ge1xyXG4gICAgICAgIGxldCBicm9hZFBoYXNlUGFpckxpc3Q6IGJyb2FkUGhhc2VQYWlyW10gPSBbXSxcclxuICAgICAgICAgICAgaSwgaiwgbGVuID0gYm9kaWVzLmxlbmd0aDtcclxuICAgICAgICBcclxuICAgICAgICAvLyDljIXlm7Tnm5LlnKh46L205LiK5o6S5bqPIO+8iOebtOaOpeaPkuWFpeaOkuW6j++8iVxyXG4gICAgICAgIC8vIOesrOS4gOasoeaOkuW6j+aXtuWMheWbtOebkui2i+WQkeS6juaXoOW6j++8jOi/meaXtuWkjeadguW6puS4uk8obl4yKSBcclxuICAgICAgICAvLyDogIzlm6DkuLrml7bpl7Tnm7jlubLmgKfvvIzlnKjkuYvlkI7nmoTmr4/luKfljIXlm7Tnm5LotovlkJHmnInluo/vvIzmraTml7bnm7TmjqXmj5LlhaXmjpLluo/mlYjnjofmnIDpq5jvvIzkuLpPKG5eMilcclxuICAgICAgICBVdGlsLmluc2VydFNvcnQ8Qm9keT4oYm9kaWVzLCAoYm9keUEsIGJvZHlCKSA9PiBib2R5QS5ib3VuZC5taW4ueCAtIGJvZHlCLmJvdW5kLm1pbi54KTtcclxuICAgIFxyXG4gICAgICAgIGZvcihpID0gMDsgaSA8IGxlbjsgaSsrKSB7XHJcbiAgICAgICAgICAgIGZvcihqID0gaSArIDE7IGogPCBsZW47IGorKykge1xyXG4gICAgICAgICAgICAgICAgLy8g5bey57uP5LiN5Y+v6IO95Y+R55Sf56Kw5pKe5LqG77yM6Lez5Ye65b6q546vXHJcbiAgICAgICAgICAgICAgICBpZihib2RpZXNbaV0uYm91bmQubWF4LnggPCBib2RpZXNbal0uYm91bmQubWluLngpIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIOiLpUHvvIxC5LiN5Y+v5Lul5Y+R55Sf56Kw5pKe77yM6L+U5ZueXHJcbiAgICAgICAgICAgICAgICBpZighdGhpcy5jYW5Db2xsaWRlKGJvZGllc1tpXSwgYm9kaWVzW2pdKSkgY29udGludWU7XHJcblxyXG4gICAgICAgICAgICAgICAgLy8g5LiA5Liq5Liq5a+55q+U5YyF5Zu055uS5piv5ZCm55u45LqkXHJcbiAgICAgICAgICAgICAgICBpZihib2RpZXNbaV0uYm91bmQuaXNJbnRlcnNlY3QoYm9kaWVzW2pdLmJvdW5kKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGJyb2FkUGhhc2VQYWlyTGlzdC5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYm9keUE6IGJvZGllc1tpXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgYm9keUI6IGJvZGllc1tqXVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gYnJvYWRQaGFzZVBhaXJMaXN0O1xyXG4gICAgfSBcclxufVxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///15\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.NarrowPhase = void 0;\r\nconst sat_1 = __webpack_require__(17);\r\nconst arcs_1 = __webpack_require__(4);\r\nconst vertices_1 = __webpack_require__(2);\r\nconst util_1 = __webpack_require__(0);\r\nclass NarrowPhase {\r\n    constructor(engine) {\r\n        this.engine = engine;\r\n        this.SAT = new sat_1.SAT();\r\n    }\r\n    /**\r\n     * 检测\r\n     * @param broadPhasePairList 粗检查生成的潜在碰撞对\r\n     */\r\n    detect(broadPhasePairList) {\r\n        let collisions = [], prevCollision = null, pair, partsA, partsB, partA, partB, i, j, k;\r\n        for (i = 0; i < broadPhasePairList.length; i++) {\r\n            pair = broadPhasePairList[i];\r\n            partsA = pair.bodyA.parts;\r\n            partsB = pair.bodyB.parts;\r\n            for (j = 0; j < partsA.length; j++) {\r\n                partA = partsA[j];\r\n                for (k = 0; k < partsB.length; k++) {\r\n                    partB = partsB[k];\r\n                    // 两个子图形包围盒不相交，跳过\r\n                    if (!partA.bound.isIntersect(partB.bound))\r\n                        continue;\r\n                    prevCollision = this.getPrevCollision(partA, partB, this.engine.manifoldTable);\r\n                    // A,B皆为圆形\r\n                    if (partA instanceof arcs_1.Arc && partB instanceof arcs_1.Arc) {\r\n                        collisions.push(this.SAT.circleCollideCircle(partA, partB, prevCollision));\r\n                    }\r\n                    // A为多边形，B为圆形\r\n                    else if (partA instanceof vertices_1.Poly && partB instanceof arcs_1.Arc) {\r\n                        collisions.push(this.SAT.polygonCollideBody(partA, partB, prevCollision));\r\n                    }\r\n                    // A为圆形，B为多边形\r\n                    else if (partA instanceof arcs_1.Arc && partB instanceof vertices_1.Poly) {\r\n                        collisions.push(this.SAT.polygonCollideBody(partB, partA, prevCollision));\r\n                    }\r\n                    // A,B皆为多边形\r\n                    else {\r\n                        collisions.push(this.SAT.polygonCollideBody(partA, partB, prevCollision));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return collisions;\r\n    }\r\n    /**\r\n     * 获取上一次碰撞\r\n     * @param partA\r\n     * @param partB\r\n     * @param manifoldTable\r\n     */\r\n    getPrevCollision(partA, partB, manifoldTable) {\r\n        let id = util_1.Util.compositeId(partA.id, partB.id), manifold = manifoldTable.table[id];\r\n        if (this.engine.manifoldTable.enableCache && manifold && manifold.isActive) {\r\n            return manifold.collision;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\nexports.NarrowPhase = NarrowPhase;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29sbGlzaW9uL25hcnJvd1BoYXNlLnRzP2ZiNDYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsc0NBQTRCO0FBRTVCLHNDQUFxQztBQUNyQywwQ0FBMEM7QUFHMUMsc0NBQXNDO0FBTXRDLE1BQWEsV0FBVztJQVNwQixZQUFZLE1BQWM7UUFDdEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFFckIsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLFNBQUcsRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFFRDs7O09BR0c7SUFDSCxNQUFNLENBQUMsa0JBQW9DO1FBQ3ZDLElBQUksVUFBVSxHQUFHLEVBQUUsRUFDZixhQUFhLEdBQUcsSUFBSSxFQUNwQixJQUFvQixFQUNwQixNQUFrQixFQUNsQixNQUFrQixFQUNsQixLQUFlLEVBQ2YsS0FBZSxFQUNmLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBRVosS0FBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxrQkFBa0IsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDM0MsSUFBSSxHQUFHLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzdCLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQztZQUMxQixNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7WUFFMUIsS0FBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO2dCQUMvQixLQUFLLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUVsQixLQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7b0JBQy9CLEtBQUssR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBRWxCLGlCQUFpQjtvQkFDakIsSUFBRyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7d0JBQUUsU0FBUztvQkFFbkQsYUFBYSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUM7b0JBRS9FLFVBQVU7b0JBQ1YsSUFBRyxLQUFLLFlBQVksVUFBRyxJQUFJLEtBQUssWUFBWSxVQUFHLEVBQUU7d0JBQzdDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUM7cUJBQzlFO29CQUNELGFBQWE7eUJBQ1IsSUFBRyxLQUFLLFlBQVksZUFBSSxJQUFJLEtBQUssWUFBWSxVQUFHLEVBQUU7d0JBQ25ELFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUM7cUJBQzdFO29CQUNELGFBQWE7eUJBQ1IsSUFBRyxLQUFLLFlBQVksVUFBRyxJQUFJLEtBQUssWUFBWSxlQUFJLEVBQUU7d0JBQ25ELFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUM7cUJBQzdFO29CQUNELFdBQVc7eUJBQ047d0JBQ0QsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFPLEtBQUssRUFBUSxLQUFLLEVBQUUsYUFBYSxDQUFDLENBQUMsQ0FBQztxQkFDekY7aUJBQ0o7YUFDSjtTQUNKO1FBRUQsT0FBTyxVQUFVLENBQUM7SUFDdEIsQ0FBQztJQUVEOzs7OztPQUtHO0lBQ0gsZ0JBQWdCLENBQUMsS0FBZSxFQUFFLEtBQWUsRUFBRSxhQUE0QjtRQUMzRSxJQUFJLEVBQUUsR0FBRyxXQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLEVBQUUsQ0FBQyxFQUN6QyxRQUFRLEdBQUcsYUFBYSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUV2QyxJQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLFdBQVcsSUFBSSxRQUFRLElBQUksUUFBUSxDQUFDLFFBQVEsRUFBRTtZQUN2RSxPQUFPLFFBQVEsQ0FBQyxTQUFTLENBQUM7U0FDN0I7YUFDSTtZQUNELE9BQU8sSUFBSSxDQUFDO1NBQ2Y7SUFDTCxDQUFDO0NBQ0o7QUFyRkQsa0NBcUZDIiwiZmlsZSI6IjE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU0FUIH0gZnJvbSBcIi4vc2F0XCI7XHJcbmltcG9ydCB7IGJyb2FkUGhhc2VQYWlyIH0gZnJvbSBcIi4vYnJvYWRQaGFzZVwiO1xyXG5pbXBvcnQgeyBBcmMgfSBmcm9tIFwiLi4vY29tbW9uL2FyY3NcIjtcclxuaW1wb3J0IHsgUG9seSB9IGZyb20gXCIuLi9jb21tb24vdmVydGljZXNcIjtcclxuaW1wb3J0IHsgRW5naW5lIH0gZnJvbSBcIi4uL2NvcmUvZW5naW5lXCI7XHJcbmltcG9ydCB7IENvbGxpc2lvbiwgR2VvbWV0cnkgfSBmcm9tIFwiLi9tYW5pZm9sZFwiO1xyXG5pbXBvcnQgeyBVdGlsIH0gZnJvbSBcIi4uL2NvbW1vbi91dGlsXCI7XHJcbmltcG9ydCB7IE1hbmlmb2xkVGFibGUgfSBmcm9tIFwiLi9tYW5pZm9sZFRhYmxlXCI7XHJcblxyXG5cclxuXHJcblxyXG5leHBvcnQgY2xhc3MgTmFycm93UGhhc2Uge1xyXG4gICAgcHJpdmF0ZSBlbmdpbmU6IEVuZ2luZTtcclxuXHJcbiAgICAvLyDliIbnprvovbTmtYvor5VcclxuICAgIHByaXZhdGUgU0FUOiBTQVQ7XHJcbiAgICAvLyDnorDmkp7lr7lcclxuICAgIGNvbGxpc2lvbnM6IENvbGxpc2lvbltdO1xyXG5cclxuXHJcbiAgICBjb25zdHJ1Y3RvcihlbmdpbmU6IEVuZ2luZSkge1xyXG4gICAgICAgIHRoaXMuZW5naW5lID0gZW5naW5lO1xyXG5cclxuICAgICAgICB0aGlzLlNBVCA9IG5ldyBTQVQoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOajgOa1i1xyXG4gICAgICogQHBhcmFtIGJyb2FkUGhhc2VQYWlyTGlzdCDnspfmo4Dmn6XnlJ/miJDnmoTmvZzlnKjnorDmkp7lr7lcclxuICAgICAqL1xyXG4gICAgZGV0ZWN0KGJyb2FkUGhhc2VQYWlyTGlzdDogYnJvYWRQaGFzZVBhaXJbXSk6IENvbGxpc2lvbltdIHtcclxuICAgICAgICBsZXQgY29sbGlzaW9ucyA9IFtdLFxyXG4gICAgICAgICAgICBwcmV2Q29sbGlzaW9uID0gbnVsbCxcclxuICAgICAgICAgICAgcGFpcjogYnJvYWRQaGFzZVBhaXIsXHJcbiAgICAgICAgICAgIHBhcnRzQTogR2VvbWV0cnlbXSxcclxuICAgICAgICAgICAgcGFydHNCOiBHZW9tZXRyeVtdLFxyXG4gICAgICAgICAgICBwYXJ0QTogR2VvbWV0cnksXHJcbiAgICAgICAgICAgIHBhcnRCOiBHZW9tZXRyeSxcclxuICAgICAgICAgICAgaSwgaiwgaztcclxuXHJcbiAgICAgICAgZm9yKGkgPSAwOyBpIDwgYnJvYWRQaGFzZVBhaXJMaXN0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHBhaXIgPSBicm9hZFBoYXNlUGFpckxpc3RbaV07XHJcbiAgICAgICAgICAgIHBhcnRzQSA9IHBhaXIuYm9keUEucGFydHM7XHJcbiAgICAgICAgICAgIHBhcnRzQiA9IHBhaXIuYm9keUIucGFydHM7XHJcblxyXG4gICAgICAgICAgICBmb3IoaiA9IDA7IGogPCBwYXJ0c0EubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICAgICAgICAgIHBhcnRBID0gcGFydHNBW2pdO1xyXG5cclxuICAgICAgICAgICAgICAgIGZvcihrID0gMDsgayA8IHBhcnRzQi5sZW5ndGg7IGsrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhcnRCID0gcGFydHNCW2tdO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAvLyDkuKTkuKrlrZDlm77lvaLljIXlm7Tnm5LkuI3nm7jkuqTvvIzot7Pov4dcclxuICAgICAgICAgICAgICAgICAgICBpZighcGFydEEuYm91bmQuaXNJbnRlcnNlY3QocGFydEIuYm91bmQpKSBjb250aW51ZTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgcHJldkNvbGxpc2lvbiA9IHRoaXMuZ2V0UHJldkNvbGxpc2lvbihwYXJ0QSwgcGFydEIsIHRoaXMuZW5naW5lLm1hbmlmb2xkVGFibGUpO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAvLyBBLELnmobkuLrlnIblvaJcclxuICAgICAgICAgICAgICAgICAgICBpZihwYXJ0QSBpbnN0YW5jZW9mIEFyYyAmJiBwYXJ0QiBpbnN0YW5jZW9mIEFyYykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xsaXNpb25zLnB1c2godGhpcy5TQVQuY2lyY2xlQ29sbGlkZUNpcmNsZShwYXJ0QSwgcGFydEIsIHByZXZDb2xsaXNpb24pKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gQeS4uuWkmui+ueW9ou+8jELkuLrlnIblvaJcclxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmKHBhcnRBIGluc3RhbmNlb2YgUG9seSAmJiBwYXJ0QiBpbnN0YW5jZW9mIEFyYykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xsaXNpb25zLnB1c2godGhpcy5TQVQucG9seWdvbkNvbGxpZGVCb2R5KHBhcnRBLCBwYXJ0QiwgcHJldkNvbGxpc2lvbikpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAvLyBB5Li65ZyG5b2i77yMQuS4uuWkmui+ueW9olxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYocGFydEEgaW5zdGFuY2VvZiBBcmMgJiYgcGFydEIgaW5zdGFuY2VvZiBQb2x5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxpc2lvbnMucHVzaCh0aGlzLlNBVC5wb2x5Z29uQ29sbGlkZUJvZHkocGFydEIsIHBhcnRBLCBwcmV2Q29sbGlzaW9uKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIC8vIEEsQueahuS4uuWkmui+ueW9olxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xsaXNpb25zLnB1c2godGhpcy5TQVQucG9seWdvbkNvbGxpZGVCb2R5KDxQb2x5PnBhcnRBLCA8UG9seT5wYXJ0QiwgcHJldkNvbGxpc2lvbikpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGNvbGxpc2lvbnM7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflj5bkuIrkuIDmrKHnorDmkp5cclxuICAgICAqIEBwYXJhbSBwYXJ0QSBcclxuICAgICAqIEBwYXJhbSBwYXJ0QiBcclxuICAgICAqIEBwYXJhbSBtYW5pZm9sZFRhYmxlIFxyXG4gICAgICovXHJcbiAgICBnZXRQcmV2Q29sbGlzaW9uKHBhcnRBOiBHZW9tZXRyeSwgcGFydEI6IEdlb21ldHJ5LCBtYW5pZm9sZFRhYmxlOiBNYW5pZm9sZFRhYmxlKTogQ29sbGlzaW9uIHtcclxuICAgICAgICBsZXQgaWQgPSBVdGlsLmNvbXBvc2l0ZUlkKHBhcnRBLmlkLCBwYXJ0Qi5pZCksXHJcbiAgICAgICAgICAgIG1hbmlmb2xkID0gbWFuaWZvbGRUYWJsZS50YWJsZVtpZF07XHJcblxyXG4gICAgICAgIGlmKHRoaXMuZW5naW5lLm1hbmlmb2xkVGFibGUuZW5hYmxlQ2FjaGUgJiYgbWFuaWZvbGQgJiYgbWFuaWZvbGQuaXNBY3RpdmUpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG1hbmlmb2xkLmNvbGxpc2lvbjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///16\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.SAT = void 0;\r\nconst vector_1 = __webpack_require__(1);\r\nconst vertices_1 = __webpack_require__(2);\r\nconst arcs_1 = __webpack_require__(4);\r\nconst manifold_1 = __webpack_require__(7);\r\n/**\r\n * 分离轴算法\r\n * 参考：https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\r\n */\r\nclass SAT {\r\n    /**\r\n     * 多边形 - 多边形或圆形（geometry）\r\n     * @param poly\r\n     * @param geometry\r\n     * @param prevCollision\r\n     */\r\n    polygonCollideBody(poly, geometry, prevCollision) {\r\n        let canReuse = this.canReuseCollision(poly, geometry, prevCollision), collision = null, result = null, oldContacts = null;\r\n        // 若能用缓存，使用缓存\r\n        if (canReuse) {\r\n            collision = prevCollision;\r\n            oldContacts = prevCollision.contacts;\r\n            result = this.detect(poly, geometry, [collision.normal]);\r\n            if (result.minOverlap < 0) {\r\n                collision.collide = false;\r\n                return collision;\r\n            }\r\n        }\r\n        // 若不能用缓存，则进行完整的测试\r\n        else {\r\n            let axes = this.filterAxes(poly, geometry);\r\n            collision = new manifold_1.Collision();\r\n            result = this.detect(poly, geometry, axes);\r\n            // 若发现两个刚体投影的重叠部分是负的，即表示它们没相交\r\n            if (result.minOverlap < 0) {\r\n                collision.collide = false;\r\n                return collision;\r\n            }\r\n            let normal = this.reviseNormal(axes[result.index], poly, geometry);\r\n            collision.normal.x = normal.x;\r\n            collision.normal.y = normal.y;\r\n            collision.tangent = normal.nor(collision.tangent);\r\n            collision.partA = poly;\r\n            collision.partB = geometry;\r\n            collision.bodyA = poly.body;\r\n            collision.bodyB = geometry.body;\r\n        }\r\n        collision.depth = result.minOverlap;\r\n        collision.penetration = collision.normal.scl(collision.depth, collision.penetration);\r\n        collision.contacts = this.findContacts(poly, geometry, collision.normal, collision.depth);\r\n        collision.collide = true;\r\n        // warm start\r\n        if (oldContacts) {\r\n            for (let i = 0; i < oldContacts.length; i++) {\r\n                if (collision.contacts[i]) {\r\n                    collision.contacts[i].normalImpulse = oldContacts[i].normalImpulse;\r\n                    collision.contacts[i].tangentImpulse = oldContacts[i].tangentImpulse;\r\n                }\r\n            }\r\n        }\r\n        return collision;\r\n    }\r\n    /**\r\n     * 圆形 - 圆形\r\n     * @param circleA\r\n     * @param circleB\r\n     * @param prevCollision\r\n     */\r\n    circleCollideCircle(arcA, arcB, prevCollision) {\r\n        let axis = arcA.center.sub(arcB.center, vector_1._tempVector1), overlaps = (arcA.radius + arcB.radius) - axis.len(), collision = new manifold_1.Collision();\r\n        // 两圆心距离比两圆半径和要大，即没有发生碰撞\r\n        if (overlaps < 0) {\r\n            collision.collide = false;\r\n            return collision;\r\n        }\r\n        let normal = this.reviseNormal(axis, arcA, arcB).nol();\r\n        collision.partA = arcA;\r\n        collision.partB = arcB;\r\n        collision.bodyA = arcA.body;\r\n        collision.bodyB = arcB.body;\r\n        collision.normal.x = normal.x;\r\n        collision.normal.y = normal.y;\r\n        collision.tangent = normal.nor(collision.tangent).nol();\r\n        collision.depth = overlaps;\r\n        collision.penetration = normal.scl(overlaps, collision.penetration);\r\n        arcA.center.loc(normal.inv(vector_1._tempVector1), arcA.radius - overlaps / 2, vector_1._tempVector1);\r\n        collision.contacts = [new manifold_1.Contact(vector_1._tempVector1)];\r\n        collision.collide = true;\r\n        return collision;\r\n    }\r\n    /**\r\n     * --------------------------------------------------------------------------------------------------\r\n     */\r\n    /**\r\n     * 进行分离轴检测\r\n     * @param poly\r\n     * @param geometry\r\n     * @param collision\r\n     * @param axes\r\n     */\r\n    detect(poly, geometry, axes) {\r\n        let minOverlap = Infinity, overlaps, len = axes.length, i, index;\r\n        // 将两个刚体投影到所有轴上\r\n        for (i = 0; i < len; i++) {\r\n            overlaps = this.minOverlaps(poly, geometry, axes[i]);\r\n            if (overlaps < 0) {\r\n                return {\r\n                    minOverlap: overlaps,\r\n                    index\r\n                };\r\n            }\r\n            if (overlaps < minOverlap) {\r\n                minOverlap = overlaps;\r\n                index = i;\r\n            }\r\n        }\r\n        return {\r\n            minOverlap,\r\n            index\r\n        };\r\n    }\r\n    /**\r\n     * 过滤有可能的轴和顶点集\r\n     * @param poly\r\n     * @param geometry\r\n     */\r\n    filterAxes(poly, geometry) {\r\n        let axes = [];\r\n        // 若geometry是多边形\r\n        if (geometry instanceof vertices_1.Poly) {\r\n            axes.push(...poly.axes);\r\n            axes.push(...geometry.axes);\r\n        }\r\n        // 是圆形\r\n        else {\r\n            axes.push(arcs_1.Arcs.getAxes(geometry, poly), ...poly.axes);\r\n        }\r\n        return vertices_1.Vertices.uniqueAxes(axes);\r\n    }\r\n    /**\r\n     * 修正碰撞法线方向，使其始终背向刚体A\r\n     * @param normal 要修正的法线\r\n     * @param bodyA 刚体A\r\n     * @param bodyB 刚体B\r\n     */\r\n    reviseNormal(normal, geometryA, geometryB) {\r\n        if (normal.dot(geometryB.center.sub(geometryA.center, vector_1._tempVector1)) > 0) {\r\n            return normal.inv();\r\n        }\r\n        return normal.col();\r\n    }\r\n    /**\r\n     * 求最小投影重叠\r\n     * @param poly\r\n     * @param geometry\r\n     * @param axis 投影轴\r\n     */\r\n    minOverlaps(poly, geometry, axis) {\r\n        let projection1, projection2;\r\n        // 若geometry是多边形\r\n        if (geometry instanceof vertices_1.Poly) {\r\n            projection1 = vertices_1.Vertices.projection(poly.vertexList, axis),\r\n                projection2 = vertices_1.Vertices.projection(geometry.vertexList, axis);\r\n        }\r\n        // 是圆形\r\n        else {\r\n            projection1 = vertices_1.Vertices.projection(poly.vertexList, axis),\r\n                projection2 = arcs_1.Arcs.Projection(geometry, axis);\r\n        }\r\n        return Math.min(projection1.max - projection2.min, projection2.max - projection1.min);\r\n    }\r\n    /**\r\n     * 寻找碰撞点\r\n     * @param poly\r\n     * @param geometry\r\n     * @param collision\r\n     */\r\n    findContacts(poly, geometry, normal, depth) {\r\n        let potentialContactsA = [], potentialContactsB = [], contacts = [], normalInv = normal.inv(), i;\r\n        if (geometry instanceof vertices_1.Poly) {\r\n            let vertexListA = poly.vertexList, vertexListB = geometry.vertexList;\r\n            // 寻找多边形A最接近多边形B的两个点\r\n            potentialContactsA = this.orderProjectionVertexInNormalDirection(vertexListA, normal);\r\n            for (i = 0; i < potentialContactsA.length; i++) {\r\n                // 查看这些点是否在多边形B内部\r\n                if (vertices_1.Vertices.isContains(vertexListB, potentialContactsA[i])) {\r\n                    // 如果是，则这个点记为一个碰撞点\r\n                    contacts.push(new manifold_1.Contact(potentialContactsA[i]));\r\n                }\r\n                else {\r\n                    if (i !== 0)\r\n                        break;\r\n                }\r\n            }\r\n            if (contacts.length >= 2)\r\n                return contacts;\r\n            // 同理上面\r\n            potentialContactsB = this.orderProjectionVertexInNormalDirection(vertexListB, normalInv);\r\n            for (i = 0; i < potentialContactsB.length; i++) {\r\n                if (vertices_1.Vertices.isContains(vertexListA, potentialContactsB[i])) {\r\n                    contacts.push(new manifold_1.Contact(potentialContactsB[i]));\r\n                }\r\n                else {\r\n                    if (i !== 0)\r\n                        break;\r\n                }\r\n            }\r\n            // 边界情况：即没有碰撞点的情况\r\n            if (contacts.length < 1) {\r\n                contacts.push(new manifold_1.Contact(potentialContactsA[0]));\r\n            }\r\n        }\r\n        else {\r\n            contacts.push(new manifold_1.Contact(geometry.center.loc(normal, geometry.radius - depth / 2)));\r\n        }\r\n        return contacts;\r\n    }\r\n    /**\r\n     * 将顶点按照在法线上投影的大小顺序排序\r\n     * @param vertexList\r\n     * @param normal\r\n     */\r\n    orderProjectionVertexInNormalDirection(vertexList, normal) {\r\n        return vertexList.slice(0).sort((vertexA, vertexB) => vertexA.dot(normal) - vertexB.dot(normal));\r\n    }\r\n    /**\r\n     * 查看碰撞缓存是否可以复用\r\n     * @param geometryA\r\n     * @param geometryB\r\n     * @param prevCollision 上一次的碰撞\r\n     */\r\n    canReuseCollision(geometryA, geometryB, prevCollision) {\r\n        // 若上次碰撞的缓存存在\r\n        if (prevCollision) {\r\n            let bodyA = geometryA.body, bodyB = geometryB.body, motion = Math.sqrt(bodyA.motion + bodyB.motion);\r\n            // 若上次碰撞判定为真，且当前碰撞对刚体趋于静止，可复用\r\n            return prevCollision.collide && motion < 0.1;\r\n        }\r\n        // 碰撞缓存不存在，直接判定无法复用\r\n        return false;\r\n    }\r\n}\r\nexports.SAT = SAT;\r\n;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Resolver = void 0;\r\nconst util_1 = __webpack_require__(0);\r\nconst collision_1 = __webpack_require__(19);\r\n/**\r\n * 碰撞求解器\r\n */\r\nclass Resolver {\r\n    constructor(engine, opt) {\r\n        this.engine = engine;\r\n        this.velocityIterations = 10;\r\n        this.constraintIterations = 6;\r\n        this.slop = 0.02;\r\n        this.biasFactor = 0.3;\r\n        this.collisionSolver = new collision_1.CollisionSolver(this);\r\n        util_1.Util.merge(this, opt);\r\n    }\r\n    /**\r\n     *\r\n     * @param manifolds\r\n     * @param dt\r\n     */\r\n    solveCollision(manifolds, dt) {\r\n        this.collisionSolver.preSolveVelocity(manifolds, dt);\r\n        for (let i = 0; i < this.velocityIterations; i++) {\r\n            this.collisionSolver.solveVelocity(manifolds, dt);\r\n        }\r\n    }\r\n    solveConstraint() {\r\n    }\r\n}\r\nexports.Resolver = Resolver;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvcmVzb2x2ZXIvcmVzb2x2ZXIudHM/YWJhYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxzQ0FBc0M7QUFDdEMsNENBQThDO0FBSTlDOztHQUVHO0FBR0gsTUFBYSxRQUFRO0lBY2pCLFlBQVksTUFBYyxFQUFFLEdBQWM7UUFDdEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFFckIsSUFBSSxDQUFDLGtCQUFrQixHQUFHLEVBQUUsQ0FBQztRQUM3QixJQUFJLENBQUMsb0JBQW9CLEdBQUcsQ0FBQyxDQUFDO1FBQzlCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSwyQkFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRWpELFdBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsY0FBYyxDQUFDLFNBQXFCLEVBQUUsRUFBVTtRQUM1QyxJQUFJLENBQUMsZUFBZSxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNyRCxLQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzdDLElBQUksQ0FBQyxlQUFlLENBQUMsYUFBYSxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQztTQUNyRDtJQUNMLENBQUM7SUFFRCxlQUFlO0lBRWYsQ0FBQztDQUVKO0FBMUNELDRCQTBDQyIsImZpbGUiOiIxOC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVuZ2luZU9wdCwgRW5naW5lIH0gZnJvbSBcIi4uL2NvcmUvZW5naW5lXCI7XHJcbmltcG9ydCB7IFV0aWwgfSBmcm9tIFwiLi4vY29tbW9uL3V0aWxcIjtcclxuaW1wb3J0IHsgQ29sbGlzaW9uU29sdmVyIH0gZnJvbSBcIi4vY29sbGlzaW9uXCI7XHJcbmltcG9ydCB7IE1hbmlmb2xkIH0gZnJvbSBcIi4uL2NvbGxpc2lvbi9tYW5pZm9sZFwiO1xyXG5cclxuXHJcbi8qKlxyXG4gKiDnorDmkp7msYLop6PlmahcclxuICovXHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIFJlc29sdmVyIHtcclxuICAgIC8vIOW8leaTjuWunuS+i1xyXG4gICAgZW5naW5lOiBFbmdpbmU7XHJcbiAgICAvLyDnorDmkp7msYLop6Plrp7kvotcclxuICAgIGNvbGxpc2lvblNvbHZlcjogQ29sbGlzaW9uU29sdmVyO1xyXG4gICAgLy8g56Kw5pKe5rGC6Kej6L+t5Luj5qyh5pWwXHJcbiAgICB2ZWxvY2l0eUl0ZXJhdGlvbnM6IG51bWJlcjtcclxuICAgIC8vIOe6puadn+axguino+i/reS7o+asoeaVsFxyXG4gICAgY29uc3RyYWludEl0ZXJhdGlvbnM6IG51bWJlcjtcclxuICAgIC8vIOepv+mAj+S/ruato+ivr+W3rlxyXG4gICAgc2xvcDogbnVtYmVyO1xyXG4gICAgLy8g5YGP56e75Zug5a2QXHJcbiAgICBiaWFzRmFjdG9yOiBudW1iZXI7XHJcblxyXG4gICAgY29uc3RydWN0b3IoZW5naW5lOiBFbmdpbmUsIG9wdDogRW5naW5lT3B0KSB7XHJcbiAgICAgICAgdGhpcy5lbmdpbmUgPSBlbmdpbmU7XHJcblxyXG4gICAgICAgIHRoaXMudmVsb2NpdHlJdGVyYXRpb25zID0gMTA7XHJcbiAgICAgICAgdGhpcy5jb25zdHJhaW50SXRlcmF0aW9ucyA9IDY7XHJcbiAgICAgICAgdGhpcy5zbG9wID0gMC4wMjtcclxuICAgICAgICB0aGlzLmJpYXNGYWN0b3IgPSAwLjM7XHJcbiAgICAgICAgdGhpcy5jb2xsaXNpb25Tb2x2ZXIgPSBuZXcgQ29sbGlzaW9uU29sdmVyKHRoaXMpO1xyXG5cclxuICAgICAgICBVdGlsLm1lcmdlKHRoaXMsIG9wdCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSBtYW5pZm9sZHMgXHJcbiAgICAgKiBAcGFyYW0gZHQgXHJcbiAgICAgKi9cclxuICAgIHNvbHZlQ29sbGlzaW9uKG1hbmlmb2xkczogTWFuaWZvbGRbXSwgZHQ6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMuY29sbGlzaW9uU29sdmVyLnByZVNvbHZlVmVsb2NpdHkobWFuaWZvbGRzLCBkdCk7XHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IHRoaXMudmVsb2NpdHlJdGVyYXRpb25zOyBpKyspIHtcclxuICAgICAgICAgICAgdGhpcy5jb2xsaXNpb25Tb2x2ZXIuc29sdmVWZWxvY2l0eShtYW5pZm9sZHMsIGR0KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc29sdmVDb25zdHJhaW50KCkge1xyXG5cclxuICAgIH1cclxuXHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///18\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.CollisionSolver = void 0;\r\nconst vector_1 = __webpack_require__(1);\r\nconst util_1 = __webpack_require__(0);\r\n/**\r\n * 碰撞求解器\r\n */\r\nclass CollisionSolver {\r\n    constructor(resolver) {\r\n        this.resolver = resolver;\r\n    }\r\n    /**\r\n     * 预处理\r\n     * @param manifolds 碰撞流形\r\n     * @param dt 步长\r\n     */\r\n    preSolveVelocity(manifolds, dt) {\r\n        let manifold, collision, contact, bodyA, bodyB, normal, tangent, contactNum, i, j;\r\n        for (i = 0; i < manifolds.length; ++i) {\r\n            manifold = manifolds[i];\r\n            if (!manifold.isActive)\r\n                continue;\r\n            collision = manifold.collision;\r\n            normal = collision.normal;\r\n            tangent = collision.tangent;\r\n            bodyA = collision.bodyA;\r\n            bodyB = collision.bodyB;\r\n            contactNum = manifold.contacts.length;\r\n            for (j = 0; j < collision.contacts.length; j++) {\r\n                contact = collision.contacts[j];\r\n                // 接触点到刚体A质心的距离\r\n                contact.offsetA = contact.vertex.sub(bodyA.position),\r\n                    // 接触点到刚体B质心的距离\r\n                    contact.offsetB = contact.vertex.sub(bodyB.position);\r\n                let invMassNormal = manifold.inverseMass, invMassTangent = manifold.inverseMass, r1 = contact.offsetA, r2 = contact.offsetB, rn1 = contact.offsetA.dot(normal), rn2 = contact.offsetB.dot(normal), rt1 = contact.offsetA.dot(tangent), rt2 = contact.offsetB.dot(tangent);\r\n                // 计算 J(M^-1)(J^T).\r\n                invMassNormal += bodyA.invInertia * (r1.dot(r1) - rn1 * rn1);\r\n                invMassNormal += bodyB.invInertia * (r2.dot(r2) - rn2 * rn2);\r\n                invMassTangent += bodyA.invInertia * (r1.dot(r1) - rt1 * rt1);\r\n                invMassTangent += bodyB.invInertia * (r2.dot(r2) - rt2 * rt2);\r\n                // 保存 J(M^-1)(J^T)得倒数\r\n                contact.shareNormal = 1 / (invMassNormal * contactNum);\r\n                contact.shareTangent = 1 / (invMassTangent * contactNum);\r\n                contact.bias = this.resolver.biasFactor * 1 / dt * Math.max(0, collision.depth + this.resolver.slop);\r\n                let normalImpulse = contact.normalImpulse, tangentImpulse = contact.tangentImpulse, impulse = vector_1._tempVector1;\r\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\r\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\r\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\r\n                    if (!bodyA.sleeping && !bodyA.fixed) {\r\n                        bodyA.applyImpulse(impulse, contact.offsetA);\r\n                    }\r\n                    if (!bodyB.sleeping && !bodyB.fixed) {\r\n                        bodyB.applyImpulse(impulse.inv(impulse), contact.offsetB);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 正式处理\r\n     * 使用sequential impulse进行快速收敛\r\n     * 参考：https://kevinyu.net/2018/01/17/understanding-constraint-solver-in-physics-engine/\r\n     * @param manifolds\r\n     * @private dt\r\n     */\r\n    solveVelocity(manifolds, dt) {\r\n        let manifold, collision, contact, bodyA, bodyB, normal, tangent, normalImpulse, tangentImpulse, maxFriction, relativeNormal, relativeTangent, impulse = vector_1._tempVector3, i, j;\r\n        for (i = 0; i < manifolds.length; i++) {\r\n            manifold = manifolds[i];\r\n            if (!manifold.isActive)\r\n                continue;\r\n            collision = manifold.collision;\r\n            normal = collision.normal;\r\n            tangent = collision.tangent;\r\n            bodyA = collision.bodyA;\r\n            bodyB = collision.bodyB;\r\n            for (j = 0; j < collision.contacts.length; j++) {\r\n                contact = collision.contacts[j];\r\n                let velocityPointA, // 刚体A质心相对碰撞点的速度\r\n                velocityPointB, // 刚体B质心相对碰撞点的速度\r\n                relativeVelocity; // 相对速度\r\n                vector_1._tempVector1.x = 0;\r\n                vector_1._tempVector1.y = 0;\r\n                vector_1._tempVector2.x = 0;\r\n                vector_1._tempVector2.y = 0;\r\n                contact.offsetA.croNum(bodyA.angularVelocity, vector_1._tempVector1);\r\n                contact.offsetB.croNum(bodyB.angularVelocity, vector_1._tempVector2);\r\n                velocityPointA = bodyA.velocity.add(vector_1._tempVector1, vector_1._tempVector1);\r\n                velocityPointB = bodyB.velocity.add(vector_1._tempVector2, vector_1._tempVector2);\r\n                relativeVelocity = velocityPointB.sub(velocityPointA, vector_1._tempVector1);\r\n                // 计算法向相对速度\r\n                relativeNormal = normal.dot(relativeVelocity);\r\n                // 计算法向冲量\r\n                normalImpulse = manifold.restitution * (relativeNormal + contact.bias) * contact.shareNormal;\r\n                // sequential impulse方法，收敛法向冲量\r\n                let oldNormalImpulse = contact.normalImpulse;\r\n                contact.normalImpulse = Math.max(contact.normalImpulse + normalImpulse, 0);\r\n                normalImpulse = contact.normalImpulse - oldNormalImpulse;\r\n                // 应用冲量\r\n                impulse.x = normal.x * normalImpulse;\r\n                impulse.y = normal.y * normalImpulse;\r\n                if (!bodyA.sleeping && !bodyA.fixed) {\r\n                    bodyA.applyImpulse(impulse, contact.offsetA);\r\n                }\r\n                if (!bodyB.sleeping && !bodyB.fixed) {\r\n                    bodyB.applyImpulse(impulse.inv(impulse), contact.offsetB);\r\n                }\r\n                // --------------------------------------------------------------------------------------------\r\n                contact.offsetA.croNum(bodyA.angularVelocity, vector_1._tempVector1);\r\n                contact.offsetB.croNum(bodyB.angularVelocity, vector_1._tempVector2);\r\n                velocityPointA = bodyA.velocity.add(vector_1._tempVector1, vector_1._tempVector1);\r\n                velocityPointB = bodyB.velocity.add(vector_1._tempVector2, vector_1._tempVector2);\r\n                relativeVelocity = velocityPointB.sub(velocityPointA, vector_1._tempVector1);\r\n                // 计算切向相对速度\r\n                relativeTangent = tangent.dot(relativeVelocity);\r\n                // 计算切向冲量\r\n                tangentImpulse = relativeTangent * contact.shareTangent;\r\n                // 计算最大摩擦力\r\n                maxFriction = manifold.friction * contact.normalImpulse;\r\n                // sequential impulse方法，收敛切向冲量\r\n                let oldTangentImpulse = contact.tangentImpulse;\r\n                contact.tangentImpulse = util_1.Util.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\r\n                tangentImpulse = contact.tangentImpulse - oldTangentImpulse;\r\n                // 应用冲量\r\n                !bodyA.sleeping && bodyA.applyImpulse(tangent.scl(tangentImpulse, vector_1._tempVector1), contact.offsetA);\r\n                !bodyB.sleeping && bodyB.applyImpulse(tangent.scl(-tangentImpulse, vector_1._tempVector2), contact.offsetB);\r\n                impulse.x = tangent.x * tangentImpulse;\r\n                impulse.y = tangent.y * tangentImpulse;\r\n                if (!bodyA.sleeping && !bodyA.fixed) {\r\n                    bodyA.applyImpulse(impulse, contact.offsetA);\r\n                }\r\n                if (!bodyB.sleeping && !bodyB.fixed) {\r\n                    bodyB.applyImpulse(impulse.inv(impulse), contact.offsetB);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.CollisionSolver = CollisionSolver;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///19\n')},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Sleeping = void 0;\r\nconst util_1 = __webpack_require__(0);\r\nconst eventEmitter_1 = __webpack_require__(3);\r\n/**\r\n * 休眠管理器\r\n */\r\nclass Sleeping {\r\n    constructor(opt) {\r\n        this.sleepThreshold = 60;\r\n        this.sleepMotionThreshold = 0.01;\r\n        this.wakeMotionThreshold = 0.8;\r\n        util_1.Util.merge(this, opt);\r\n    }\r\n    /**\r\n     * 使刚体睡眠\r\n     * @param body\r\n     */\r\n    sleep(body) {\r\n        body.sleeping = true;\r\n        body.sleepCounter = this.sleepThreshold;\r\n        body.velocity.x = 0;\r\n        body.velocity.y = 0;\r\n        body.angularVelocity = 0;\r\n        body.motion = 0;\r\n        eventEmitter_1.Event.emit(body, 'sleepStart', body);\r\n    }\r\n    /**\r\n     * 唤醒刚体\r\n     * @param body\r\n     */\r\n    wake(body) {\r\n        body.sleeping = false;\r\n        body.sleepCounter = 0;\r\n        eventEmitter_1.Event.emit(body, 'sleepEnd', body);\r\n    }\r\n    /**\r\n     * 改变刚体的状态，使其唤醒或休眠\r\n     * @param bodies\r\n     */\r\n    update(bodies) {\r\n        let body, i;\r\n        for (i = 0; i < bodies.length; i++) {\r\n            body = bodies[i];\r\n            if (body.fixed)\r\n                continue;\r\n            let motion = body.motion;\r\n            // 若刚体合外力不为0，则唤醒\r\n            // if (body.force.x !== 0 || body.force.y !== 0) {\r\n            //     this.wake(body);\r\n            //     continue;\r\n            // }\r\n            // 若刚体已经休眠，则返回\r\n            if (body.sleeping)\r\n                continue;\r\n            // 若刚体动量 < 休眠阈值，则刚体休眠计算 + 1\r\n            if (motion < this.sleepMotionThreshold) {\r\n                body.sleepCounter += 1;\r\n                // 若刚体休眠计数器达到休眠阈值，则进行休眠\r\n                if (body.sleepCounter >= this.sleepThreshold) {\r\n                    this.sleep(body);\r\n                }\r\n            }\r\n            else {\r\n                if (body.sleepCounter > 0) {\r\n                    body.sleepCounter -= 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 刚体碰撞后，判断是否需要唤醒\r\n     * @param manifolds\r\n     */\r\n    afterCollision(manifolds) {\r\n        let manifold, bodyA, bodyB;\r\n        // wake up bodies involved in collisions\r\n        for (var i = 0; i < manifolds.length; i++) {\r\n            manifold = manifolds[i];\r\n            bodyA = manifold.bodyA;\r\n            bodyB = manifold.bodyB;\r\n            // 若A为休眠状态且B的动量大于休眠阈值，唤醒A\r\n            if (!bodyA.fixed && bodyA.sleeping && bodyB.motion > this.wakeMotionThreshold) {\r\n                this.wake(bodyA);\r\n                continue;\r\n            }\r\n            // B同理上面\r\n            if (!bodyB.fixed && bodyB.sleeping && bodyA.motion > this.wakeMotionThreshold) {\r\n                this.wake(bodyB);\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Sleeping = Sleeping;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29yZS9zbGVlcGluZy50cz9kNWNkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLHNDQUFzQztBQUN0Qyw4Q0FBOEM7QUFJOUM7O0dBRUc7QUFFSCxNQUFhLFFBQVE7SUFXakIsWUFBWSxHQUFjO1FBQ3RCLElBQUksQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxJQUFJLENBQUM7UUFDakMsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEdBQUcsQ0FBQztRQUUvQixXQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsS0FBSyxDQUFDLElBQVU7UUFDWixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUNyQixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7UUFFeEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsZUFBZSxHQUFHLENBQUMsQ0FBQztRQUN6QixJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUVoQixvQkFBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsWUFBWSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFFRDs7O09BR0c7SUFDSCxJQUFJLENBQUMsSUFBVTtRQUNYLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxDQUFDO1FBQ3RCLG9CQUFLLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVEOzs7T0FHRztJQUNILE1BQU0sQ0FBQyxNQUFjO1FBQ2pCLElBQUksSUFBVSxFQUNWLENBQUMsQ0FBQztRQUVOLEtBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMvQixJQUFJLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRWpCLElBQUcsSUFBSSxDQUFDLEtBQUs7Z0JBQUUsU0FBUztZQUV4QixJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1lBRXpCLGdCQUFnQjtZQUNoQixrREFBa0Q7WUFDbEQsdUJBQXVCO1lBQ3ZCLGdCQUFnQjtZQUNoQixJQUFJO1lBRUosY0FBYztZQUNkLElBQUcsSUFBSSxDQUFDLFFBQVE7Z0JBQUUsU0FBUztZQUUzQiwyQkFBMkI7WUFDM0IsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixFQUFFO2dCQUNwQyxJQUFJLENBQUMsWUFBWSxJQUFJLENBQUMsQ0FBQztnQkFFdkIsdUJBQXVCO2dCQUN2QixJQUFJLElBQUksQ0FBQyxZQUFZLElBQUksSUFBSSxDQUFDLGNBQWMsRUFBRTtvQkFDMUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztpQkFDcEI7YUFDSjtpQkFDSTtnQkFDRCxJQUFJLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxFQUFFO29CQUN2QixJQUFJLENBQUMsWUFBWSxJQUFJLENBQUMsQ0FBQztpQkFDMUI7YUFDSjtTQUNKO0lBQ0wsQ0FBQztJQUVEOzs7T0FHRztJQUNILGNBQWMsQ0FBQyxTQUFxQjtRQUNoQyxJQUFJLFFBQWtCLEVBQ2xCLEtBQVcsRUFBRSxLQUFXLENBQUM7UUFFN0Isd0NBQXdDO1FBQ3hDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3ZDLFFBQVEsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDeEIsS0FBSyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUM7WUFDdkIsS0FBSyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUM7WUFFdkIseUJBQXlCO1lBQ3pCLElBQUcsQ0FBQyxLQUFLLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQyxRQUFRLElBQUksS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsbUJBQW1CLEVBQUU7Z0JBQzFFLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ2pCLFNBQVM7YUFDWjtZQUVELFFBQVE7WUFDUixJQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLG1CQUFtQixFQUFFO2dCQUMxRSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNqQixTQUFTO2FBQ1o7U0FDSjtJQUNMLENBQUM7Q0FDSjtBQWpIRCw0QkFpSEMiLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb2R5IH0gZnJvbSBcIi4uL2JvZHkvYm9keVwiO1xyXG5pbXBvcnQgeyBFbmdpbmVPcHQgfSBmcm9tIFwiLi9lbmdpbmVcIjtcclxuaW1wb3J0IHsgVXRpbCB9IGZyb20gXCIuLi9jb21tb24vdXRpbFwiO1xyXG5pbXBvcnQgeyBFdmVudCB9IGZyb20gXCIuLi9ldmVudC9ldmVudEVtaXR0ZXJcIjtcclxuaW1wb3J0IHsgTWFuaWZvbGQgfSBmcm9tIFwiLi4vY29sbGlzaW9uL21hbmlmb2xkXCI7XHJcblxyXG5cclxuLyoqXHJcbiAqIOS8keecoOeuoeeQhuWZqFxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBTbGVlcGluZyB7XHJcblxyXG4gICAgLy8g5Yik5a6a5LyR55yg5bin5qCR6ZiI5YC8XHJcbiAgICBzbGVlcFRocmVzaG9sZDogbnVtYmVyO1xyXG4gICAgLy8g5Yik5a6a5LyR55yg5Yqo6YeP6ZiI5YC8XHJcbiAgICBzbGVlcE1vdGlvblRocmVzaG9sZDogbnVtYmVyO1xyXG4gICAgLy8g5Yik5a6a5ZSk6YaS5Yqo6YeP6ZiI5YC8XHJcbiAgICB3YWtlTW90aW9uVGhyZXNob2xkOiBudW1iZXI7XHJcbiAgICAvLyDlgY/lt67ns7vmlbBcclxuICAgIG1pbkJpYXM6IG51bWJlcjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihvcHQ6IEVuZ2luZU9wdCkge1xyXG4gICAgICAgIHRoaXMuc2xlZXBUaHJlc2hvbGQgPSA2MDtcclxuICAgICAgICB0aGlzLnNsZWVwTW90aW9uVGhyZXNob2xkID0gMC4wMTtcclxuICAgICAgICB0aGlzLndha2VNb3Rpb25UaHJlc2hvbGQgPSAwLjg7XHJcblxyXG4gICAgICAgIFV0aWwubWVyZ2UodGhpcywgb3B0KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOS9v+WImuS9k+edoeecoFxyXG4gICAgICogQHBhcmFtIGJvZHkgXHJcbiAgICAgKi9cclxuICAgIHNsZWVwKGJvZHk6IEJvZHkpIHtcclxuICAgICAgICBib2R5LnNsZWVwaW5nID0gdHJ1ZTtcclxuICAgICAgICBib2R5LnNsZWVwQ291bnRlciA9IHRoaXMuc2xlZXBUaHJlc2hvbGQ7XHJcblxyXG4gICAgICAgIGJvZHkudmVsb2NpdHkueCA9IDA7XHJcbiAgICAgICAgYm9keS52ZWxvY2l0eS55ID0gMDtcclxuICAgICAgICBib2R5LmFuZ3VsYXJWZWxvY2l0eSA9IDA7XHJcbiAgICAgICAgYm9keS5tb3Rpb24gPSAwO1xyXG5cclxuICAgICAgICBFdmVudC5lbWl0KGJvZHksICdzbGVlcFN0YXJ0JywgYm9keSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDllKTphpLliJrkvZNcclxuICAgICAqIEBwYXJhbSBib2R5IFxyXG4gICAgICovXHJcbiAgICB3YWtlKGJvZHk6IEJvZHkpIHtcclxuICAgICAgICBib2R5LnNsZWVwaW5nID0gZmFsc2U7XHJcbiAgICAgICAgYm9keS5zbGVlcENvdW50ZXIgPSAwO1xyXG4gICAgICAgIEV2ZW50LmVtaXQoYm9keSwgJ3NsZWVwRW5kJywgYm9keSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmlLnlj5jliJrkvZPnmoTnirbmgIHvvIzkvb/lhbbllKTphpLmiJbkvJHnnKBcclxuICAgICAqIEBwYXJhbSBib2RpZXNcclxuICAgICAqL1xyXG4gICAgdXBkYXRlKGJvZGllczogQm9keVtdKSB7XHJcbiAgICAgICAgbGV0IGJvZHk6IEJvZHksXHJcbiAgICAgICAgICAgIGk7XHJcblxyXG4gICAgICAgIGZvcihpID0gMDsgaSA8IGJvZGllcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBib2R5ID0gYm9kaWVzW2ldO1xyXG5cclxuICAgICAgICAgICAgaWYoYm9keS5maXhlZCkgY29udGludWU7XHJcblxyXG4gICAgICAgICAgICBsZXQgbW90aW9uID0gYm9keS5tb3Rpb247XHJcblxyXG4gICAgICAgICAgICAvLyDoi6XliJrkvZPlkIjlpJblipvkuI3kuLow77yM5YiZ5ZSk6YaSXHJcbiAgICAgICAgICAgIC8vIGlmIChib2R5LmZvcmNlLnggIT09IDAgfHwgYm9keS5mb3JjZS55ICE9PSAwKSB7XHJcbiAgICAgICAgICAgIC8vICAgICB0aGlzLndha2UoYm9keSk7XHJcbiAgICAgICAgICAgIC8vICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgLy8gfVxyXG5cclxuICAgICAgICAgICAgLy8g6Iul5Yia5L2T5bey57uP5LyR55yg77yM5YiZ6L+U5ZueXHJcbiAgICAgICAgICAgIGlmKGJvZHkuc2xlZXBpbmcpIGNvbnRpbnVlO1xyXG5cclxuICAgICAgICAgICAgLy8g6Iul5Yia5L2T5Yqo6YePIDwg5LyR55yg6ZiI5YC877yM5YiZ5Yia5L2T5LyR55yg6K6h566XICsgMVxyXG4gICAgICAgICAgICBpZiAobW90aW9uIDwgdGhpcy5zbGVlcE1vdGlvblRocmVzaG9sZCkge1xyXG4gICAgICAgICAgICAgICAgYm9keS5zbGVlcENvdW50ZXIgKz0gMTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyDoi6XliJrkvZPkvJHnnKDorqHmlbDlmajovr7liLDkvJHnnKDpmIjlgLzvvIzliJnov5vooYzkvJHnnKBcclxuICAgICAgICAgICAgICAgIGlmIChib2R5LnNsZWVwQ291bnRlciA+PSB0aGlzLnNsZWVwVGhyZXNob2xkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zbGVlcChib2R5KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBcclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoYm9keS5zbGVlcENvdW50ZXIgPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYm9keS5zbGVlcENvdW50ZXIgLT0gMTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWImuS9k+eisOaSnuWQju+8jOWIpOaWreaYr+WQpumcgOimgeWUpOmGklxyXG4gICAgICogQHBhcmFtIG1hbmlmb2xkc1xyXG4gICAgICovXHJcbiAgICBhZnRlckNvbGxpc2lvbihtYW5pZm9sZHM6IE1hbmlmb2xkW10pIHtcclxuICAgICAgICBsZXQgbWFuaWZvbGQ6IE1hbmlmb2xkLFxyXG4gICAgICAgICAgICBib2R5QTogQm9keSwgYm9keUI6IEJvZHk7XHJcblxyXG4gICAgICAgIC8vIHdha2UgdXAgYm9kaWVzIGludm9sdmVkIGluIGNvbGxpc2lvbnNcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG1hbmlmb2xkcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBtYW5pZm9sZCA9IG1hbmlmb2xkc1tpXTtcclxuICAgICAgICAgICAgYm9keUEgPSBtYW5pZm9sZC5ib2R5QTtcclxuICAgICAgICAgICAgYm9keUIgPSBtYW5pZm9sZC5ib2R5QjtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIOiLpUHkuLrkvJHnnKDnirbmgIHkuJRC55qE5Yqo6YeP5aSn5LqO5LyR55yg6ZiI5YC877yM5ZSk6YaSQVxyXG4gICAgICAgICAgICBpZighYm9keUEuZml4ZWQgJiYgYm9keUEuc2xlZXBpbmcgJiYgYm9keUIubW90aW9uID4gdGhpcy53YWtlTW90aW9uVGhyZXNob2xkKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLndha2UoYm9keUEpO1xyXG4gICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIELlkIznkIbkuIrpnaJcclxuICAgICAgICAgICAgaWYoIWJvZHlCLmZpeGVkICYmIGJvZHlCLnNsZWVwaW5nICYmIGJvZHlBLm1vdGlvbiA+IHRoaXMud2FrZU1vdGlvblRocmVzaG9sZCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy53YWtlKGJvZHlCKTtcclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///20\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.ManifoldTable = void 0;\r\nconst manifold_1 = __webpack_require__(7);\r\nconst util_1 = __webpack_require__(0);\r\nclass ManifoldTable {\r\n    constructor(opt) {\r\n        this.enableCache = true;\r\n        this.enableManifoldRemove = true;\r\n        this.manifoldRemoveThreshold = 1000;\r\n        this.table = {};\r\n        this.list = [];\r\n        this.collisionStart = [];\r\n        this.collisionEnd = [];\r\n        this.collisionActive = [];\r\n        util_1.Util.merge(this, opt);\r\n    }\r\n    /**\r\n     * 更新所有流形\r\n     * @param collisions\r\n     * @param timeStamp\r\n     */\r\n    update(collisions, timeStamp) {\r\n        let manifold, id, collision, i;\r\n        this.collisionStart.length = 0;\r\n        this.collisionEnd.length = 0;\r\n        this.collisionActive.length = 0;\r\n        // 清空确认激活状态\r\n        for (i = 0; i < this.list.length; i++) {\r\n            this.list[i].confirmedActive = false;\r\n        }\r\n        for (i = 0; i < collisions.length; i++) {\r\n            collision = collisions[i];\r\n            // 只有真实发生碰撞的碰撞对才会更新对应的流形\r\n            if (collision.collide) {\r\n                id = util_1.Util.compositeId(collision.partA.id, collision.partB.id);\r\n                manifold = this.table[id];\r\n                // 若对应流形存在\r\n                if (manifold) {\r\n                    // 若流形上一刻已经被激活\r\n                    if (manifold.isActive) {\r\n                        this.collisionActive.push(manifold);\r\n                    }\r\n                    // 否则表明该流形第一次发生碰撞\r\n                    else {\r\n                        this.collisionStart.push(manifold);\r\n                    }\r\n                    manifold.update(collision, timeStamp);\r\n                    manifold.confirmedActive = true;\r\n                }\r\n                // 若不存在，则创建对应流形\r\n                else {\r\n                    manifold = new manifold_1.Manifold(collision, timeStamp);\r\n                    this.table[id] = manifold;\r\n                    this.list.push(manifold);\r\n                    this.collisionStart.push(manifold);\r\n                }\r\n            }\r\n        }\r\n        // 遍历查找上一次发生碰撞且当前没有发生碰撞的流形\r\n        for (i = 0; i < this.list.length; i++) {\r\n            manifold = this.list[i];\r\n            // ，将其激活状态取消\r\n            if (manifold.isActive && !manifold.confirmedActive) {\r\n                manifold.toggleActive(false, timeStamp);\r\n                // 标记为碰撞结束\r\n                this.collisionEnd.push(manifold);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 过滤超时的碰撞流形\r\n     * @param timeStamp\r\n     */\r\n    filter(timeStamp) {\r\n        let manifold, i;\r\n        for (i = 0; i < this.list.length; i++) {\r\n            manifold = this.list[i];\r\n            // 若流形的两刚体有其一处于休眠状态，更新事件，不清除\r\n            if (manifold.bodyA.sleeping || manifold.bodyB.sleeping) {\r\n                manifold.timeUpdated = timeStamp;\r\n                continue;\r\n            }\r\n            // 若流形上次更新的时间离现在已经大于设定阈值，则需要清除\r\n            if (timeStamp - manifold.timeUpdated > this.manifoldRemoveThreshold) {\r\n                delete this.table[manifold.id];\r\n                this.list.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 清空流形表和队列\r\n     */\r\n    clear() {\r\n        this.table = {};\r\n        this.list.length = 0;\r\n        this.collisionStart.length = 0;\r\n        this.collisionEnd.length = 0;\r\n        this.collisionActive.length = 0;\r\n    }\r\n}\r\nexports.ManifoldTable = ManifoldTable;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///21\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.BodiesFactory = void 0;\r\nconst circle_1 = __webpack_require__(23);\r\nconst polygon_1 = __webpack_require__(9);\r\nconst rect_1 = __webpack_require__(24);\r\nconst vector_1 = __webpack_require__(1);\r\nconst util_1 = __webpack_require__(0);\r\nclass BodiesFactory {\r\n    /**\r\n     * 创造圆形\r\n     * @param x x\r\n     * @param y y\r\n     * @param radius 半径\r\n     * @param opt 配置项\r\n     */\r\n    Circle(x, y, radius, opt) {\r\n        opt = opt || {};\r\n        util_1.Util.extend(opt, {\r\n            origin: new vector_1.Vector(x, y),\r\n            radius: radius\r\n        });\r\n        return new circle_1.Circle(opt);\r\n        ;\r\n    }\r\n    /**\r\n     * 创造多边形\r\n     * @param x x\r\n     * @param y y\r\n     * @param v 顶点集\r\n     * @param opt 配置项\r\n     */\r\n    Polygon(x, y, v, opt) {\r\n        opt = opt || {};\r\n        let vertices = v.map(vertex => new vector_1.Vector(vertex[0], vertex[1]));\r\n        util_1.Util.extend(opt, {\r\n            origin: new vector_1.Vector(x, y),\r\n            vertices\r\n        });\r\n        return new polygon_1.Polygon(opt);\r\n    }\r\n    /**\r\n     * 创造矩形\r\n     * @param x x\r\n     * @param y y\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @param opt 配置项\r\n     */\r\n    Rect(x, y, width, height, opt) {\r\n        opt = opt || {};\r\n        util_1.Util.extend(opt, {\r\n            origin: new vector_1.Vector(x, y),\r\n            width,\r\n            height\r\n        });\r\n        return new rect_1.Rect(opt);\r\n    }\r\n}\r\nexports.BodiesFactory = BodiesFactory;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29yZS9ib2RpZXNGYWN0b3J5LnRzPzE2ZmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEseUNBQW1EO0FBQ25ELHlDQUFzRDtBQUN0RCx1Q0FBNkM7QUFDN0Msd0NBQXdDO0FBQ3hDLHNDQUFzQztBQUl0QyxNQUFhLGFBQWE7SUFFdEI7Ozs7OztPQU1HO0lBQ0gsTUFBTSxDQUFDLENBQVMsRUFBRSxDQUFTLEVBQUUsTUFBYyxFQUFFLEdBQWU7UUFDeEQsR0FBRyxHQUFHLEdBQUcsSUFBZSxFQUFFLENBQUM7UUFFM0IsV0FBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUU7WUFDYixNQUFNLEVBQUUsSUFBSSxlQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUN4QixNQUFNLEVBQUUsTUFBTTtTQUNqQixDQUFDLENBQUM7UUFFSCxPQUFPLElBQUksZUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQUEsQ0FBQztJQUM1QixDQUFDO0lBRUQ7Ozs7OztPQU1HO0lBQ0gsT0FBTyxDQUFDLENBQVMsRUFBRSxDQUFTLEVBQUUsQ0FBa0IsRUFBRSxHQUFnQjtRQUM5RCxHQUFHLEdBQUcsR0FBRyxJQUFnQixFQUFFLENBQUM7UUFFNUIsSUFBSSxRQUFRLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksZUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWpFLFdBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFO1lBQ2IsTUFBTSxFQUFFLElBQUksZUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDeEIsUUFBUTtTQUNYLENBQUMsQ0FBQztRQUVILE9BQU8sSUFBSSxpQkFBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFRDs7Ozs7OztPQU9HO0lBQ0gsSUFBSSxDQUFDLENBQVMsRUFBRSxDQUFTLEVBQUUsS0FBYSxFQUFFLE1BQWMsRUFBRSxHQUFhO1FBQ25FLEdBQUcsR0FBRyxHQUFHLElBQWEsRUFBRSxDQUFDO1FBRXpCLFdBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFO1lBQ2IsTUFBTSxFQUFFLElBQUksZUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDeEIsS0FBSztZQUNMLE1BQU07U0FDVCxDQUFDLENBQUM7UUFFSCxPQUFPLElBQUksV0FBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3pCLENBQUM7Q0FDSjtBQTNERCxzQ0EyREMiLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaXJjbGUsIENpcmNsZU9wdCB9IGZyb20gXCIuLi9ib2R5L2NpcmNsZVwiO1xyXG5pbXBvcnQgeyBQb2x5Z29uLCBQb2x5Z29uT3B0IH0gZnJvbSBcIi4uL2JvZHkvcG9seWdvblwiO1xyXG5pbXBvcnQgeyBSZWN0LCBSZWN0T3B0IH0gZnJvbSBcIi4uL2JvZHkvcmVjdFwiO1xyXG5pbXBvcnQgeyBWZWN0b3IgfSBmcm9tIFwiLi4vbWF0aC92ZWN0b3JcIjtcclxuaW1wb3J0IHsgVXRpbCB9IGZyb20gXCIuLi9jb21tb24vdXRpbFwiO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY2xhc3MgQm9kaWVzRmFjdG9yeSB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliJvpgKDlnIblvaJcclxuICAgICAqIEBwYXJhbSB4IHhcclxuICAgICAqIEBwYXJhbSB5IHlcclxuICAgICAqIEBwYXJhbSByYWRpdXMg5Y2K5b6EIFxyXG4gICAgICogQHBhcmFtIG9wdCDphY3nva7poblcclxuICAgICAqL1xyXG4gICAgQ2lyY2xlKHg6IG51bWJlciwgeTogbnVtYmVyLCByYWRpdXM6IG51bWJlciwgb3B0PzogQ2lyY2xlT3B0KTogQ2lyY2xlIHtcclxuICAgICAgICBvcHQgPSBvcHQgfHwgPENpcmNsZU9wdD57fTtcclxuXHJcbiAgICAgICAgVXRpbC5leHRlbmQob3B0LCB7XHJcbiAgICAgICAgICAgIG9yaWdpbjogbmV3IFZlY3Rvcih4LCB5KSxcclxuICAgICAgICAgICAgcmFkaXVzOiByYWRpdXNcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG5ldyBDaXJjbGUob3B0KTs7XHJcbiAgICB9ICAgXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliJvpgKDlpJrovrnlvaJcclxuICAgICAqIEBwYXJhbSB4IHhcclxuICAgICAqIEBwYXJhbSB5IHlcclxuICAgICAqIEBwYXJhbSB2IOmhtueCuembhiBcclxuICAgICAqIEBwYXJhbSBvcHQg6YWN572u6aG5XHJcbiAgICAgKi9cclxuICAgIFBvbHlnb24oeDogbnVtYmVyLCB5OiBudW1iZXIsIHY6IEFycmF5PG51bWJlcltdPiwgb3B0PzogUG9seWdvbk9wdCk6IFBvbHlnb24ge1xyXG4gICAgICAgIG9wdCA9IG9wdCB8fCA8UG9seWdvbk9wdD57fTtcclxuXHJcbiAgICAgICAgbGV0IHZlcnRpY2VzID0gdi5tYXAodmVydGV4ID0+IG5ldyBWZWN0b3IodmVydGV4WzBdLCB2ZXJ0ZXhbMV0pKTtcclxuXHJcbiAgICAgICAgVXRpbC5leHRlbmQob3B0LCB7XHJcbiAgICAgICAgICAgIG9yaWdpbjogbmV3IFZlY3Rvcih4LCB5KSxcclxuICAgICAgICAgICAgdmVydGljZXNcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG5ldyBQb2x5Z29uKG9wdCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliJvpgKDnn6nlvaJcclxuICAgICAqIEBwYXJhbSB4IHggXHJcbiAgICAgKiBAcGFyYW0geSB5XHJcbiAgICAgKiBAcGFyYW0gd2lkdGgg5a69IFxyXG4gICAgICogQHBhcmFtIGhlaWdodCDpq5hcclxuICAgICAqIEBwYXJhbSBvcHQg6YWN572u6aG5XHJcbiAgICAgKi9cclxuICAgIFJlY3QoeDogbnVtYmVyLCB5OiBudW1iZXIsIHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyLCBvcHQ/OiBSZWN0T3B0KTogUmVjdCB7XHJcbiAgICAgICAgb3B0ID0gb3B0IHx8IDxSZWN0T3B0Pnt9O1xyXG5cclxuICAgICAgICBVdGlsLmV4dGVuZChvcHQsIHtcclxuICAgICAgICAgICAgb3JpZ2luOiBuZXcgVmVjdG9yKHgsIHkpLFxyXG4gICAgICAgICAgICB3aWR0aCxcclxuICAgICAgICAgICAgaGVpZ2h0XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBuZXcgUmVjdChvcHQpO1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///22\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Circle = void 0;\r\nconst body_1 = __webpack_require__(8);\r\nconst arcs_1 = __webpack_require__(4);\r\nclass Circle extends body_1.Body {\r\n    constructor(opt) {\r\n        super(opt, body_1.bodyType.circle);\r\n        this.arc = this.getArc();\r\n        this.parts = [this.arc];\r\n        this.bound = this.arc.bound;\r\n    }\r\n    getArea() {\r\n        return Math.PI * this.radius * this.radius;\r\n    }\r\n    getCentroid() {\r\n        return this.origin.col();\r\n    }\r\n    getInertia() {\r\n        return 0.5 * this.mass * Math.pow(this.radius, 2);\r\n    }\r\n    /**\r\n     * 获取圆形信息包\r\n     */\r\n    getArc() {\r\n        return arcs_1.Arcs.create(this);\r\n    }\r\n    translate(distance) {\r\n        // 位移图形原点\r\n        this.origin.x += distance.x;\r\n        this.origin.y += distance.y;\r\n        // 位移圆形\r\n        arcs_1.Arcs.translate(this.arc, distance);\r\n    }\r\n}\r\nexports.Circle = Circle;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYm9keS9jaXJjbGUudHM/NWFiNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxzQ0FBaUQ7QUFHakQsc0NBQTJDO0FBWTNDLE1BQWEsTUFBTyxTQUFRLFdBQUk7SUFLNUIsWUFBWSxHQUFjO1FBQ3RCLEtBQUssQ0FBQyxHQUFHLEVBQUUsZUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRTVCLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDeEIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQztJQUNoQyxDQUFDO0lBRUQsT0FBTztRQUNILE9BQU8sSUFBSSxDQUFDLEVBQUUsR0FBQyxJQUFJLENBQUMsTUFBTSxHQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDM0MsQ0FBQztJQUVELFdBQVc7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVELFVBQVU7UUFDTixPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRUQ7O09BRUc7SUFDSCxNQUFNO1FBQ0YsT0FBTyxXQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFFRCxTQUFTLENBQUMsUUFBZ0I7UUFDdEIsU0FBUztRQUNULElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDNUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksUUFBUSxDQUFDLENBQUMsQ0FBQztRQUU1QixPQUFPO1FBQ1AsV0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7Q0FDSjtBQXhDRCx3QkF3Q0MiLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb2R5LCBCb2R5T3B0LCBib2R5VHlwZSB9IGZyb20gXCIuL2JvZHlcIjtcclxuaW1wb3J0IHsgVmVjdG9yIH0gZnJvbSBcIi4uL21hdGgvdmVjdG9yXCI7XHJcbmltcG9ydCB7IEJvdW5kIH0gZnJvbSBcIi4uL2NvbGxpc2lvbi9ib3VuZFwiO1xyXG5pbXBvcnQgeyBBcmMsIEFyY3MgfSBmcm9tIFwiLi4vY29tbW9uL2FyY3NcIjtcclxuXHJcbi8qKlxyXG4gKiDlnIblvaLliJrkvZNcclxuICovXHJcblxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBDaXJjbGVPcHQgZXh0ZW5kcyBCb2R5T3B0IHtcclxuICAgIHJhZGl1czogbnVtYmVyO1xyXG59XHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIENpcmNsZSBleHRlbmRzIEJvZHkge1xyXG4gICAgLy8g5Y2K5b6EXHJcbiAgICByYWRpdXM6IG51bWJlcjtcclxuICAgIGFyYzogQXJjO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG9wdDogQ2lyY2xlT3B0KSB7XHJcbiAgICAgICAgc3VwZXIob3B0LCBib2R5VHlwZS5jaXJjbGUpO1xyXG5cclxuICAgICAgICB0aGlzLmFyYyA9IHRoaXMuZ2V0QXJjKCk7XHJcbiAgICAgICAgdGhpcy5wYXJ0cyA9IFt0aGlzLmFyY107XHJcbiAgICAgICAgdGhpcy5ib3VuZCA9IHRoaXMuYXJjLmJvdW5kO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEFyZWEoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gTWF0aC5QSSp0aGlzLnJhZGl1cyp0aGlzLnJhZGl1cztcclxuICAgIH1cclxuXHJcbiAgICBnZXRDZW50cm9pZCgpOiBWZWN0b3Ige1xyXG4gICAgICAgIHJldHVybiB0aGlzLm9yaWdpbi5jb2woKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRJbmVydGlhKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIDAuNSAqIHRoaXMubWFzcyAqIE1hdGgucG93KHRoaXMucmFkaXVzLCAyKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOiOt+WPluWchuW9ouS/oeaBr+WMhVxyXG4gICAgICovXHJcbiAgICBnZXRBcmMoKTogQXJjIHtcclxuICAgICAgICByZXR1cm4gQXJjcy5jcmVhdGUodGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgdHJhbnNsYXRlKGRpc3RhbmNlOiBWZWN0b3IpIHtcclxuICAgICAgICAvLyDkvY3np7vlm77lvaLljp/ngrlcclxuICAgICAgICB0aGlzLm9yaWdpbi54ICs9IGRpc3RhbmNlLng7XHJcbiAgICAgICAgdGhpcy5vcmlnaW4ueSArPSBkaXN0YW5jZS55O1xyXG5cclxuICAgICAgICAvLyDkvY3np7vlnIblvaJcclxuICAgICAgICBBcmNzLnRyYW5zbGF0ZSh0aGlzLmFyYywgZGlzdGFuY2UpO1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///23\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\n/**\r\n * 矩形刚体\r\n */\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Rect = void 0;\r\nconst polygon_1 = __webpack_require__(9);\r\nconst vector_1 = __webpack_require__(1);\r\nconst vertices_1 = __webpack_require__(2);\r\nclass Rect extends polygon_1.Polygon {\r\n    constructor(opt) {\r\n        super(opt);\r\n    }\r\n    getPoly() {\r\n        let leftTop = this.origin.col(), rightTop = leftTop.add(new vector_1.Vector(this.width, 0)), rightBottom = leftTop.add(new vector_1.Vector(this.width, this.height)), leftBottom = leftTop.add(new vector_1.Vector(0, this.height)), poly = vertices_1.Vertices.create(this, [leftTop, rightTop, rightBottom, leftBottom]);\r\n        // 筛选矩形的轴\r\n        poly.axes = vertices_1.Vertices.uniqueAxes(poly.axes);\r\n        return poly;\r\n    }\r\n    getArea() {\r\n        return this.width * this.height;\r\n    }\r\n    getCentroid() {\r\n        return this.origin.add(new vector_1.Vector(this.width / 2, this.height / 2));\r\n    }\r\n    getInertia() {\r\n        return this.mass * (this.width * this.width + this.height * this.height) / 12;\r\n    }\r\n}\r\nexports.Rect = Rect;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYm9keS9yZWN0LnRzPzJkYWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOztHQUVHOzs7QUFFSCx5Q0FBZ0Q7QUFDaEQsd0NBQXdDO0FBQ3hDLDBDQUFvRDtBQVVwRCxNQUFhLElBQUssU0FBUSxpQkFBTztJQU03QixZQUFZLEdBQVk7UUFDcEIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2YsQ0FBQztJQUVELE9BQU87UUFDSCxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxFQUMzQixRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLGVBQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQ2pELFdBQVcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksZUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQzlELFVBQVUsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksZUFBTSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFDcEQsSUFBSSxHQUFHLG1CQUFRLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7UUFFM0UsU0FBUztRQUNULElBQUksQ0FBQyxJQUFJLEdBQUcsbUJBQVEsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRS9DLE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxPQUFPO1FBQ0gsT0FBTyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDcEMsQ0FBQztJQUVELFdBQVc7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLElBQUksZUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxFQUFFLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN4RSxDQUFDO0lBRUQsVUFBVTtRQUNOLE9BQU8sSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDbEYsQ0FBQztDQUNKO0FBbENELG9CQWtDQyIsImZpbGUiOiIyNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiDnn6nlvaLliJrkvZNcclxuICovXHJcblxyXG5pbXBvcnQgeyBQb2x5Z29uLCBQb2x5Z29uT3B0IH0gZnJvbSBcIi4vcG9seWdvblwiO1xyXG5pbXBvcnQgeyBWZWN0b3IgfSBmcm9tIFwiLi4vbWF0aC92ZWN0b3JcIjtcclxuaW1wb3J0IHsgUG9seSwgVmVydGljZXMgfSBmcm9tIFwiLi4vY29tbW9uL3ZlcnRpY2VzXCI7XHJcblxyXG5cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUmVjdE9wdCBleHRlbmRzIFBvbHlnb25PcHQge1xyXG4gICAgd2lkdGg6IG51bWJlcjtcclxuICAgIGhlaWdodDogbnVtYmVyO1xyXG59XHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIFJlY3QgZXh0ZW5kcyBQb2x5Z29uIHtcclxuICAgIC8vIOWuvVxyXG4gICAgd2lkdGg6IG51bWJlcjtcclxuICAgIC8vIOmrmFxyXG4gICAgaGVpZ2h0OiBudW1iZXI7XHJcblxyXG4gICAgY29uc3RydWN0b3Iob3B0OiBSZWN0T3B0KSB7XHJcbiAgICAgICAgc3VwZXIob3B0KTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRQb2x5KCk6IFBvbHkge1xyXG4gICAgICAgIGxldCBsZWZ0VG9wID0gdGhpcy5vcmlnaW4uY29sKCksXHJcbiAgICAgICAgICAgIHJpZ2h0VG9wID0gbGVmdFRvcC5hZGQobmV3IFZlY3Rvcih0aGlzLndpZHRoLCAwKSksXHJcbiAgICAgICAgICAgIHJpZ2h0Qm90dG9tID0gbGVmdFRvcC5hZGQobmV3IFZlY3Rvcih0aGlzLndpZHRoLCB0aGlzLmhlaWdodCkpLFxyXG4gICAgICAgICAgICBsZWZ0Qm90dG9tID0gbGVmdFRvcC5hZGQobmV3IFZlY3RvcigwLCB0aGlzLmhlaWdodCkpLFxyXG4gICAgICAgICAgICBwb2x5ID0gVmVydGljZXMuY3JlYXRlKHRoaXMsIFtsZWZ0VG9wLCByaWdodFRvcCwgcmlnaHRCb3R0b20sIGxlZnRCb3R0b21dKTtcclxuXHJcbiAgICAgICAgICAgIC8vIOetm+mAieefqeW9oueahOi9tFxyXG4gICAgICAgICAgICBwb2x5LmF4ZXMgPSBWZXJ0aWNlcy51bmlxdWVBeGVzKHBvbHkuYXhlcyk7XHJcblxyXG4gICAgICAgIHJldHVybiBwb2x5O1xyXG4gICAgfVxyXG5cclxuICAgIGdldEFyZWEoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy53aWR0aCAqIHRoaXMuaGVpZ2h0O1xyXG4gICAgfVxyXG5cclxuICAgIGdldENlbnRyb2lkKCk6IFZlY3RvciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMub3JpZ2luLmFkZChuZXcgVmVjdG9yKHRoaXMud2lkdGggLyAyLCB0aGlzLmhlaWdodCAvIDIpKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRJbmVydGlhKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMubWFzcyAqICh0aGlzLndpZHRoICogdGhpcy53aWR0aCArIHRoaXMuaGVpZ2h0ICogdGhpcy5oZWlnaHQpIC8gMTI7XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///24\n')}])}));