!function(Q,U){if("object"==typeof exports&&"object"==typeof module)module.exports=U();else if("function"==typeof define&&define.amd)define([],U);else{var F=U();for(var B in F)("object"==typeof exports?exports:Q)[B]=F[B]}}(window,(function(){return function(Q){var U={};function F(B){if(U[B])return U[B].exports;var I=U[B]={i:B,l:!1,exports:{}};return Q[B].call(I.exports,I,I.exports,F),I.l=!0,I.exports}return F.m=Q,F.c=U,F.d=function(Q,U,B){F.o(Q,U)||Object.defineProperty(Q,U,{enumerable:!0,get:B})},F.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},F.t=function(Q,U){if(1&U&&(Q=F(Q)),8&U)return Q;if(4&U&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var B=Object.create(null);if(F.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:Q}),2&U&&"string"!=typeof Q)for(var I in Q)F.d(B,I,function(U){return Q[U]}.bind(null,I));return B},F.n=function(Q){var U=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return F.d(U,"a",U),U},F.o=function(Q,U){return Object.prototype.hasOwnProperty.call(Q,U)},F.p="",F(F.s=10)}([function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Util = void 0;\r\n// 常用工具函数\r\nexports.Util = {\r\n    _id: 0,\r\n    /**\r\n     * 生成一个id（整数类型）\r\n     */\r\n    id() {\r\n        return this._id++;\r\n    },\r\n    /**\r\n     * 根据两个id生成一个复合id（字符串类型）: 'id1.id2'\r\n     * @param id1\r\n     * @param id2\r\n     */\r\n    compositeId(id1, id2) {\r\n        if (id1 < id2) {\r\n            return id1 + '.' + id2;\r\n        }\r\n        else {\r\n            return id2 + '.' + id1;\r\n        }\r\n    },\r\n    /**\r\n     * 对象合并\r\n     * @param originOpt 源对象\r\n     * @param destOpt 目标对象\r\n     */\r\n    merge(originOpt, destOpt) {\r\n        if (!originOpt || !destOpt)\r\n            return;\r\n        for (let key in destOpt) {\r\n            if (typeof destOpt[key] === 'object' &&\r\n                !Array.isArray(destOpt[key]) &&\r\n                originOpt[key] !== null &&\r\n                originOpt[key] !== undefined) {\r\n                this.merge(originOpt[key], destOpt[key]);\r\n            }\r\n            else {\r\n                if ((destOpt[key] !== null || destOpt[key] !== undefined) && originOpt[key] !== undefined) {\r\n                    originOpt[key] = destOpt[key];\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * 对象扩展\r\n     * @param originOpt 源对象\r\n     * @param extendOpt 扩展对象\r\n     */\r\n    extend(originOpt, extendOpt) {\r\n        if (!originOpt || !extendOpt)\r\n            return;\r\n        for (let key in extendOpt) {\r\n            if (typeof extendOpt[key] === 'object' &&\r\n                !Array.isArray(extendOpt[key]) &&\r\n                originOpt[key] !== null &&\r\n                originOpt[key] !== undefined) {\r\n                this.extend(originOpt[key], extendOpt[key]);\r\n            }\r\n            else {\r\n                if (extendOpt[key] !== null || extendOpt[key] !== undefined)\r\n                    originOpt[key] = extendOpt[key];\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * 从列表移除某个元素\r\n     * @param list 列表\r\n     * @param item 要移除的元素\r\n     */\r\n    remove(list, item) {\r\n        list.splice(list.findIndex(i => i['id'] === item['id']), 1);\r\n    },\r\n    /**\r\n     * 角度转弧度\r\n     * @param angle 角度\r\n     */\r\n    angle2Radian(angle) {\r\n        return (angle / 180) * Math.PI;\r\n    },\r\n    /**\r\n     * 弧度转角度\r\n     * @param radian 弧度\r\n     */\r\n    radian2Angle(radian) {\r\n        return radian / Math.PI * 180;\r\n    },\r\n    /**\r\n     * 返回页面加载完毕开始到当前的时间（微秒级，performance api）\r\n     */\r\n    now() {\r\n        return window.performance.now();\r\n    },\r\n    /**\r\n     * 直接插入排序\r\n     * @param list 要排序的列表\r\n     * @param fn 比较函数\r\n     */\r\n    insertSort(list, fn) {\r\n        let len = list.length, i, j, temp;\r\n        for (i = 1; i < len; i++) {\r\n            temp = list[i];\r\n            for (j = i - 1; j >= 0 && fn(list[j], temp) > 0; j--) {\r\n                list[j + 1] = list[j];\r\n            }\r\n            list[j + 1] = temp;\r\n        }\r\n    },\r\n    /**\r\n     * 对给定的value，收窄在min和max范围内\r\n     * @param value\r\n     * @param min\r\n     * @param max\r\n     */\r\n    clamp(value, min, max) {\r\n        if (value < min)\r\n            return min;\r\n        if (value > max)\r\n            return max;\r\n        return value;\r\n    },\r\n    /**\r\n     * 返回一个数的正负号\r\n     * @param value\r\n     */\r\n    sign(value) {\r\n        return value < 0 ? -1 : 1;\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports._tempVector4 = exports._tempVector3 = exports._tempVector2 = exports._tempVector1 = exports.Vector = void 0;\r\n// 二维向量 {x, y}\r\nclass Vector {\r\n    constructor(x, y) {\r\n        this.x = 0;\r\n        this.y = 0;\r\n        if (x !== undefined && y !== undefined) {\r\n            this.set(x, y);\r\n        }\r\n    }\r\n    //-------------操作----------------\r\n    /**\r\n     * 设置值\r\n     * @param x\r\n     * @param y\r\n     */\r\n    set(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n    /**\r\n     * 相加\r\n     * @param v\r\n     */\r\n    add(v, out) {\r\n        out = out || new Vector();\r\n        out.x = this.x + v.x;\r\n        out.y = this.y + v.y;\r\n        return out;\r\n    }\r\n    /**\r\n     * 相减\r\n     * @param v\r\n     */\r\n    sub(v, out) {\r\n        out = out || new Vector();\r\n        out.x = this.x - v.x;\r\n        out.y = this.y - v.y;\r\n        return out;\r\n    }\r\n    /**\r\n     * 点积\r\n     * @param v\r\n     */\r\n    dot(v) {\r\n        return this.x * v.x + this.y * v.y;\r\n    }\r\n    /**\r\n     * 叉积\r\n     * @param v\r\n     */\r\n    cro(v) {\r\n        return this.x * v.y - v.x * this.y;\r\n    }\r\n    /**\r\n     * 与标量进行叉积\r\n     * @param n\r\n     */\r\n    croNum(n, out) {\r\n        out = out || new Vector();\r\n        out.x = -n * this.y;\r\n        out.y = n * this.x;\r\n        return out;\r\n    }\r\n    /**\r\n     * 投影\r\n     * @param v\r\n     */\r\n    pro(v) {\r\n        return this.dot(v) / v.len();\r\n    }\r\n    /**\r\n     * 法向\r\n     */\r\n    nor(out) {\r\n        out = out || new Vector();\r\n        out.x = -this.y;\r\n        out.y = this.x;\r\n        return out;\r\n    }\r\n    /**\r\n     * 求模\r\n     */\r\n    len() {\r\n        return Math.hypot(this.x, this.y);\r\n    }\r\n    /**\r\n     * 平方模（节省求平方根操作）\r\n     */\r\n    len_s() {\r\n        return this.x * this.x + this.y * this.y;\r\n    }\r\n    /**\r\n     * 单位化\r\n     */\r\n    nol() {\r\n        let len = this.len();\r\n        if (len === 0) {\r\n            return new Vector();\r\n        }\r\n        this.x = this.x / len;\r\n        this.y = this.y / len;\r\n        return this;\r\n    }\r\n    /**\r\n     * 缩放\r\n     * @param n\r\n     */\r\n    scl(n, out) {\r\n        out = out || new Vector();\r\n        out.x = n * this.x;\r\n        out.y = n * this.y;\r\n        return out;\r\n    }\r\n    /**\r\n     * 反向\r\n     */\r\n    inv(out) {\r\n        out = out || new Vector();\r\n        out.x = -this.x;\r\n        out.y = -this.y;\r\n        return out;\r\n    }\r\n    /**\r\n     * 判断两向量是否相等\r\n     * @param v\r\n     */\r\n    eql(v) {\r\n        return this.x === v.x && this.y === v.y;\r\n    }\r\n    /**\r\n     * 求两向量夹角(弧度制)\r\n     * @param v\r\n     */\r\n    ang(v) {\r\n        return Math.acos(this.dot(v) / (this.len() * v.len()));\r\n    }\r\n    /**\r\n     * 克隆向量\r\n     */\r\n    col() {\r\n        return new Vector(this.x, this.y);\r\n    }\r\n    /**\r\n     * 绕某点旋转向量\r\n     * @param radian 角度（弧度制）\r\n     * @param point 绕的点\r\n     */\r\n    rot(radian, point, out) {\r\n        point = point || new Vector();\r\n        out = out || new Vector();\r\n        let cos = Math.cos(radian), sin = Math.sin(radian), dx = this.x - point.x, dy = this.y - point.y;\r\n        out.x = point.x + (dx * cos - dy * sin);\r\n        out.y = point.y + (dx * sin + dy * cos);\r\n        return out;\r\n    }\r\n    /**\r\n     * 求一个向量（点）按照direction方向，延长len长度后的坐标\r\n     * @param direction\r\n     * @param len\r\n     */\r\n    loc(direction, len, out) {\r\n        out = out || new Vector();\r\n        direction = direction.nol();\r\n        out.x = this.x + direction.x * len;\r\n        out.y = this.y + direction.y * len;\r\n        return out;\r\n    }\r\n}\r\nexports.Vector = Vector;\r\n;\r\nexports._tempVector1 = new Vector();\r\nexports._tempVector2 = new Vector();\r\nexports._tempVector3 = new Vector();\r\nexports._tempVector4 = new Vector();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Vertices = exports.Poly = void 0;\r\nconst vector_1 = __webpack_require__(1);\r\nconst bound_1 = __webpack_require__(6);\r\nconst util_1 = __webpack_require__(0);\r\n// 一个顶点信息包\r\nclass Poly {\r\n    constructor(body, vertexList) {\r\n        this.id = util_1.Util.id();\r\n        this.body = body;\r\n        this.vertexList = vertexList;\r\n        this.axes = exports.Vertices.getAxes(vertexList);\r\n        this.centroid = exports.Vertices.getCentroid(vertexList);\r\n        this.bound = exports.Vertices.getBound(vertexList);\r\n    }\r\n}\r\nexports.Poly = Poly;\r\n;\r\n// 顶点操作工具\r\nexports.Vertices = {\r\n    /**\r\n     * 创造顶点信息包\r\n     * @param body 顶点所属的刚体\r\n     * @param vertices 顶点集\r\n     */\r\n    create(body, vertexList) {\r\n        return new Poly(body, vertexList);\r\n    },\r\n    /**\r\n     * 获取多边形中心点\r\n     * @param vertexList\r\n     */\r\n    getCenter(vertexList) {\r\n        let range = this.getRange(vertexList), centerX = (range.max.x + range.min.x) / 2, centerY = (range.max.y + range.min.y) / 2;\r\n        return new vector_1.Vector(centerX, centerY);\r\n    },\r\n    /**\r\n     * 获取多边形质心\r\n     * @param vertexList\r\n     */\r\n    getCentroid(vertexList) {\r\n        let area = this.getArea(vertexList), centroid = new vector_1.Vector(0, 0), cross = 0, temp, j;\r\n        for (let i = 0; i < vertexList.length; i++) {\r\n            j = (i + 1) % vertexList.length;\r\n            cross = vertexList[i].cro(vertexList[j]);\r\n            temp = vertexList[i].add(vertexList[j]).scl(cross);\r\n            centroid.add(temp, centroid);\r\n        }\r\n        return centroid.scl(1 / (6 * area), centroid);\r\n    },\r\n    /**\r\n     * 获取多边形面积\r\n     * @param vertexList\r\n     */\r\n    getArea(vertexList) {\r\n        let area = 0, j = vertexList.length - 1;\r\n        for (let i = 0; i < vertexList.length; i++) {\r\n            area += (vertexList[j].x - vertexList[i].x) * (vertexList[j].y + vertexList[i].y);\r\n            j = i;\r\n        }\r\n        return area / 2;\r\n    },\r\n    /**\r\n     * 获取多边形的转动惯量\r\n     * 公式来自：https://blog.csdn.net/weixin_34194702/article/details/93587529\r\n     * @param vertexList\r\n     * @param mass 质量\r\n     * @param position\r\n     */\r\n    getInertia(vertexList, mass, position) {\r\n        let numerator = 0, denominator = 0, v = vertexList, cur, next, cross;\r\n        for (let n = 0; n < v.length; n++) {\r\n            cur = v[n].sub(position, cur);\r\n            next = v[(n + 1) % v.length].sub(position, next);\r\n            cross = Math.abs(cur.cro(next));\r\n            numerator += cross * (cur.dot(cur) + cur.dot(next) + next.dot(next));\r\n            denominator += cross;\r\n        }\r\n        return (mass / 6) * (numerator / denominator);\r\n    },\r\n    /**\r\n     * 求顶点围成的所有面的轴\r\n     * @param vertexList\r\n     */\r\n    getAxes(vertexList) {\r\n        let v = vertexList, axis, axes = [], i, j;\r\n        for (i = 0; i < v.length; i++) {\r\n            j = (i + 1) % v.length;\r\n            axis = v[j].sub(v[i]).nor().nol();\r\n            axes.push(axis);\r\n        }\r\n        return axes;\r\n    },\r\n    /**\r\n     * 获取顶点集的范围\r\n     * @param vertexList\r\n     */\r\n    getRange(vertexList) {\r\n        let xList = vertexList.map(v => v.x), yList = vertexList.map(v => v.y);\r\n        return {\r\n            min: new vector_1.Vector(Math.min.apply(Math, xList), Math.min.apply(Math, yList)),\r\n            max: new vector_1.Vector(Math.max.apply(Math, xList), Math.max.apply(Math, yList))\r\n        };\r\n    },\r\n    /**\r\n     * 获取顶点集形成的包围盒\r\n     * @param vertexList\r\n     */\r\n    getBound(vertexList) {\r\n        let range = exports.Vertices.getRange(vertexList);\r\n        return new bound_1.Bound(range.min, range.max);\r\n    },\r\n    /**\r\n     * 使用斜率筛去共线的轴\r\n     * @param axes 要筛选的轴\r\n     */\r\n    uniqueAxes(axes) {\r\n        let axisVector, tmpAxes = [], axesTable = {}, i, gradient;\r\n        for (i = 0; i < axes.length; i++) {\r\n            axisVector = axes[i];\r\n            gradient = (axisVector.y === 0) ? Infinity : (axisVector.x / axisVector.y);\r\n            // 限制精度\r\n            gradient = gradient.toFixed(3).toString();\r\n            axesTable[gradient] = axes[i];\r\n        }\r\n        Object.keys(axesTable).map(item => {\r\n            tmpAxes.push(axesTable[item]);\r\n        });\r\n        return tmpAxes;\r\n    },\r\n    /**\r\n     * 旋转顶点\r\n     * @param poly 多边形\r\n     * @param radian 弧度\r\n     * @param point 绕点\r\n     */\r\n    rotate(poly, radian, point) {\r\n        let vertexList = poly.vertexList, axes = poly.axes, i;\r\n        // 转动顶点\r\n        for (i = 0; i < vertexList.length; i++) {\r\n            vertexList[i].rot(radian, point, vertexList[i]);\r\n        }\r\n        // 转动轴\r\n        for (i = 0; i < axes.length; i++) {\r\n            axes[i].rot(radian, null, axes[i]);\r\n        }\r\n        // 更新几何中心\r\n        poly.centroid.rot(radian, point, poly.centroid);\r\n        // 更新包围盒\r\n        poly.bound.update(poly.vertexList);\r\n    },\r\n    /**\r\n     * 位移顶点\r\n     * @param poly 多边形\r\n     * @param distance 位移向量\r\n     */\r\n    translate(poly, distance) {\r\n        let v = poly.vertexList, i;\r\n        // 位移顶点\r\n        for (i = 0; i < v.length; i++) {\r\n            v[i].x += distance.x;\r\n            v[i].y += distance.y;\r\n        }\r\n        poly.centroid.x += distance.x;\r\n        poly.centroid.y += distance.y;\r\n        // 位移包围盒\r\n        poly.bound.translate(distance);\r\n    },\r\n    /**\r\n     * 将凹多边形分解为多个子凸多边形\r\n     * @param poly\r\n     */\r\n    divide(poly) {\r\n        // 将拆分出来的多边形保存到这个数组\r\n        let parts = [], v = poly.vertexList.slice(0), partA, partB, vertexListA, vertexListB, axes = poly.axes.slice(0), axesA, axesB, xAxis, vTest, vDiv, dividePointA, dividePointB, len = v.length, i, j, cur, next, next2, flag = false;\r\n        for (i = 0; i < len; i++) {\r\n            cur = i;\r\n            next = (i + 1) % len;\r\n            next2 = (i + 2) % len;\r\n            xAxis = v[next].sub(v[cur]);\r\n            vTest = v[next2].sub(v[cur]);\r\n            if (xAxis.cro(vTest) < 0) {\r\n                for (j = i + 3; j < len; j++) {\r\n                    vDiv = v[j].sub(v[cur]);\r\n                    if (xAxis.cro(vDiv) > 0) {\r\n                        flag = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (flag)\r\n                    break;\r\n            }\r\n        }\r\n        // 获取两个分割点\r\n        dividePointA = v[next],\r\n            dividePointB = v[j];\r\n        // 拆分为两个多边形vertexListA和vertexListB\r\n        vertexListB = v.splice(next2, j - next2);\r\n        vertexListA = v;\r\n        vertexListB.unshift(dividePointA);\r\n        vertexListB.push(dividePointB);\r\n        axesB = axes.splice(next, j - next);\r\n        axesA = axes;\r\n        partA = exports.Vertices.create(poly.body, vertexListA);\r\n        partB = exports.Vertices.create(poly.body, vertexListB);\r\n        partA.axes = axesA;\r\n        partB.axes = axesB;\r\n        // 检测拆分出来的两个多边形是否是凹多边形，若果是，继续递归拆分\r\n        if (this.isConcave(vertexListA)) {\r\n            parts.push(...this.divide(partA));\r\n        }\r\n        else {\r\n            parts.push(partA);\r\n        }\r\n        if (this.isConcave(vertexListB)) {\r\n            parts.push(...this.divide(partB));\r\n        }\r\n        else {\r\n            parts.push(partB);\r\n        }\r\n        return parts;\r\n    },\r\n    /**\r\n     * 判断是否包含顶点（射线法）\r\n     * 参考：https://www.cnblogs.com/anningwang/p/7581545.html\r\n     * @param vertexList\r\n     * @param point 检测的顶点\r\n     */\r\n    isContains(vertexList, point) {\r\n        let v = vertexList, cur, next, len = vertexList.length;\r\n        for (let i = 0; i < len; i++) {\r\n            cur = v[i], next = v[(i + 1) % len];\r\n            if ((point.x - cur.x) * (next.y - cur.y) + (point.y - cur.y) * (cur.x - next.x) > 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    /**\r\n     * 判断是否为凹多边形\r\n     * @param vertexList\r\n     */\r\n    isConcave(vertexList) {\r\n        let v = vertexList, \r\n        // 上两向量间的叉积\r\n        prevCor, \r\n        // 当前两向量的叉积\r\n        curCor, \r\n        // 上一顶点到当前顶点的向量\r\n        prev2Cur, \r\n        // 当前顶点到下一顶点的向量\r\n        cur2Next, len = v.length, i, j, k;\r\n        for (i = 1; i < len; i++) {\r\n            j = i - 1;\r\n            k = (i + 1) % len;\r\n            prev2Cur = v[i].sub(v[j]);\r\n            cur2Next = v[k].sub(v[i]);\r\n            // 计算向量叉积\r\n            curCor = prev2Cur.cro(cur2Next) >= 0 ? 1 : -1;\r\n            if (prevCor !== undefined && prevCor !== curCor) {\r\n                return true;\r\n            }\r\n            prevCor = curCor;\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * 转换到世界坐标\r\n     * @param point 参考点\r\n     * @param vertexList\r\n     */\r\n    transform2World(point, vertexList) {\r\n        return vertexList.map(v => v.add(point, v));\r\n    },\r\n    /**\r\n     * 转换到本地坐标\r\n     * @param point 参考点\r\n     * @param vertexList\r\n     */\r\n    transform2Local(point, vertexList) {\r\n        return vertexList.map(v => v.sub(point, v));\r\n    },\r\n    /**\r\n     * 求多边形在某个轴的投影\r\n     * @param vertexList\r\n     * @param axis 投影轴\r\n     */\r\n    projection(vertexList, axis) {\r\n        let projectionRange = vertexList.map(v => v.pro(axis));\r\n        return {\r\n            min: Math.min.apply(Math, projectionRange),\r\n            max: Math.max.apply(Math, projectionRange)\r\n        };\r\n    },\r\n    /**\r\n     * 计算顶点集中离给定点最近的顶点\r\n     * @param point 给定点\r\n     * @param vertexList 顶点集\r\n     */\r\n    getClosestVertex(point, vertexList) {\r\n        let v = vertexList, i, min = Infinity, length, index, len = v.length;\r\n        for (i = 0; i < len; i++) {\r\n            length = v[i].sub(point).len();\r\n            if (length < min) {\r\n                min = length;\r\n                index = i;\r\n            }\r\n        }\r\n        return vertexList[index];\r\n    },\r\n    /**\r\n     * 寻找顶点集中所有凹点\r\n     * @param vertexList\r\n     */\r\n    findCaves(vertexList) {\r\n        let caves = [], v = vertexList, prevVertex, curVertex, nextVertex, len = v.length, i;\r\n        for (i = 1; i < len; i++) {\r\n            prevVertex = v[i - 1];\r\n            curVertex = v[i];\r\n            nextVertex = v[(i + 1) % len];\r\n            // 利用叉乘判断\r\n            if (curVertex.sub(prevVertex).cro(nextVertex.sub(curVertex)) < 0) {\r\n                caves.push(curVertex);\r\n            }\r\n        }\r\n        return caves;\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n')},function(module,exports,__webpack_require__){"use strict";eval("\r\n/**\r\n * 事件管理器\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Event = void 0;\r\nclass EventEmitter {\r\n    /**\r\n     * 绑定事件\r\n     * @param obj\r\n     * @param eventName\r\n     * @param fn\r\n     */\r\n    bind(obj, eventName, fn) {\r\n        obj.methods[eventName] = fn;\r\n    }\r\n    /**\r\n     * 解绑事件\r\n     * @param obj\r\n     * @param eventName\r\n     */\r\n    unBind(obj, eventName) {\r\n        obj.methods[eventName] = null;\r\n    }\r\n    /**\r\n     * 事件发射\r\n     * @param obj\r\n     * @param eventName 事件名称\r\n     */\r\n    emit(obj, eventName, ...para) {\r\n        obj.methods[eventName] && typeof obj.methods[eventName] === 'function' && obj.methods[eventName](...para);\r\n    }\r\n}\r\nexports.Event = new EventEmitter();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZXZlbnQvZXZlbnRFbWl0dGVyLnRzP2NlOTQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBOztHQUVHOzs7QUFJSCxNQUFNLFlBQVk7SUFFZDs7Ozs7T0FLRztJQUNILElBQUksQ0FBQyxHQUFRLEVBQUUsU0FBaUIsRUFBRSxFQUFZO1FBQzFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQ2hDLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsTUFBTSxDQUFDLEdBQVEsRUFBRSxTQUFpQjtRQUM5QixHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLElBQUksQ0FBQztJQUNsQyxDQUFDO0lBR0Q7Ozs7T0FJRztJQUNILElBQUksQ0FBSSxHQUFRLEVBQUUsU0FBaUIsRUFBRSxHQUFHLElBQVM7UUFDN0MsR0FBRyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxPQUFPLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEtBQUssVUFBVSxJQUFJLEdBQUcsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsQ0FBQztJQUM5RyxDQUFDO0NBQ0o7QUFHWSxhQUFLLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQyIsImZpbGUiOiIzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi8qKlxyXG4gKiDkuovku7bnrqHnkIblmahcclxuICovXHJcblxyXG5cclxuXHJcbmNsYXNzIEV2ZW50RW1pdHRlciB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnu5Hlrprkuovku7ZcclxuICAgICAqIEBwYXJhbSBvYmogXHJcbiAgICAgKiBAcGFyYW0gZXZlbnROYW1lIFxyXG4gICAgICogQHBhcmFtIGZuIFxyXG4gICAgICovXHJcbiAgICBiaW5kKG9iajogYW55LCBldmVudE5hbWU6IHN0cmluZywgZm46IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgb2JqLm1ldGhvZHNbZXZlbnROYW1lXSA9IGZuO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6Kej57uR5LqL5Lu2XHJcbiAgICAgKiBAcGFyYW0gb2JqIFxyXG4gICAgICogQHBhcmFtIGV2ZW50TmFtZSBcclxuICAgICAqL1xyXG4gICAgdW5CaW5kKG9iajogYW55LCBldmVudE5hbWU6IHN0cmluZykge1xyXG4gICAgICAgIG9iai5tZXRob2RzW2V2ZW50TmFtZV0gPSBudWxsO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIOS6i+S7tuWPkeWwhFxyXG4gICAgICogQHBhcmFtIG9iaiBcclxuICAgICAqIEBwYXJhbSBldmVudE5hbWUg5LqL5Lu25ZCN56ewIFxyXG4gICAgICovXHJcbiAgICBlbWl0PFQ+KG9iajogYW55LCBldmVudE5hbWU6IHN0cmluZywgLi4ucGFyYTogYW55KSB7XHJcbiAgICAgICAgb2JqLm1ldGhvZHNbZXZlbnROYW1lXSAmJiB0eXBlb2Ygb2JqLm1ldGhvZHNbZXZlbnROYW1lXSA9PT0gJ2Z1bmN0aW9uJyAmJiBvYmoubWV0aG9kc1tldmVudE5hbWVdKC4uLnBhcmEpO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEV2ZW50ID0gbmV3IEV2ZW50RW1pdHRlcigpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Arcs = exports.Arc = void 0;\r\nconst vector_1 = __webpack_require__(1);\r\nconst vertices_1 = __webpack_require__(2);\r\nconst bound_1 = __webpack_require__(6);\r\n// 一个圆形信息包\r\nclass Arc {\r\n    constructor(body, centroid, radius) {\r\n        this.id = body.id;\r\n        this.body = body;\r\n        this.centroid = centroid;\r\n        this.radius = radius;\r\n        this.bound = exports.Arcs.getBound(centroid, radius);\r\n    }\r\n}\r\nexports.Arc = Arc;\r\nexports.Arcs = {\r\n    /**\r\n     * 创造圆形信息包\r\n     * @param body\r\n     */\r\n    create(body) {\r\n        return new Arc(body, body.position.col(), body.radius);\r\n    },\r\n    /**\r\n     * 获取两个圆的圆心间的距离\r\n     * @param circleA\r\n     * @param circleB\r\n     */\r\n    distance(circleA, circleB) {\r\n        return circleA.centroid.sub(circleB.centroid).len();\r\n    },\r\n    /**\r\n     * 获取圆形和顶点集间的轴\r\n     * @param vertices 顶点信息\r\n     */\r\n    getAxes(circle, poly) {\r\n        let closestVertex = vertices_1.Vertices.getClosestVertex(circle.centroid, poly.vertexList);\r\n        return closestVertex.sub(circle.centroid).nol();\r\n    },\r\n    getBound(centroid, radius) {\r\n        let min = new vector_1.Vector(centroid.x - radius, centroid.y - radius), max = new vector_1.Vector(centroid.x + radius, centroid.y + radius);\r\n        return new bound_1.Bound(min, max);\r\n    },\r\n    /**\r\n     * 获取圆形在给定轴上的投影\r\n     * @param axis\r\n     */\r\n    Projection(circle, axis) {\r\n        let len = circle.centroid.pro(axis);\r\n        return {\r\n            min: len - circle.radius,\r\n            max: len + circle.radius\r\n        };\r\n    },\r\n    /**\r\n     * 查看圆形是否包含某个点\r\n     * @param circle\r\n     * @param point\r\n     */\r\n    isContains(circle, point) {\r\n        return circle.radius * circle.radius - circle.centroid.sub(point).len_s() > 0;\r\n    },\r\n    /**\r\n     * 位移圆形\r\n     * @param arc\r\n     * @param distance 位移向量\r\n     */\r\n    translate(arc, distance) {\r\n        arc.centroid.x += distance.x;\r\n        arc.centroid.y += distance.y;\r\n        // 位移包围盒\r\n        arc.bound.translate(distance);\r\n    }\r\n};\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29tbW9uL2FyY3MudHM/MjcyZCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx3Q0FBd0M7QUFFeEMsMENBQTRDO0FBQzVDLHVDQUEyQztBQUkzQyxVQUFVO0FBQ1YsTUFBYSxHQUFHO0lBT1osWUFBWSxJQUFZLEVBQUUsUUFBZ0IsRUFBRSxNQUFjO1FBQ3RELElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQztRQUNsQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsS0FBSyxHQUFHLFlBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ2pELENBQUM7Q0FDSjtBQWRELGtCQWNDO0FBS1ksWUFBSSxHQUFHO0lBQ2hCOzs7T0FHRztJQUNILE1BQU0sQ0FBQyxJQUFZO1FBQ2YsT0FBTyxJQUFJLEdBQUcsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxHQUFHLEVBQUUsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxRQUFRLENBQUMsT0FBWSxFQUFFLE9BQVk7UUFDL0IsT0FBTyxPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDeEQsQ0FBQztJQUVEOzs7T0FHRztJQUNILE9BQU8sQ0FBQyxNQUFXLEVBQUUsSUFBVTtRQUMzQixJQUFJLGFBQWEsR0FBRyxtQkFBUSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ2hGLE9BQU8sYUFBYSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDcEQsQ0FBQztJQUVELFFBQVEsQ0FBQyxRQUFnQixFQUFFLE1BQWM7UUFDckMsSUFBSSxHQUFHLEdBQUcsSUFBSSxlQUFNLENBQUMsUUFBUSxDQUFDLENBQUMsR0FBRyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsRUFDMUQsR0FBRyxHQUFHLElBQUksZUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsTUFBTSxFQUFFLFFBQVEsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLENBQUM7UUFFL0QsT0FBTyxJQUFJLGFBQUssQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVEOzs7T0FHRztJQUNILFVBQVUsQ0FBQyxNQUFXLEVBQUUsSUFBWTtRQUNoQyxJQUFJLEdBQUcsR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVwQyxPQUFPO1lBQ0gsR0FBRyxFQUFFLEdBQUcsR0FBRyxNQUFNLENBQUMsTUFBTTtZQUN4QixHQUFHLEVBQUUsR0FBRyxHQUFHLE1BQU0sQ0FBQyxNQUFNO1NBQzNCLENBQUM7SUFDTixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILFVBQVUsQ0FBQyxNQUFXLEVBQUUsS0FBYTtRQUNqQyxPQUFPLE1BQU0sQ0FBQyxNQUFNLEdBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDaEYsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxTQUFTLENBQUMsR0FBUSxFQUFFLFFBQWdCO1FBQ2hDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQyxJQUFJLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDN0IsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLElBQUksUUFBUSxDQUFDLENBQUMsQ0FBQztRQUU3QixRQUFRO1FBQ1IsR0FBRyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDbEMsQ0FBQztDQUNKLENBQUMiLCJmaWxlIjoiNC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZlY3RvciB9IGZyb20gXCIuLi9tYXRoL3ZlY3RvclwiO1xyXG5pbXBvcnQgeyBDaXJjbGUgfSBmcm9tIFwiLi4vYm9keS9jaXJjbGVcIjtcclxuaW1wb3J0IHsgUG9seSwgVmVydGljZXMgfSBmcm9tIFwiLi92ZXJ0aWNlc1wiO1xyXG5pbXBvcnQgeyBCb3VuZCB9IGZyb20gXCIuLi9jb2xsaXNpb24vYm91bmRcIjtcclxuXHJcblxyXG5cclxuLy8g5LiA5Liq5ZyG5b2i5L+h5oGv5YyFXHJcbmV4cG9ydCBjbGFzcyBBcmMge1xyXG4gICAgaWQ6IG51bWJlcjtcclxuICAgIGNlbnRyb2lkOiBWZWN0b3I7XHJcbiAgICByYWRpdXM6IG51bWJlcjtcclxuICAgIGJvZHk6IENpcmNsZTtcclxuICAgIGJvdW5kOiBCb3VuZFxyXG5cclxuICAgIGNvbnN0cnVjdG9yKGJvZHk6IENpcmNsZSwgY2VudHJvaWQ6IFZlY3RvciwgcmFkaXVzOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLmlkID0gYm9keS5pZDtcclxuICAgICAgICB0aGlzLmJvZHkgPSBib2R5O1xyXG4gICAgICAgIHRoaXMuY2VudHJvaWQgPSBjZW50cm9pZDtcclxuICAgICAgICB0aGlzLnJhZGl1cyA9IHJhZGl1cztcclxuICAgICAgICB0aGlzLmJvdW5kID0gQXJjcy5nZXRCb3VuZChjZW50cm9pZCwgcmFkaXVzKTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IEFyY3MgPSB7XHJcbiAgICAvKipcclxuICAgICAqIOWIm+mAoOWchuW9ouS/oeaBr+WMhVxyXG4gICAgICogQHBhcmFtIGJvZHkgXHJcbiAgICAgKi9cclxuICAgIGNyZWF0ZShib2R5OiBDaXJjbGUpOiBBcmMge1xyXG4gICAgICAgIHJldHVybiBuZXcgQXJjKGJvZHksIGJvZHkucG9zaXRpb24uY29sKCksIGJvZHkucmFkaXVzKTtcclxuICAgIH0sXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflj5bkuKTkuKrlnIbnmoTlnIblv4Ppl7TnmoTot53nprtcclxuICAgICAqIEBwYXJhbSBjaXJjbGVBIFxyXG4gICAgICogQHBhcmFtIGNpcmNsZUIgXHJcbiAgICAgKi9cclxuICAgIGRpc3RhbmNlKGNpcmNsZUE6IEFyYywgY2lyY2xlQjogQXJjKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gY2lyY2xlQS5jZW50cm9pZC5zdWIoY2lyY2xlQi5jZW50cm9pZCkubGVuKCk7XHJcbiAgICB9LFxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6I635Y+W5ZyG5b2i5ZKM6aG254K56ZuG6Ze055qE6L20XHJcbiAgICAgKiBAcGFyYW0gdmVydGljZXMg6aG254K55L+h5oGvXHJcbiAgICAgKi9cclxuICAgIGdldEF4ZXMoY2lyY2xlOiBBcmMsIHBvbHk6IFBvbHkpOiBWZWN0b3Ige1xyXG4gICAgICAgIGxldCBjbG9zZXN0VmVydGV4ID0gVmVydGljZXMuZ2V0Q2xvc2VzdFZlcnRleChjaXJjbGUuY2VudHJvaWQsIHBvbHkudmVydGV4TGlzdCk7XHJcbiAgICAgICAgcmV0dXJuIGNsb3Nlc3RWZXJ0ZXguc3ViKGNpcmNsZS5jZW50cm9pZCkubm9sKCk7XHJcbiAgICB9LFxyXG5cclxuICAgIGdldEJvdW5kKGNlbnRyb2lkOiBWZWN0b3IsIHJhZGl1czogbnVtYmVyKTogQm91bmQge1xyXG4gICAgICAgIGxldCBtaW4gPSBuZXcgVmVjdG9yKGNlbnRyb2lkLnggLSByYWRpdXMsIGNlbnRyb2lkLnkgLSByYWRpdXMpLFxyXG4gICAgICAgICAgICBtYXggPSBuZXcgVmVjdG9yKGNlbnRyb2lkLnggKyByYWRpdXMsIGNlbnRyb2lkLnkgKyByYWRpdXMpO1xyXG5cclxuICAgICAgICByZXR1cm4gbmV3IEJvdW5kKG1pbiwgbWF4KTtcclxuICAgIH0sXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflj5blnIblvaLlnKjnu5nlrprovbTkuIrnmoTmipXlvbFcclxuICAgICAqIEBwYXJhbSBheGlzIFxyXG4gICAgICovXHJcbiAgICBQcm9qZWN0aW9uKGNpcmNsZTogQXJjLCBheGlzOiBWZWN0b3IpOiB7bWluOiBudW1iZXIsIG1heDogbnVtYmVyfSB7XHJcbiAgICAgICAgbGV0IGxlbiA9IGNpcmNsZS5jZW50cm9pZC5wcm8oYXhpcyk7XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG1pbjogbGVuIC0gY2lyY2xlLnJhZGl1cyxcclxuICAgICAgICAgICAgbWF4OiBsZW4gKyBjaXJjbGUucmFkaXVzXHJcbiAgICAgICAgfTtcclxuICAgIH0sXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmn6XnnIvlnIblvaLmmK/lkKbljIXlkKvmn5DkuKrngrlcclxuICAgICAqIEBwYXJhbSBjaXJjbGUgXHJcbiAgICAgKiBAcGFyYW0gcG9pbnQgXHJcbiAgICAgKi9cclxuICAgIGlzQ29udGFpbnMoY2lyY2xlOiBBcmMsIHBvaW50OiBWZWN0b3IpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gY2lyY2xlLnJhZGl1cypjaXJjbGUucmFkaXVzIC0gY2lyY2xlLmNlbnRyb2lkLnN1Yihwb2ludCkubGVuX3MoKSA+IDA7IFxyXG4gICAgfSxcclxuXHJcbiAgICAvKipcclxuICAgICAqIOS9jeenu+WchuW9olxyXG4gICAgICogQHBhcmFtIGFyY1xyXG4gICAgICogQHBhcmFtIGRpc3RhbmNlIOS9jeenu+WQkemHj1xyXG4gICAgICovXHJcbiAgICB0cmFuc2xhdGUoYXJjOiBBcmMsIGRpc3RhbmNlOiBWZWN0b3IpIHtcclxuICAgICAgICBhcmMuY2VudHJvaWQueCArPSBkaXN0YW5jZS54O1xyXG4gICAgICAgIGFyYy5jZW50cm9pZC55ICs9IGRpc3RhbmNlLnk7XHJcblxyXG4gICAgICAgIC8vIOS9jeenu+WMheWbtOebklxyXG4gICAgICAgIGFyYy5ib3VuZC50cmFuc2xhdGUoZGlzdGFuY2UpO1xyXG4gICAgfVxyXG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///4\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.ContactConstraint = exports.Contact = void 0;\r\nconst vector_1 = __webpack_require__(1);\r\nconst util_1 = __webpack_require__(0);\r\n// 接触约束\r\nclass Contact {\r\n    constructor(vertex, depth) {\r\n        this.position = vertex;\r\n        this.shareNormal = 0;\r\n        this.shareTangent = 0;\r\n        this.inverseMass = 0;\r\n        this.normalImpulse = 0;\r\n        this.tangentImpulse = 0;\r\n        this.depth = depth;\r\n        this.bias = 0;\r\n    }\r\n}\r\nexports.Contact = Contact;\r\n/**\r\n * 碰撞求解器\r\n */\r\nclass ContactConstraint {\r\n    constructor() {\r\n        this.iterations = 20;\r\n        this.slop = 0.02;\r\n        this.biasFactor = 0.2;\r\n    }\r\n    /**\r\n     * 创建一个接触约束\r\n     * @param vertex\r\n     * @param depth\r\n     */\r\n    create(vertex, depth) {\r\n        return new Contact(vertex, depth);\r\n    }\r\n    /**\r\n     * 求解接触约束\r\n     * @param manifolds\r\n     * @param dt\r\n     */\r\n    solve(manifolds, dt) {\r\n        this.preSolveVelocity(manifolds, dt);\r\n        for (let i = 0; i < this.iterations; i++) {\r\n            this.solveVelocity(manifolds, dt);\r\n        }\r\n    }\r\n    /**\r\n     * 预处理\r\n     * @param manifolds 碰撞流形\r\n     * @param dt 步长\r\n     */\r\n    preSolveVelocity(manifolds, dt) {\r\n        let manifold, collision, contact, bodyA, bodyB, normal, tangent, i, j;\r\n        for (i = 0; i < manifolds.length; ++i) {\r\n            manifold = manifolds[i];\r\n            if (!manifold.isActive)\r\n                continue;\r\n            collision = manifold.collision;\r\n            normal = collision.normal;\r\n            tangent = collision.tangent;\r\n            bodyA = collision.bodyA;\r\n            bodyB = collision.bodyB;\r\n            for (j = 0; j < collision.contacts.length; j++) {\r\n                contact = collision.contacts[j];\r\n                // 接触点到刚体A质心的距离\r\n                contact.offsetA = contact.position.sub(bodyA.position),\r\n                    // 接触点到刚体B质心的距离\r\n                    contact.offsetB = contact.position.sub(bodyB.position);\r\n                let invMassNormal = manifold.inverseMass, invMassTangent = manifold.inverseMass, r1 = contact.offsetA, r2 = contact.offsetB, rn1 = contact.offsetA.dot(normal), rn2 = contact.offsetB.dot(normal), rt1 = contact.offsetA.dot(tangent), rt2 = contact.offsetB.dot(tangent);\r\n                // 计算 J(M^-1)(J^T).\r\n                invMassNormal += bodyA.invInertia * (r1.dot(r1) - rn1 * rn1);\r\n                invMassNormal += bodyB.invInertia * (r2.dot(r2) - rn2 * rn2);\r\n                invMassTangent += bodyA.invInertia * (r1.dot(r1) - rt1 * rt1);\r\n                invMassTangent += bodyB.invInertia * (r2.dot(r2) - rt2 * rt2);\r\n                // 保存 J(M^-1)(J^T)得倒数\r\n                contact.shareNormal = 1 / invMassNormal;\r\n                contact.shareTangent = 1 / invMassTangent;\r\n                contact.bias = this.biasFactor * (1 / dt) * Math.max(0, contact.depth - this.slop);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 正式处理\r\n     * 使用sequential impulse进行快速收敛\r\n     * 参考：https://kevinyu.net/2018/01/17/understanding-constraint-solver-in-physics-engine/\r\n     * @param manifolds\r\n     * @private dt\r\n     */\r\n    solveVelocity(manifolds, dt) {\r\n        let manifold, collision, contact, bodyA, bodyB, normal, tangent, normalImpulse, tangentImpulse, maxFriction, relativeNormal, relativeTangent, impulse = vector_1._tempVector3, i, j;\r\n        for (i = 0; i < manifolds.length; i++) {\r\n            manifold = manifolds[i];\r\n            if (!manifold.isActive)\r\n                continue;\r\n            collision = manifold.collision;\r\n            normal = collision.normal;\r\n            tangent = collision.tangent;\r\n            bodyA = collision.bodyA;\r\n            bodyB = collision.bodyB;\r\n            for (j = 0; j < collision.contacts.length; j++) {\r\n                contact = collision.contacts[j];\r\n                let velocityPointA, // 刚体A质心相对碰撞点的速度\r\n                velocityPointB, // 刚体B质心相对碰撞点的速度\r\n                relativeVelocity; // 相对速度\r\n                vector_1._tempVector1.x = 0;\r\n                vector_1._tempVector1.y = 0;\r\n                vector_1._tempVector2.x = 0;\r\n                vector_1._tempVector2.y = 0;\r\n                contact.offsetA.croNum(bodyA.angularVelocity, vector_1._tempVector1);\r\n                contact.offsetB.croNum(bodyB.angularVelocity, vector_1._tempVector2);\r\n                velocityPointA = bodyA.velocity.add(vector_1._tempVector1, vector_1._tempVector1);\r\n                velocityPointB = bodyB.velocity.add(vector_1._tempVector2, vector_1._tempVector2);\r\n                relativeVelocity = velocityPointB.sub(velocityPointA, vector_1._tempVector1);\r\n                // 计算法向相对速度\r\n                relativeNormal = normal.dot(relativeVelocity);\r\n                // 计算法向冲量\r\n                normalImpulse = manifold.restitution * (relativeNormal + contact.bias) * contact.shareNormal;\r\n                // sequential impulse方法，收敛法向冲量\r\n                let oldNormalImpulse = contact.normalImpulse;\r\n                contact.normalImpulse = Math.max(contact.normalImpulse + normalImpulse, 0);\r\n                normalImpulse = contact.normalImpulse - oldNormalImpulse;\r\n                // 应用冲量\r\n                impulse.x = normal.x * normalImpulse;\r\n                impulse.y = normal.y * normalImpulse;\r\n                if (!bodyA.sleeping && !bodyA.fixed) {\r\n                    bodyA.applyImpulse(impulse, contact.offsetA, dt);\r\n                }\r\n                if (!bodyB.sleeping && !bodyB.fixed) {\r\n                    bodyB.applyImpulse(impulse.inv(impulse), contact.offsetB, dt);\r\n                }\r\n                // --------------------------------------------------------------------------------------------\r\n                contact.offsetA.croNum(bodyA.angularVelocity, vector_1._tempVector1);\r\n                contact.offsetB.croNum(bodyB.angularVelocity, vector_1._tempVector2);\r\n                velocityPointA = bodyA.velocity.add(vector_1._tempVector1, vector_1._tempVector1);\r\n                velocityPointB = bodyB.velocity.add(vector_1._tempVector2, vector_1._tempVector2);\r\n                relativeVelocity = velocityPointB.sub(velocityPointA, vector_1._tempVector1);\r\n                // 计算切向相对速度\r\n                relativeTangent = tangent.dot(relativeVelocity);\r\n                // 计算切向冲量\r\n                tangentImpulse = relativeTangent * contact.shareTangent;\r\n                // 计算最大摩擦力\r\n                maxFriction = manifold.friction * contact.normalImpulse;\r\n                // sequential impulse方法，收敛切向冲量\r\n                let oldTangentImpulse = contact.tangentImpulse;\r\n                contact.tangentImpulse = util_1.Util.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\r\n                tangentImpulse = contact.tangentImpulse - oldTangentImpulse;\r\n                // 应用冲量\r\n                impulse.x = tangent.x * tangentImpulse;\r\n                impulse.y = tangent.y * tangentImpulse;\r\n                if (!bodyA.sleeping && !bodyA.fixed) {\r\n                    bodyA.applyImpulse(impulse, contact.offsetA, dt);\r\n                }\r\n                if (!bodyB.sleeping && !bodyB.fixed) {\r\n                    bodyB.applyImpulse(impulse.inv(impulse), contact.offsetB, dt);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.ContactConstraint = ContactConstraint;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///5\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Bound = void 0;\r\nconst vector_1 = __webpack_require__(1);\r\nconst vertices_1 = __webpack_require__(2);\r\n// AABB包围盒（速度扩展的）\r\nclass Bound {\r\n    constructor(min, max) {\r\n        this.set(min, max);\r\n    }\r\n    /**\r\n     * 设置包围盒范围\r\n     *\r\n     *  min ----------|\r\n     *   |            |\r\n     *   |            |\r\n     *   | --------- max\r\n     *\r\n     * @param min 最小值\r\n     * @param max 最大值\r\n     */\r\n    set(min, max) {\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n    /**\r\n     * 位移包围盒\r\n     * @param distance\r\n     */\r\n    translate(distance) {\r\n        this.min.x += distance.x;\r\n        this.min.y += distance.y;\r\n        this.max.x += distance.x;\r\n        this.max.y += distance.y;\r\n    }\r\n    /**\r\n     * 更新包围盒（通常发生在刚体发生旋转，min和max都要重新计算）\r\n     * @param vertexList\r\n     */\r\n    update(vertexList) {\r\n        let range = vertices_1.Vertices.getRange(vertexList);\r\n        this.min.x = range.min.x;\r\n        this.min.y = range.min.y;\r\n        this.max.x = range.max.x;\r\n        this.max.y = range.max.y;\r\n    }\r\n    /**\r\n     * 两包围盒求交集\r\n     * @param b\r\n     */\r\n    intersect(b) {\r\n        let x, y, maxX, maxY, overlapsX, overlapsY;\r\n        if (this.min.x < b.max.x && this.max.x > b.min.x) {\r\n            if (this.min.x < b.min.x) {\r\n                x = b.min.x;\r\n            }\r\n            else {\r\n                x = this.min.x;\r\n            }\r\n            if (this.max.x < b.max.x) {\r\n                maxX = this.max.x;\r\n            }\r\n            else {\r\n                maxX = b.max.x;\r\n            }\r\n            overlapsX = maxX - x;\r\n        }\r\n        if (this.min.y < b.max.y && this.max.y > b.min.y) {\r\n            if (this.min.y < b.min.y) {\r\n                y = b.min.y;\r\n            }\r\n            else {\r\n                y = this.min.y;\r\n            }\r\n            if (this.max.y < b.max.y) {\r\n                maxY = this.max.y;\r\n            }\r\n            else {\r\n                maxY = b.max.y;\r\n            }\r\n            overlapsY = maxY - y;\r\n        }\r\n        if (!overlapsX || !overlapsY)\r\n            return null;\r\n        vector_1._tempVector1.x = x;\r\n        vector_1._tempVector1.y = y;\r\n        vector_1._tempVector2.x = x + overlapsX;\r\n        vector_1._tempVector2.y = y + overlapsY;\r\n        return new Bound(vector_1._tempVector1, vector_1._tempVector2);\r\n    }\r\n    /**\r\n     * 判断与另一个包围盒是否相交\r\n     * @param bound\r\n     */\r\n    isIntersect(bound) {\r\n        return (this.min.x < bound.max.x && this.max.x > bound.min.x) && (this.min.y < bound.max.y && bound.min.y < this.max.y);\r\n    }\r\n    /**\r\n     * 查看点是否在包围盒中\r\n     * @param point\r\n     */\r\n    isContains(point) {\r\n        return point.x > this.min.x && point.x < this.max.x && point.y > this.min.y && point.y < this.max.y;\r\n    }\r\n}\r\nexports.Bound = Bound;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///6\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Manifold = exports.Collision = void 0;\r\nconst vector_1 = __webpack_require__(1);\r\nconst util_1 = __webpack_require__(0);\r\n/**\r\n * 一个碰撞结构，包含了碰撞的所有信息\r\n */\r\nclass Collision {\r\n    constructor() {\r\n        // 碰撞法线\r\n        this.normal = new vector_1.Vector();\r\n        // 碰撞切线\r\n        this.tangent = new vector_1.Vector();\r\n    }\r\n}\r\nexports.Collision = Collision;\r\n;\r\n/**\r\n * 碰撞流形\r\n * 主要用于记录相互碰撞的刚体和进行碰撞缓存\r\n */\r\nclass Manifold {\r\n    constructor(collision, timeStamp) {\r\n        this.bodyA = collision.bodyA;\r\n        this.bodyB = collision.bodyB;\r\n        this.partA = collision.partA;\r\n        this.partB = collision.partB;\r\n        this.id = util_1.Util.compositeId(this.partA.id, this.partB.id);\r\n        this.collision = collision;\r\n        this.isActive = true;\r\n        this.confirmedActive = true;\r\n        this.timeCreated = timeStamp;\r\n        this.timeUpdated = timeStamp;\r\n        this.friction = 0;\r\n        this.restitution = 0;\r\n        this.inverseMass = 0;\r\n        this.update(collision, timeStamp);\r\n    }\r\n    /**\r\n     * 更新流形\r\n     * @param collision 碰撞信息\r\n     * @param timeStamp 时间戳\r\n     */\r\n    update(collision, timeStamp) {\r\n        this.collision = collision;\r\n        // 如果该碰撞对真的发生了碰撞\r\n        if (collision.collide) {\r\n            let bodyA, bodyB;\r\n            bodyA = collision.bodyA;\r\n            bodyB = collision.bodyB;\r\n            this.friction = Math.sqrt(bodyA.friction * bodyB.friction);\r\n            this.restitution = (bodyA.restitution + bodyB.restitution) / 2;\r\n            this.inverseMass = bodyA.invMass + bodyB.invMass;\r\n            this.toggleActive(true, timeStamp);\r\n        }\r\n        // 否则\r\n        else {\r\n            this.isActive && this.toggleActive(false, timeStamp);\r\n        }\r\n    }\r\n    /**\r\n     * 更改流形激活状态\r\n     * @param active 激活状态\r\n     * @param timeStamp 时间戳\r\n     */\r\n    toggleActive(active, timeStamp) {\r\n        this.isActive = active;\r\n        if (active) {\r\n            this.timeUpdated = timeStamp;\r\n        }\r\n    }\r\n}\r\nexports.Manifold = Manifold;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29sbGlzaW9uL21hbmlmb2xkLnRzP2JiZWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0Esd0NBQXdDO0FBQ3hDLHNDQUFzQztBQWF0Qzs7R0FFRztBQUVILE1BQWEsU0FBUztJQUF0QjtRQVNJLE9BQU87UUFDUCxXQUFNLEdBQVcsSUFBSSxlQUFNLEVBQUUsQ0FBQztRQUM5QixPQUFPO1FBQ1AsWUFBTyxHQUFXLElBQUksZUFBTSxFQUFFLENBQUM7SUFLbkMsQ0FBQztDQUFBO0FBakJELDhCQWlCQztBQUFBLENBQUM7QUFHRjs7O0dBR0c7QUFDSCxNQUFhLFFBQVE7SUEyQmpCLFlBQVksU0FBb0IsRUFBRSxTQUFpQjtRQUMvQyxJQUFJLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUM7UUFDN0IsSUFBSSxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUMsS0FBSyxDQUFDO1FBQzdCLElBQUksQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQztRQUM3QixJQUFJLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUM7UUFDN0IsSUFBSSxDQUFDLEVBQUUsR0FBRyxXQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDekQsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDckIsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUM7UUFDNUIsSUFBSSxDQUFDLFdBQVcsR0FBRyxTQUFTLENBQUM7UUFDN0IsSUFBSSxDQUFDLFdBQVcsR0FBRyxTQUFTLENBQUM7UUFDN0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7UUFDckIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7UUFFckIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxNQUFNLENBQUMsU0FBb0IsRUFBRSxTQUFpQjtRQUMxQyxJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUUzQixnQkFBZ0I7UUFDaEIsSUFBRyxTQUFTLENBQUMsT0FBTyxFQUFFO1lBQ2xCLElBQUksS0FBVyxFQUFFLEtBQVcsQ0FBQztZQUU3QixLQUFLLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQztZQUN4QixLQUFLLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQztZQUV4QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDM0QsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLEtBQUssQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMvRCxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQztZQUVqRCxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztTQUN0QztRQUNELEtBQUs7YUFDQTtZQUNELElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLENBQUM7U0FDeEQ7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILFlBQVksQ0FBQyxNQUFlLEVBQUUsU0FBaUI7UUFDM0MsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUM7UUFFdkIsSUFBRyxNQUFNLEVBQUU7WUFDUCxJQUFJLENBQUMsV0FBVyxHQUFHLFNBQVMsQ0FBQztTQUNoQztJQUNMLENBQUM7Q0FDSjtBQXBGRCw0QkFvRkMiLCJmaWxlIjoiNy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvZHkgfSBmcm9tIFwiLi4vYm9keS9ib2R5XCI7XHJcbmltcG9ydCB7IFZlY3RvciB9IGZyb20gXCIuLi9tYXRoL3ZlY3RvclwiO1xyXG5pbXBvcnQgeyBVdGlsIH0gZnJvbSBcIi4uL2NvbW1vbi91dGlsXCI7XHJcbmltcG9ydCB7IFBvbHkgfSBmcm9tIFwiLi4vY29tbW9uL3ZlcnRpY2VzXCI7XHJcbmltcG9ydCB7IEFyYyB9IGZyb20gXCIuLi9jb21tb24vYXJjc1wiO1xyXG5pbXBvcnQgeyBDb250YWN0IH0gZnJvbSBcIi4uL2NvbnN0cmFpbnQvY29udGFjdFwiO1xyXG5cclxuXHJcbi8qKlxyXG4gKiDnorDmkp7kv6Hmga/vvIznorDmkp7mtYHlvaLvvIzmjqXop6bngrlcclxuICovXHJcblxyXG5leHBvcnQgdHlwZSBHZW9tZXRyeSA9IFBvbHkgfCBBcmM7XHJcblxyXG5cclxuLyoqXHJcbiAqIOS4gOS4queisOaSnue7k+aehO+8jOWMheWQq+S6hueisOaSnueahOaJgOacieS/oeaBr1xyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBDb2xsaXNpb24ge1xyXG4gICAgLy8g56Kw5pKe5Yia5L2TQVxyXG4gICAgYm9keUE6IEJvZHk7XHJcbiAgICAvLyDnorDmkp7liJrkvZNCXHJcbiAgICBib2R5QjogQm9keTtcclxuICAgIC8vIOeisOaSnuWtkOWbvuW9okFcclxuICAgIHBhcnRBOiBHZW9tZXRyeTtcclxuICAgIC8vIOeisOaSnuWtkOWbvuW9okJcclxuICAgIHBhcnRCOiBHZW9tZXRyeTtcclxuICAgIC8vIOeisOaSnuazlee6v1xyXG4gICAgbm9ybWFsOiBWZWN0b3IgPSBuZXcgVmVjdG9yKCk7XHJcbiAgICAvLyDnorDmkp7liIfnur9cclxuICAgIHRhbmdlbnQ6IFZlY3RvciA9IG5ldyBWZWN0b3IoKTtcclxuICAgIC8vIOaOpeinpueCuVxyXG4gICAgY29udGFjdHM6IENvbnRhY3RbXTtcclxuICAgIC8vIOaYr+WQpuWPkeeUn+S6hueisOaSnlxyXG4gICAgY29sbGlkZTogYm9vbGVhbjtcclxufTtcclxuXHJcblxyXG4vKipcclxuICog56Kw5pKe5rWB5b2iXHJcbiAqIOS4u+imgeeUqOS6juiusOW9leebuOS6kueisOaSnueahOWImuS9k+WSjOi/m+ihjOeisOaSnue8k+WtmFxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIE1hbmlmb2xkIHtcclxuICAgIC8vIGlkXHJcbiAgICBpZDogc3RyaW5nO1xyXG5cclxuICAgIGJvZHlBOiBCb2R5O1xyXG4gICAgYm9keUI6IEJvZHk7XHJcbiAgICBwYXJ0QTogR2VvbWV0cnk7XHJcbiAgICBwYXJ0QjogR2VvbWV0cnk7XHJcbiAgICAvLyDnorDmkp7kv6Hmga9cclxuICAgIGNvbGxpc2lvbjogQ29sbGlzaW9uO1xyXG4gICAgLy8g5r+A5rS754q25oCBXHJcbiAgICAvLyDmv4DmtLvnirbmgIHnmoTmhI/mgJ3ljbPkuIrkuIDmrKHmm7TmlrDml7bmtYHlvaLmmK/lkKblj5HnlJ/norDmkp7vvIzoi6XmmK/vvIzliJnooajnpLror6XmtYHlvaLlnKjmv4DmtLvnirbmgIFcclxuICAgIGlzQWN0aXZlOiBib29sZWFuO1xyXG4gICAgLy8g56Gu6K6k5r+A5rS754q25oCBXHJcbiAgICAvLyDnoa7orqTmv4DmtLvnirbmgIHmhI/mgJ3ljbPmmK/lvZPliY3mm7TmlrDml7bmtYHlvaLmmK/lkKbmv4DmtLtcclxuICAgIGNvbmZpcm1lZEFjdGl2ZTogYm9vbGVhbjtcclxuICAgIC8vIOa1geW9ouWIm+W7uuaXtumXtFxyXG4gICAgdGltZUNyZWF0ZWQ6IG51bWJlcjtcclxuICAgIC8vIOa1geW9ouabtOaWsOaXtumXtFxyXG4gICAgdGltZVVwZGF0ZWQ6IG51bWJlcjtcclxuICAgIC8vIOaRqeaTpuWKm1xyXG4gICAgZnJpY3Rpb246IG51bWJlcjtcclxuICAgIC8vIOaBouWkjeezu+aVsFxyXG4gICAgcmVzdGl0dXRpb246IG51bWJlcjtcclxuICAgIC8vIOi0qOmHj+WSjOWAkuaVsFxyXG4gICAgaW52ZXJzZU1hc3M6IG51bWJlcjtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihjb2xsaXNpb246IENvbGxpc2lvbiwgdGltZVN0YW1wOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLmJvZHlBID0gY29sbGlzaW9uLmJvZHlBO1xyXG4gICAgICAgIHRoaXMuYm9keUIgPSBjb2xsaXNpb24uYm9keUI7XHJcbiAgICAgICAgdGhpcy5wYXJ0QSA9IGNvbGxpc2lvbi5wYXJ0QTtcclxuICAgICAgICB0aGlzLnBhcnRCID0gY29sbGlzaW9uLnBhcnRCO1xyXG4gICAgICAgIHRoaXMuaWQgPSBVdGlsLmNvbXBvc2l0ZUlkKHRoaXMucGFydEEuaWQsIHRoaXMucGFydEIuaWQpO1xyXG4gICAgICAgIHRoaXMuY29sbGlzaW9uID0gY29sbGlzaW9uO1xyXG4gICAgICAgIHRoaXMuaXNBY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuY29uZmlybWVkQWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnRpbWVDcmVhdGVkID0gdGltZVN0YW1wO1xyXG4gICAgICAgIHRoaXMudGltZVVwZGF0ZWQgPSB0aW1lU3RhbXA7XHJcbiAgICAgICAgdGhpcy5mcmljdGlvbiA9IDA7XHJcbiAgICAgICAgdGhpcy5yZXN0aXR1dGlvbiA9IDA7XHJcbiAgICAgICAgdGhpcy5pbnZlcnNlTWFzcyA9IDA7XHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlKGNvbGxpc2lvbiwgdGltZVN0YW1wKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOabtOaWsOa1geW9olxyXG4gICAgICogQHBhcmFtIGNvbGxpc2lvbiDnorDmkp7kv6Hmga9cclxuICAgICAqIEBwYXJhbSB0aW1lU3RhbXAg5pe26Ze05oizXHJcbiAgICAgKi9cclxuICAgIHVwZGF0ZShjb2xsaXNpb246IENvbGxpc2lvbiwgdGltZVN0YW1wOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLmNvbGxpc2lvbiA9IGNvbGxpc2lvbjtcclxuXHJcbiAgICAgICAgLy8g5aaC5p6c6K+l56Kw5pKe5a+555yf55qE5Y+R55Sf5LqG56Kw5pKeXHJcbiAgICAgICAgaWYoY29sbGlzaW9uLmNvbGxpZGUpIHtcclxuICAgICAgICAgICAgbGV0IGJvZHlBOiBCb2R5LCBib2R5QjogQm9keTtcclxuXHJcbiAgICAgICAgICAgIGJvZHlBID0gY29sbGlzaW9uLmJvZHlBO1xyXG4gICAgICAgICAgICBib2R5QiA9IGNvbGxpc2lvbi5ib2R5QjtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuZnJpY3Rpb24gPSBNYXRoLnNxcnQoYm9keUEuZnJpY3Rpb24gKiBib2R5Qi5mcmljdGlvbik7XHJcbiAgICAgICAgICAgIHRoaXMucmVzdGl0dXRpb24gPSAoYm9keUEucmVzdGl0dXRpb24gKyBib2R5Qi5yZXN0aXR1dGlvbikgLyAyO1xyXG4gICAgICAgICAgICB0aGlzLmludmVyc2VNYXNzID0gYm9keUEuaW52TWFzcyArIGJvZHlCLmludk1hc3M7XHJcblxyXG4gICAgICAgICAgICB0aGlzLnRvZ2dsZUFjdGl2ZSh0cnVlLCB0aW1lU3RhbXApO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyDlkKbliJlcclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5pc0FjdGl2ZSAmJiB0aGlzLnRvZ2dsZUFjdGl2ZShmYWxzZSwgdGltZVN0YW1wKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmm7TmlLnmtYHlvaLmv4DmtLvnirbmgIFcclxuICAgICAqIEBwYXJhbSBhY3RpdmUg5r+A5rS754q25oCBXHJcbiAgICAgKiBAcGFyYW0gdGltZVN0YW1wIOaXtumXtOaIs1xyXG4gICAgICovXHJcbiAgICB0b2dnbGVBY3RpdmUoYWN0aXZlOiBib29sZWFuLCB0aW1lU3RhbXA6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMuaXNBY3RpdmUgPSBhY3RpdmU7XHJcblxyXG4gICAgICAgIGlmKGFjdGl2ZSkge1xyXG4gICAgICAgICAgICB0aGlzLnRpbWVVcGRhdGVkID0gdGltZVN0YW1wO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///7\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\n/**\r\n * 刚体基类：所有刚体继承自Body\r\n */\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Body = exports.bodyType = void 0;\r\nconst vector_1 = __webpack_require__(1);\r\nconst util_1 = __webpack_require__(0);\r\nconst eventEmitter_1 = __webpack_require__(3);\r\n/**\r\n * 刚体类型\r\n * 圆形：0\r\n * 多边形：1\r\n * 胶囊体：2\r\n * 平面：3\r\n * 复合体：4\r\n */\r\nvar bodyType;\r\n(function (bodyType) {\r\n    bodyType[bodyType["circle"] = 0] = "circle";\r\n    bodyType[bodyType["polygon"] = 1] = "polygon";\r\n    bodyType[bodyType["capsule"] = 2] = "capsule";\r\n    bodyType[bodyType["composite"] = 3] = "composite";\r\n})(bodyType = exports.bodyType || (exports.bodyType = {}));\r\n;\r\nclass Body {\r\n    constructor(opt, type) {\r\n        this.id = util_1.Util.id();\r\n        this.type = type;\r\n        this.engine = null;\r\n        this.data = null;\r\n        this.origin = new vector_1.Vector(0, 0);\r\n        this.position = new vector_1.Vector(0, 0);\r\n        this.rotation = 0;\r\n        this.velocity = new vector_1.Vector(0, 0);\r\n        this.angularVelocity = 0;\r\n        this.motion = 0;\r\n        this.mass = 10;\r\n        this.area = 0;\r\n        this.density = 1;\r\n        this.inertia = 0;\r\n        this.invInertia = 0;\r\n        this.force = new vector_1.Vector(0, 0);\r\n        this.torque = 0;\r\n        this.friction = 0.4;\r\n        this.restitution = 0.9;\r\n        this.constraint = null;\r\n        this.fixed = false;\r\n        this.sleeping = false;\r\n        this.sleepCounter = 0;\r\n        this.mask = 1;\r\n        this.parts = [];\r\n        this.bound = null;\r\n        this.collisionNum = 0;\r\n        this.methods = {\r\n            filter: (maskA, maskB) => { return true; },\r\n            beforeAppend: (body) => { },\r\n            afterAppend: (body) => { },\r\n            beforeRemove: (body) => { },\r\n            afterRemove: (body) => { },\r\n            sleepStart: (body) => { },\r\n            sleepEnd: (body) => { }\r\n        };\r\n        util_1.Util.extend(this, opt);\r\n        if (this.fixed)\r\n            this.sleeping = true;\r\n        this.init(opt);\r\n        this.area = this.getArea();\r\n        this.density = this.getDensity();\r\n        this.invMass = this.getInvMass();\r\n        this.position = this.getCentroid();\r\n        this.inertia = this.getInertia();\r\n        this.invInertia = this.getInvInertia();\r\n        this.motion = 0;\r\n        // 设置渲染函数\r\n        this.setRender(() => { });\r\n    }\r\n    /**\r\n     * 初始化一些数据\r\n     */\r\n    init(opt) { }\r\n    /**\r\n     * 计算质量倒数\r\n     */\r\n    getInvMass() {\r\n        return (this.mass === 0 || this.fixed) ? 0 : 1 / this.mass;\r\n    }\r\n    /**\r\n     * 计算转动惯量倒数\r\n     */\r\n    getInvInertia() {\r\n        return (this.inertia === 0 || this.fixed) ? 0 : 1 / this.inertia;\r\n    }\r\n    /**\r\n     * 计算密度\r\n     */\r\n    getDensity() {\r\n        return this.mass / this.area;\r\n    }\r\n    /**\r\n     * 计算面积\r\n     * @override\r\n     */\r\n    getArea() {\r\n        return 1;\r\n    }\r\n    /**\r\n     * 计算质心\r\n     * @override\r\n     */\r\n    getCentroid() {\r\n        return null;\r\n    }\r\n    /**\r\n     * 计算转动惯量\r\n     * @override\r\n     */\r\n    getInertia() {\r\n        return 1;\r\n    }\r\n    /**\r\n     * 设置用户想要携带的信息数据\r\n     * @param data 数据\r\n     */\r\n    setData(data) {\r\n        if (data !== null && data !== undefined) {\r\n            this.data = data;\r\n        }\r\n    }\r\n    /**\r\n     * 设置刚体的引擎属性\r\n     * @param engine\r\n     */\r\n    setEngine(engine) {\r\n        this.engine = engine;\r\n    }\r\n    /**\r\n     * 设置渲染函数\r\n     * @param fn\r\n     */\r\n    setRender(fn) {\r\n        if (fn && typeof fn === \'function\')\r\n            this.render = fn;\r\n    }\r\n    /**\r\n     * 位移刚体\r\n     * @override\r\n     * @param distance 位移向量\r\n     */\r\n    translate(distance) { }\r\n    /**\r\n     * 旋转刚体\r\n     * @override\r\n     * @param angle 角度\r\n     * @param point 绕点\r\n     */\r\n    rotate(angle, point) { }\r\n    /**\r\n     * 发生碰撞\r\n     * @param body\r\n     */\r\n    collide(body) {\r\n        this.collisionNum++;\r\n        // 触发碰撞钩子\r\n        eventEmitter_1.Event.emit(this, \'collide\', this, body);\r\n    }\r\n    /**\r\n     * 发生分离\r\n     */\r\n    separate() {\r\n        this.collisionNum--;\r\n        // 触发分离钩子\r\n        if (this.collisionNum === 0) {\r\n            eventEmitter_1.Event.emit(this, \'isolate\', this);\r\n        }\r\n    }\r\n    /**\r\n     * 应用冲量\r\n     * @param impulse 冲量\r\n     * @param offset 作用点（本地坐标系）\r\n     * @param dt 步长\r\n     */\r\n    applyImpulse(impulse, offset, dt) {\r\n        this.velocity.x += impulse.x * this.invMass;\r\n        this.velocity.y += impulse.y * this.invMass;\r\n        this.angularVelocity += this.invInertia * offset.cro(impulse);\r\n    }\r\n    /**\r\n     * 应用力\r\n     * @param force 力\r\n     * @param offset 作用点（本地坐标系）\r\n     */\r\n    applyForce(force, offset) {\r\n        this.force.x += force.x;\r\n        this.force.y += force.y;\r\n        if (offset !== undefined) {\r\n            this.torque += offset.cro(this.force);\r\n        }\r\n    }\r\n    /**\r\n     * 积分受力\r\n     * @param dt\r\n     */\r\n    integrateForces(dt) {\r\n        if (this.fixed || this.sleeping) {\r\n            return;\r\n        }\r\n        this.velocity.x += dt * this.force.x * this.invMass;\r\n        this.velocity.y += dt * this.force.y * this.invMass;\r\n        this.angularVelocity += dt * this.torque * this.invInertia;\r\n    }\r\n    /**\r\n     * 积分速度\r\n     * - 使用隐式欧拉积分\r\n     * @param dt\r\n     */\r\n    integrateVelocities(dt) {\r\n        if (this.fixed || this.sleeping) {\r\n            return;\r\n        }\r\n        let dx = dt * this.velocity.x, dy = dt * this.velocity.y, dr = dt * this.angularVelocity;\r\n        this.position.x += dx;\r\n        this.position.y += dy;\r\n        this.rotation += dr;\r\n        vector_1._tempVector1.x = dx;\r\n        vector_1._tempVector1.y = dy;\r\n        //位移刚体\r\n        this.translate(vector_1._tempVector1);\r\n        // 旋转刚体\r\n        if (dr !== 0) {\r\n            this.rotate(dr, this.position);\r\n        }\r\n        // 更新标量速度\r\n        let speed = Math.hypot(dx, dy), angularSpeed = Math.abs(dr);\r\n        //更新动量\r\n        this.motion = speed * speed + angularSpeed * angularSpeed;\r\n        this.force.x = 0;\r\n        this.force.y = 0;\r\n        this.torque = 0;\r\n    }\r\n}\r\nexports.Body = Body;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///8\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\n/**\r\n * 多边形刚体\r\n */\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Polygon = void 0;\r\nconst body_1 = __webpack_require__(8);\r\nconst vertices_1 = __webpack_require__(2);\r\nclass Polygon extends body_1.Body {\r\n    constructor(opt) {\r\n        super(opt, body_1.bodyType.polygon);\r\n        // 用户一开始便设置了旋转的情况\r\n        if (this.rotation) {\r\n            this.rotate(this.rotation, this.position);\r\n        }\r\n    }\r\n    init(opt) {\r\n        // 将向量转化为顶点\r\n        if (opt.vertices) {\r\n            this.vertexList = opt.vertices.slice(0);\r\n        }\r\n        // 顶点数 > 3才构成多边形\r\n        if (this.vertexList && this.vertexList.length < 3)\r\n            return;\r\n        this.parts = this.getParts();\r\n    }\r\n    /**\r\n     * 获取世界坐标\r\n     */\r\n    getPoly() {\r\n        return vertices_1.Vertices.create(this, vertices_1.Vertices.transform2World(this.origin, this.vertexList));\r\n    }\r\n    getArea() {\r\n        return Math.abs(vertices_1.Vertices.getArea(this.vertexList));\r\n    }\r\n    getCentroid() {\r\n        return vertices_1.Vertices.getCentroid(this.vertexList);\r\n    }\r\n    getInertia() {\r\n        return vertices_1.Vertices.getInertia(this.vertexList, this.mass, this.position);\r\n    }\r\n    translate(distance) {\r\n        // 位移图形原点\r\n        this.origin.x += distance.x;\r\n        this.origin.y += distance.y;\r\n        // 位移多边形顶点\r\n        vertices_1.Vertices.translate(this.poly, distance);\r\n        // 若多边形是凹多边形, 位移子多边形包围盒\r\n        if (this.isConcave) {\r\n            for (let i = 0; i < this.parts.length; i++) {\r\n                let part = this.parts[i];\r\n                part.centroid.x += distance.x;\r\n                part.centroid.y += distance.y;\r\n                part.bound.translate(distance);\r\n            }\r\n        }\r\n    }\r\n    rotate(radian, point) {\r\n        // 旋转顶点\r\n        vertices_1.Vertices.rotate(this.poly, radian, point);\r\n        // 若多边形是凹多边形, 更新子多边形包围盒\r\n        if (this.isConcave) {\r\n            for (let i = 0; i < this.parts.length; i++) {\r\n                let part = this.parts[i];\r\n                part.centroid.rot(radian, point, part.centroid);\r\n                part.bound.update(part.vertexList);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 分割多边形\r\n     * 若是凹多边形，则先分割为多个凸多边形，然后凸多边形再分割为小三角形\r\n     * 若是凸多边形，则直接分割为小三角形\r\n     */\r\n    getParts() {\r\n        let parts = [], poly = this.getPoly();\r\n        // 若是凹多边形\r\n        if (vertices_1.Vertices.isConcave(poly.vertexList)) {\r\n            this.isConcave = true;\r\n            parts = vertices_1.Vertices.divide(poly);\r\n        }\r\n        // 若是凸多边形\r\n        else {\r\n            parts = [poly];\r\n        }\r\n        this.bound = poly.bound;\r\n        this.poly = poly;\r\n        return parts;\r\n    }\r\n}\r\nexports.Polygon = Polygon;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///9\n')},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Torque = void 0;\r\nconst interface_1 = __webpack_require__(11);\r\nconst bodiesFactory_1 = __webpack_require__(22);\r\nconst vector_1 = __webpack_require__(1);\r\ninterface_1.TorqueWorld['body'] = new bodiesFactory_1.BodiesFactory();\r\ninterface_1.TorqueWorld['math'] = {\r\n    vector: (x, y) => new vector_1.Vector(x, y)\r\n};\r\nexports.Torque = interface_1.TorqueWorld;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdG9ycXVlLnRzP2JhZmYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNENBQStDO0FBQy9DLGdEQUFxRDtBQUNyRCx3Q0FBdUM7QUFFdkMsdUJBQVcsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLDZCQUFhLEVBQUUsQ0FBQztBQUMxQyx1QkFBVyxDQUFDLE1BQU0sQ0FBQyxHQUFHO0lBQ2xCLE1BQU0sRUFBRSxDQUFDLENBQVMsRUFBRSxDQUFTLEVBQUUsRUFBRSxDQUFDLElBQUksZUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7Q0FDckQsQ0FBQztBQUVXLGNBQU0sR0FBRyx1QkFBVyxDQUFDIiwiZmlsZSI6IjEwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9ycXVlV29ybGQgfSBmcm9tIFwiLi9jb3JlL2ludGVyZmFjZVwiO1xyXG5pbXBvcnQgeyBCb2RpZXNGYWN0b3J5IH0gZnJvbSBcIi4vY29yZS9ib2RpZXNGYWN0b3J5XCI7XHJcbmltcG9ydCB7IFZlY3RvciB9IGZyb20gXCIuL21hdGgvdmVjdG9yXCI7XHJcblxyXG5Ub3JxdWVXb3JsZFsnYm9keSddID0gbmV3IEJvZGllc0ZhY3RvcnkoKTtcclxuVG9ycXVlV29ybGRbJ21hdGgnXSA9IHtcclxuICAgIHZlY3RvcjogKHg6IG51bWJlciwgeTogbnVtYmVyKSA9PiBuZXcgVmVjdG9yKHgsIHkpXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgVG9ycXVlID0gVG9ycXVlV29ybGQ7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///10\n")},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TorqueWorld = void 0;\r\nconst util_1 = __webpack_require__(0);\r\nconst engine_1 = __webpack_require__(12);\r\nconst eventEmitter_1 = __webpack_require__(3);\r\n// Torque主类\r\nclass TorqueWorld {\r\n    constructor(width, height, opt) {\r\n        this.engine = new engine_1.Engine(width, height, opt);\r\n    }\r\n    /**\r\n     * 增加刚体\r\n     * @param body\r\n     */\r\n    append(body) {\r\n        if (Array.isArray(body)) {\r\n            body.map(b => this.append(b));\r\n        }\r\n        else {\r\n            eventEmitter_1.Event.emit(body, 'beforeAppend', body);\r\n            body.setEngine(this.engine);\r\n            this.engine.bodies.push(body);\r\n            eventEmitter_1.Event.emit(body, 'afterAppend', body);\r\n        }\r\n    }\r\n    /**\r\n     * 移除刚体\r\n     * @param body\r\n     */\r\n    remove(body) {\r\n        eventEmitter_1.Event.emit(body, 'beforeRemove', body);\r\n        util_1.Util.remove(this.engine.bodies, body);\r\n        eventEmitter_1.Event.emit(body, 'afterRemove', body);\r\n    }\r\n    /**\r\n     * 清空引擎\r\n     */\r\n    clear() {\r\n        this.engine.bodies.map(body => this.remove(body));\r\n        this.engine.manifoldTable.clear();\r\n    }\r\n    /**\r\n     * 克隆刚体\r\n     * @param body\r\n     */\r\n    clone(body) {\r\n        return null;\r\n    }\r\n    /**\r\n     * 设置引擎参数\r\n     * @param opt\r\n     */\r\n    setEngineOption(opt) {\r\n        this.engine.setOption(opt);\r\n    }\r\n    /**\r\n     * 添加时间步函数\r\n     * @param fn\r\n     */\r\n    step(fn) {\r\n        this.engine.timeStepper.addStep(fn);\r\n    }\r\n    /**\r\n     * 开始运行\r\n     * @param frameNumLimit 限制运行多少帧停下\r\n     */\r\n    start(frameNumLimit) {\r\n        this.engine.timeStepper.start(frameNumLimit);\r\n    }\r\n    /**\r\n     * 暂停运行\r\n     */\r\n    pause() {\r\n        this.engine.timeStepper.pause();\r\n    }\r\n    test() {\r\n        this.engine.test();\r\n    }\r\n}\r\nexports.TorqueWorld = TorqueWorld;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29yZS9pbnRlcmZhY2UudHM/MjY1ZiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxzQ0FBc0M7QUFDdEMseUNBQTZDO0FBQzdDLDhDQUE4QztBQU85QyxXQUFXO0FBQ1gsTUFBYSxXQUFXO0lBR3BCLFlBQVksS0FBYSxFQUFFLE1BQWMsRUFBRSxHQUFlO1FBQ3RELElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxlQUFNLENBQUMsS0FBSyxFQUFFLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNqRCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsTUFBTSxDQUFDLElBQW1CO1FBQ3RCLElBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUNwQixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ2pDO2FBQ0k7WUFDRCxvQkFBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsY0FBYyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzVCLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM5QixvQkFBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsYUFBYSxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ3pDO0lBQ0wsQ0FBQztJQUNEOzs7T0FHRztJQUNILE1BQU0sQ0FBQyxJQUFVO1FBQ2Isb0JBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLGNBQWMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUN2QyxXQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBQ3RDLG9CQUFLLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVEOztPQUVHO0lBQ0gsS0FBSztRQUNELElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsS0FBSyxDQUFDLElBQVU7UUFDWixPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsZUFBZSxDQUFDLEdBQWM7UUFDMUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVEOzs7T0FHRztJQUNILElBQUksQ0FBQyxFQUF3QjtRQUN6QixJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVEOzs7T0FHRztJQUNILEtBQUssQ0FBQyxhQUFzQjtRQUN4QixJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVEOztPQUVHO0lBQ0gsS0FBSztRQUNELElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3BDLENBQUM7SUFFRCxJQUFJO1FBQ0EsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN2QixDQUFDO0NBQ0o7QUFsRkQsa0NBa0ZDIiwiZmlsZSI6IjExLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm9keSB9IGZyb20gXCIuLi9ib2R5L2JvZHlcIjtcclxuaW1wb3J0IHsgVXRpbCB9IGZyb20gXCIuLi9jb21tb24vdXRpbFwiO1xyXG5pbXBvcnQgeyBFbmdpbmUsIEVuZ2luZU9wdCB9IGZyb20gXCIuL2VuZ2luZVwiO1xyXG5pbXBvcnQgeyBFdmVudCB9IGZyb20gXCIuLi9ldmVudC9ldmVudEVtaXR0ZXJcIjtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuLy8gVG9ycXVl5Li757G7XHJcbmV4cG9ydCBjbGFzcyBUb3JxdWVXb3JsZCB7XHJcbiAgICBwcml2YXRlIGVuZ2luZTogRW5naW5lO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyLCBvcHQ/OiBFbmdpbmVPcHQpIHtcclxuICAgICAgICB0aGlzLmVuZ2luZSA9IG5ldyBFbmdpbmUod2lkdGgsIGhlaWdodCwgb3B0KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWinuWKoOWImuS9k1xyXG4gICAgICogQHBhcmFtIGJvZHkgXHJcbiAgICAgKi9cclxuICAgIGFwcGVuZChib2R5OiBCb2R5IHwgQm9keVtdKSB7XHJcbiAgICAgICAgaWYoQXJyYXkuaXNBcnJheShib2R5KSkge1xyXG4gICAgICAgICAgICBib2R5Lm1hcChiID0+IHRoaXMuYXBwZW5kKGIpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIEV2ZW50LmVtaXQoYm9keSwgJ2JlZm9yZUFwcGVuZCcsIGJvZHkpO1xyXG4gICAgICAgICAgICBib2R5LnNldEVuZ2luZSh0aGlzLmVuZ2luZSk7XHJcbiAgICAgICAgICAgIHRoaXMuZW5naW5lLmJvZGllcy5wdXNoKGJvZHkpO1xyXG4gICAgICAgICAgICBFdmVudC5lbWl0KGJvZHksICdhZnRlckFwcGVuZCcsIGJvZHkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog56e76Zmk5Yia5L2TXHJcbiAgICAgKiBAcGFyYW0gYm9keSBcclxuICAgICAqL1xyXG4gICAgcmVtb3ZlKGJvZHk6IEJvZHkpIHtcclxuICAgICAgICBFdmVudC5lbWl0KGJvZHksICdiZWZvcmVSZW1vdmUnLCBib2R5KTtcclxuICAgICAgICBVdGlsLnJlbW92ZSh0aGlzLmVuZ2luZS5ib2RpZXMsIGJvZHkpO1xyXG4gICAgICAgIEV2ZW50LmVtaXQoYm9keSwgJ2FmdGVyUmVtb3ZlJywgYm9keSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmuIXnqbrlvJXmk45cclxuICAgICAqL1xyXG4gICAgY2xlYXIoKSB7XHJcbiAgICAgICAgdGhpcy5lbmdpbmUuYm9kaWVzLm1hcChib2R5ID0+IHRoaXMucmVtb3ZlKGJvZHkpKTtcclxuICAgICAgICB0aGlzLmVuZ2luZS5tYW5pZm9sZFRhYmxlLmNsZWFyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlhYvpmobliJrkvZNcclxuICAgICAqIEBwYXJhbSBib2R5IFxyXG4gICAgICovXHJcbiAgICBjbG9uZShib2R5OiBCb2R5KTogQm9keSB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDorr7nva7lvJXmk47lj4LmlbBcclxuICAgICAqIEBwYXJhbSBvcHQgXHJcbiAgICAgKi9cclxuICAgIHNldEVuZ2luZU9wdGlvbihvcHQ6IEVuZ2luZU9wdCkge1xyXG4gICAgICAgIHRoaXMuZW5naW5lLnNldE9wdGlvbihvcHQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5re75Yqg5pe26Ze05q2l5Ye95pWwXHJcbiAgICAgKiBAcGFyYW0gZm4gXHJcbiAgICAgKi9cclxuICAgIHN0ZXAoZm46IChkdDogbnVtYmVyKSA9PiB2b2lkKSB7XHJcbiAgICAgICAgdGhpcy5lbmdpbmUudGltZVN0ZXBwZXIuYWRkU3RlcChmbik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlvIDlp4vov5DooYxcclxuICAgICAqIEBwYXJhbSBmcmFtZU51bUxpbWl0IOmZkOWItui/kOihjOWkmuWwkeW4p+WBnOS4i1xyXG4gICAgICovXHJcbiAgICBzdGFydChmcmFtZU51bUxpbWl0PzogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy5lbmdpbmUudGltZVN0ZXBwZXIuc3RhcnQoZnJhbWVOdW1MaW1pdCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmmoLlgZzov5DooYxcclxuICAgICAqL1xyXG4gICAgcGF1c2UoKSB7XHJcbiAgICAgICAgdGhpcy5lbmdpbmUudGltZVN0ZXBwZXIucGF1c2UoKTtcclxuICAgIH1cclxuXHJcbiAgICB0ZXN0KCkge1xyXG4gICAgICAgIHRoaXMuZW5naW5lLnRlc3QoKTtcclxuICAgIH1cclxufVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///11\n")},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Engine = void 0;\r\nconst vector_1 = __webpack_require__(1);\r\nconst util_1 = __webpack_require__(0);\r\nconst timeStepper_1 = __webpack_require__(13);\r\nconst detector_1 = __webpack_require__(14);\r\nconst sleeping_1 = __webpack_require__(20);\r\nconst manifoldTable_1 = __webpack_require__(21);\r\nconst eventEmitter_1 = __webpack_require__(3);\r\nconst contact_1 = __webpack_require__(5);\r\n// 主引擎\r\nclass Engine {\r\n    constructor(width, height, opt) {\r\n        this.testFlag = false;\r\n        this.timeList = [];\r\n        this.width = width || 0;\r\n        this.height = height || 0;\r\n        this.gravity = new vector_1.Vector(0, 9);\r\n        this.enableSleeping = true;\r\n        this.enableCollisionDetection = true;\r\n        this.enableCollisionResolve = true;\r\n        this.methods = {\r\n            onTickStart: () => { },\r\n            onTickEnd: () => { },\r\n            beforeUpdate: () => { },\r\n            afterUpdate: () => { },\r\n            beforeRender: () => { },\r\n            afterRender: () => { },\r\n            onStart: () => { },\r\n            onPause: () => { },\r\n            collisionStart: (manifolds) => { },\r\n            collisionActive: (manifolds) => { },\r\n            collisionEnd: (manifolds) => { }\r\n        };\r\n        util_1.Util.merge(this, opt);\r\n        this.bodies = [];\r\n        this.timeStepper = new timeStepper_1.TimeStepper(this, opt);\r\n        this.detector = new detector_1.Detector(this, opt);\r\n        this.manifoldTable = new manifoldTable_1.ManifoldTable(opt);\r\n        this.contactConstraint = new contact_1.ContactConstraint();\r\n        this.sleeping = new sleeping_1.Sleeping(opt);\r\n    }\r\n    /**\r\n     * 引擎更新\r\n     * @param dt 步长\r\n     * @param timeStamp 时间戳\r\n     */\r\n    update(dt, timeStamp) {\r\n        let broadPhasePair = [], collisions = [];\r\n        if (this.enableSleeping) {\r\n            // 更新刚体的休眠/唤醒状态\r\n            this.sleeping.update(this.bodies);\r\n        }\r\n        for (let i = 0; i < this.bodies.length; i++) {\r\n            let force = this.gravity.scl(this.bodies[i].mass * 50);\r\n            // 应用受力\r\n            this.bodies[i].applyForce(force);\r\n            // 积分受力\r\n            this.bodies[i].integrateForces(dt);\r\n        }\r\n        // 解决所有约束\r\n        // this.resolver.solveConstraint();\r\n        // 是否开启碰撞检测\r\n        if (this.enableCollisionDetection) {\r\n            // 粗阶段检测\r\n            broadPhasePair = this.detector.broadPhase.detect(this.bodies);\r\n            let start = performance.now();\r\n            // 细阶段检测\r\n            collisions = this.detector.narrowPhase.detect(broadPhasePair);\r\n            let end = performance.now(), range = 360;\r\n            if (this.testFlag) {\r\n                if (this.timeList.length < range) {\r\n                    this.timeList.push(end - start);\r\n                }\r\n                else {\r\n                    let total = this.timeList.reduce((t, cur) => {\r\n                        return t + cur;\r\n                    });\r\n                    console.log(total / range);\r\n                    this.testFlag = false;\r\n                    this.timeList.length = 0;\r\n                }\r\n            }\r\n            //console.log(collisions);\r\n            this.manifoldTable.update(collisions, timeStamp);\r\n            // 移除缓存表超时的碰撞对\r\n            this.manifoldTable.filter(timeStamp);\r\n            // 是否开启了碰撞求解\r\n            if (this.enableCollisionResolve) {\r\n                // 若发现有休眠的刚体发生碰撞，则唤醒\r\n                if (this.enableSleeping)\r\n                    this.sleeping.afterCollision(this.manifoldTable.list);\r\n                // 求解碰撞约束\r\n                this.contactConstraint.solve(this.manifoldTable.list, dt);\r\n            }\r\n        }\r\n        for (let i = 0; i < this.bodies.length; i++) {\r\n            // 积分速度\r\n            this.bodies[i].integrateVelocities(dt);\r\n        }\r\n        this.manifoldTable.collisionStart.length &&\r\n            eventEmitter_1.Event.emit(this, 'collisionStart', this.manifoldTable.collisionStart);\r\n        this.manifoldTable.collisionActive.length &&\r\n            eventEmitter_1.Event.emit(this, 'collisionActive', this.manifoldTable.collisionActive);\r\n        this.manifoldTable.collisionEnd.length &&\r\n            eventEmitter_1.Event.emit(this, 'collisionEnd', this.manifoldTable.collisionEnd);\r\n    }\r\n    /**\r\n     * 渲染物理引擎\r\n     * @param dt\r\n     */\r\n    render(dt) {\r\n        for (let i = 0; i < this.bodies.length; i++) {\r\n            if (this.bodies[i].sleeping || this.bodies[i].fixed) {\r\n                continue;\r\n            }\r\n            // 渲染刚体\r\n            this.bodies[i].render(this.bodies[i], dt);\r\n        }\r\n    }\r\n    /**\r\n     * 设置引擎参数\r\n     * @param opt\r\n     */\r\n    setOption(opt) {\r\n        util_1.Util.merge(this, opt);\r\n        util_1.Util.merge(this.timeStepper, opt);\r\n    }\r\n    test() {\r\n        this.testFlag = true;\r\n    }\r\n}\r\nexports.Engine = Engine;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///12\n")},function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TimeStepper = void 0;\r\nconst util_1 = __webpack_require__(0);\r\nconst eventEmitter_1 = __webpack_require__(3);\r\n/**\r\n * 时间步迭代器\r\n */\r\nclass TimeStepper {\r\n    constructor(engine, opt) {\r\n        this.engine = engine;\r\n        this.status = false;\r\n        this.tickProcessorList = [];\r\n        this.fps = opt.fps || 60;\r\n        this.deltaFixed = opt.deltaFixed === undefined ? true : opt.deltaFixed;\r\n        this.deltaRecordLimit = 60;\r\n        util_1.Util.merge(this, opt);\r\n        this.dt = 1 / this.fps;\r\n        this.dtMin = this.dt;\r\n        this.dtMax = this.dt * 2;\r\n        this.frameCounter = 0;\r\n        this.frameStamp = 0;\r\n        this.prevTime = 0;\r\n        this.frameTotal = 0;\r\n        this.frameNumLimit = -1;\r\n        this.deltaRecorder = [];\r\n    }\r\n    /**\r\n     * 一次tick，也就是一次模拟\r\n     * @param timeStamp 当前时间戳\r\n     */\r\n    tick(timeStamp = 0) {\r\n        let dt;\r\n        // 固定dt\r\n        if (this.deltaFixed === false) {\r\n            // 动态计算dt\r\n            dt = (timeStamp - this.prevTime) || this.dt;\r\n            this.prevTime = timeStamp;\r\n            // 根据过去的变化步长情况，优化当前步长，使引擎稳定\r\n            this.deltaRecorder.push(dt);\r\n            this.deltaRecorder = this.deltaRecorder.slice(-this.deltaRecordLimit);\r\n            dt = util_1.Util.clamp(Math.min.apply(Math, this.deltaRecorder), this.dtMin, this.dtMax);\r\n            // 更新dt\r\n            this.dt = dt;\r\n        }\r\n        // 动态计算fps\r\n        this.frameCounter += 1;\r\n        if (timeStamp - this.frameStamp >= 1000) {\r\n            this.fps = this.frameCounter * ((timeStamp - this.frameStamp) / 1000);\r\n            this.frameStamp = timeStamp;\r\n            this.frameCounter = 0;\r\n        }\r\n        eventEmitter_1.Event.emit(this.engine, 'onTickStart');\r\n        // 更新物理引擎\r\n        eventEmitter_1.Event.emit(this.engine, 'beforeUpdate');\r\n        this.engine.update(this.dt, timeStamp);\r\n        eventEmitter_1.Event.emit(this.engine, 'afterUpdate');\r\n        // 渲染物理引擎\r\n        eventEmitter_1.Event.emit(this.engine, 'beforeRender');\r\n        this.engine.render(this.dt);\r\n        eventEmitter_1.Event.emit(this.engine, 'afterRender');\r\n        // 执行用户自定义函数\r\n        this.tickProcessorList.map(fn => fn(timeStamp));\r\n        eventEmitter_1.Event.emit(this.engine, 'onTickEnd');\r\n        this.frameTotal++;\r\n        if (this.frameNumLimit > 0 && this.frameTotal >= this.frameNumLimit) {\r\n            this.pause();\r\n            return;\r\n        }\r\n        this.raf = window.requestAnimationFrame(this.tick.bind(this));\r\n    }\r\n    /**\r\n     * 在一次tick中增加额外自定义的处理函数\r\n     * @param fn 要增加的处理函数\r\n     */\r\n    addStep(fn) {\r\n        typeof fn === 'function' && this.tickProcessorList.push(fn);\r\n    }\r\n    /**\r\n     * 开始模拟\r\n     * @param frameNumLimit 限制运行多少帧停下\r\n     */\r\n    start(frameNumLimit) {\r\n        if (this.status)\r\n            return;\r\n        if (frameNumLimit && frameNumLimit > 0) {\r\n            this.frameNumLimit = frameNumLimit;\r\n        }\r\n        this.status = true;\r\n        eventEmitter_1.Event.emit(this.engine, 'onStart');\r\n        this.tick();\r\n    }\r\n    /**\r\n     * 暂停模拟\r\n     */\r\n    pause() {\r\n        if (!this.status)\r\n            return;\r\n        this.status = false;\r\n        this.frameTotal = 0;\r\n        eventEmitter_1.Event.emit(this.engine, 'pause');\r\n        window.cancelAnimationFrame(this.raf);\r\n    }\r\n}\r\nexports.TimeStepper = TimeStepper;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///13\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Detector = void 0;\r\nconst broadPhase_1 = __webpack_require__(15);\r\nconst narrowPhase_1 = __webpack_require__(16);\r\n/**\r\n * 碰撞检测\r\n */\r\nclass Detector {\r\n    constructor(engine, opt) {\r\n        this.broadPhase = new broadPhase_1.BroadPhase(engine, opt);\r\n        this.narrowPhase = new narrowPhase_1.NarrowPhase(engine, opt);\r\n    }\r\n}\r\nexports.Detector = Detector;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29sbGlzaW9uL2RldGVjdG9yLnRzPzhiODYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNkNBQTBDO0FBQzFDLDhDQUE0QztBQUc1Qzs7R0FFRztBQUlILE1BQWEsUUFBUTtJQU1qQixZQUFZLE1BQWMsRUFBRSxHQUFjO1FBQ3RDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSx1QkFBVSxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztRQUM5QyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUkseUJBQVcsQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDcEQsQ0FBQztDQUNKO0FBVkQsNEJBVUMiLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCcm9hZFBoYXNlIH0gZnJvbSBcIi4vYnJvYWRQaGFzZVwiO1xyXG5pbXBvcnQgeyBOYXJyb3dQaGFzZSB9IGZyb20gXCIuL25hcnJvd1BoYXNlXCI7XHJcbmltcG9ydCB7IEVuZ2luZSwgRW5naW5lT3B0IH0gZnJvbSBcIi4uL2NvcmUvZW5naW5lXCI7XHJcblxyXG4vKipcclxuICog56Kw5pKe5qOA5rWLXHJcbiAqL1xyXG5cclxuXHJcblxyXG5leHBvcnQgY2xhc3MgRGV0ZWN0b3Ige1xyXG4gICAgLy8g57KX5qOA5p+lXHJcbiAgICBicm9hZFBoYXNlOiBCcm9hZFBoYXNlO1xyXG4gICAgLy8g57uG5qOA5rWLXHJcbiAgICBuYXJyb3dQaGFzZTogTmFycm93UGhhc2U7ICAgXHJcblxyXG4gICAgY29uc3RydWN0b3IoZW5naW5lOiBFbmdpbmUsIG9wdDogRW5naW5lT3B0KSB7XHJcbiAgICAgICAgdGhpcy5icm9hZFBoYXNlID0gbmV3IEJyb2FkUGhhc2UoZW5naW5lLCBvcHQpO1xyXG4gICAgICAgIHRoaXMubmFycm93UGhhc2UgPSBuZXcgTmFycm93UGhhc2UoZW5naW5lLCBvcHQpO1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///14\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.BroadPhase = void 0;\r\nconst util_1 = __webpack_require__(0);\r\nclass BroadPhase {\r\n    constructor(engine, opt) {\r\n        this.engine = engine;\r\n    }\r\n    /**\r\n     * 检测\r\n     * @param bodies 所有刚体\r\n     */\r\n    detect(bodies) {\r\n        return this.sweepAndPrune(bodies);\r\n    }\r\n    /**\r\n     * 查看刚体是否出了可视区\r\n     * @param bound\r\n     */\r\n    isBodyOutWindow(bound) {\r\n        return bound.max.y < 0 || bound.min.x > this.engine.width || bound.min.y > this.engine.height || bound.max.x < 0;\r\n    }\r\n    /**\r\n     * 查看两个刚体是否允许发生碰撞\r\n     * @param bodyA\r\n     * @param bodyB\r\n     */\r\n    canCollide(bodyA, bodyB) {\r\n        // 若bodies[i]的碰撞过滤器过滤了bodies[i]，不进行检测\r\n        if (!bodyA.methods.filter(bodyA.mask, bodyB.mask) || !bodyB.methods.filter(bodyB.mask, bodyA.mask))\r\n            return false;\r\n        // 若刚体已经移出可视区了，跳过\r\n        if (this.isBodyOutWindow(bodyA.bound) || this.isBodyOutWindow(bodyB.bound))\r\n            return false;\r\n        // 两个静态刚体 ，跳过\r\n        if (bodyA.fixed && bodyB.fixed)\r\n            return false;\r\n        // 两个睡眠刚体，跳过\r\n        if (bodyA.sleeping && bodyB.sleeping)\r\n            return false;\r\n        return true;\r\n    }\r\n    /**\r\n     * Sweep & Prune\r\n     * @param bodies\r\n     */\r\n    sweepAndPrune(bodies) {\r\n        let broadPhasePairList = [], i, j, len = bodies.length;\r\n        // 包围盒在x轴上排序 （直接插入排序）\r\n        // 第一次排序时包围盒趋向于无序，这时复杂度为O(n^2) \r\n        // 而因为时间相干性，在之后的每帧包围盒趋向有序，此时直接插入排序效率最高，为O(n^2)\r\n        util_1.Util.insertSort(bodies, (bodyA, bodyB) => bodyA.bound.min.x - bodyB.bound.min.x);\r\n        for (i = 0; i < len; i++) {\r\n            for (j = i + 1; j < len; j++) {\r\n                // 已经不可能发生碰撞了，跳出循环\r\n                if (bodies[i].bound.max.x < bodies[j].bound.min.x)\r\n                    break;\r\n                // 若A，B不可以发生碰撞，返回\r\n                if (!this.canCollide(bodies[i], bodies[j]))\r\n                    continue;\r\n                // 一个个对比包围盒是否相交\r\n                if (bodies[i].bound.isIntersect(bodies[j].bound)) {\r\n                    broadPhasePairList.push({\r\n                        bodyA: bodies[i],\r\n                        bodyB: bodies[j],\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return broadPhasePairList;\r\n    }\r\n}\r\nexports.BroadPhase = BroadPhase;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29sbGlzaW9uL2Jyb2FkUGhhc2UudHM/ZWRmYyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSxzQ0FBc0M7QUFrQnRDLE1BQWEsVUFBVTtJQUduQixZQUFZLE1BQWMsRUFBRSxHQUFjO1FBQ3RDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3pCLENBQUM7SUFFRDs7O09BR0c7SUFDSCxNQUFNLENBQUMsTUFBYztRQUNqQixPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUVEOzs7T0FHRztJQUNLLGVBQWUsQ0FBQyxLQUFZO1FBQ2hDLE9BQU8sS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxJQUFJLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNySCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNLLFVBQVUsQ0FBQyxLQUFXLEVBQUUsS0FBVztRQUN2QyxxQ0FBcUM7UUFDckMsSUFBRyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsSUFBSSxDQUFDO1lBQUUsT0FBTyxLQUFLLENBQUM7UUFFaEgsaUJBQWlCO1FBQ2pCLElBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksSUFBSSxDQUFDLGVBQWUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO1lBQUUsT0FBTyxLQUFLLENBQUM7UUFFeEYsYUFBYTtRQUNiLElBQUcsS0FBSyxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUMsS0FBSztZQUFFLE9BQU8sS0FBSyxDQUFDO1FBRTVDLFlBQVk7UUFDWixJQUFHLEtBQUssQ0FBQyxRQUFRLElBQUksS0FBSyxDQUFDLFFBQVE7WUFBRSxPQUFPLEtBQUssQ0FBQztRQUVsRCxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0ssYUFBYSxDQUFDLE1BQWM7UUFDaEMsSUFBSSxrQkFBa0IsR0FBcUIsRUFBRSxFQUN6QyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDO1FBRTlCLHFCQUFxQjtRQUNyQiwrQkFBK0I7UUFDL0IsOENBQThDO1FBQzlDLFdBQUksQ0FBQyxVQUFVLENBQU8sTUFBTSxFQUFFLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRXZGLEtBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3JCLEtBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDekIsa0JBQWtCO2dCQUNsQixJQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO29CQUFFLE1BQU07Z0JBRXhELGlCQUFpQjtnQkFDakIsSUFBRyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFBRSxTQUFTO2dCQUVwRCxlQUFlO2dCQUNmLElBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFO29CQUM3QyxrQkFBa0IsQ0FBQyxJQUFJLENBQUM7d0JBQ3BCLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDO3dCQUNoQixLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQztxQkFDbkIsQ0FBQyxDQUFDO2lCQUNOO2FBQ0o7U0FDSjtRQUVELE9BQU8sa0JBQWtCLENBQUM7SUFDOUIsQ0FBQztDQUNKO0FBN0VELGdDQTZFQyIsImZpbGUiOiIxNS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJvZHkgfSBmcm9tIFwiLi4vYm9keS9ib2R5XCI7XHJcbmltcG9ydCB7IFV0aWwgfSBmcm9tIFwiLi4vY29tbW9uL3V0aWxcIjtcclxuaW1wb3J0IHsgQm91bmQgfSBmcm9tIFwiLi9ib3VuZFwiO1xyXG5pbXBvcnQgeyBFbmdpbmUsIEVuZ2luZU9wdCB9IGZyb20gXCIuLi9jb3JlL2VuZ2luZVwiO1xyXG5cclxuLyoqXHJcbiAqIOeyl+ajgOa1i+mYtuaute+8jOS9v+eUqFN3ZWVwICYgUHJ1bmXnrpfms5VcclxuICog5Y+C6ICD77yaaHR0cHM6Ly9saW5rLnNwcmluZ2VyLmNvbS9hcnRpY2xlLzEwLjEwMDcvczAwMzcxLTAxMy0wODgwLTdcclxuICovXHJcblxyXG5cclxuLy8g57KX5qOA5rWL6Zi25q6155Sf5oiQ55qE57uT5p6c5a+557uT5p6EXHJcbmV4cG9ydCB0eXBlIGJyb2FkUGhhc2VQYWlyID0ge1xyXG4gICAgYm9keUE6IEJvZHk7XHJcbiAgICBib2R5QjogQm9keTtcclxufTtcclxuXHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIEJyb2FkUGhhc2Uge1xyXG4gICAgZW5naW5lOiBFbmdpbmU7XHJcblxyXG4gICAgY29uc3RydWN0b3IoZW5naW5lOiBFbmdpbmUsIG9wdDogRW5naW5lT3B0KSB7XHJcbiAgICAgICAgdGhpcy5lbmdpbmUgPSBlbmdpbmU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmo4DmtYtcclxuICAgICAqIEBwYXJhbSBib2RpZXMg5omA5pyJ5Yia5L2TXHJcbiAgICAgKi9cclxuICAgIGRldGVjdChib2RpZXM6IEJvZHlbXSk6IGJyb2FkUGhhc2VQYWlyW10ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnN3ZWVwQW5kUHJ1bmUoYm9kaWVzKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOafpeeci+WImuS9k+aYr+WQpuWHuuS6huWPr+inhuWMulxyXG4gICAgICogQHBhcmFtIGJvdW5kIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIGlzQm9keU91dFdpbmRvdyhib3VuZDogQm91bmQpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gYm91bmQubWF4LnkgPCAwIHx8IGJvdW5kLm1pbi54ID4gdGhpcy5lbmdpbmUud2lkdGggfHwgYm91bmQubWluLnkgPiB0aGlzLmVuZ2luZS5oZWlnaHQgfHwgYm91bmQubWF4LnggPCAwO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5p+l55yL5Lik5Liq5Yia5L2T5piv5ZCm5YWB6K645Y+R55Sf56Kw5pKeXHJcbiAgICAgKiBAcGFyYW0gYm9keUEgXHJcbiAgICAgKiBAcGFyYW0gYm9keUIgXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgY2FuQ29sbGlkZShib2R5QTogQm9keSwgYm9keUI6IEJvZHkpOiBib29sZWFuIHtcclxuICAgICAgICAvLyDoi6Vib2RpZXNbaV3nmoTnorDmkp7ov4fmu6Tlmajov4fmu6TkuoZib2RpZXNbaV3vvIzkuI3ov5vooYzmo4DmtYtcclxuICAgICAgICBpZighYm9keUEubWV0aG9kcy5maWx0ZXIoYm9keUEubWFzaywgYm9keUIubWFzaykgfHwgIWJvZHlCLm1ldGhvZHMuZmlsdGVyKGJvZHlCLm1hc2ssIGJvZHlBLm1hc2spKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8g6Iul5Yia5L2T5bey57uP56e75Ye65Y+v6KeG5Yy65LqG77yM6Lez6L+HXHJcbiAgICAgICAgaWYodGhpcy5pc0JvZHlPdXRXaW5kb3coYm9keUEuYm91bmQpIHx8IHRoaXMuaXNCb2R5T3V0V2luZG93KGJvZHlCLmJvdW5kKSkgcmV0dXJuIGZhbHNlO1xyXG5cclxuICAgICAgICAvLyDkuKTkuKrpnZnmgIHliJrkvZMg77yM6Lez6L+HXHJcbiAgICAgICAgaWYoYm9keUEuZml4ZWQgJiYgYm9keUIuZml4ZWQpIHJldHVybiBmYWxzZTtcclxuXHJcbiAgICAgICAgLy8g5Lik5Liq552h55yg5Yia5L2T77yM6Lez6L+HXHJcbiAgICAgICAgaWYoYm9keUEuc2xlZXBpbmcgJiYgYm9keUIuc2xlZXBpbmcpIHJldHVybiBmYWxzZTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBTd2VlcCAmIFBydW5lXHJcbiAgICAgKiBAcGFyYW0gYm9kaWVzIFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHN3ZWVwQW5kUHJ1bmUoYm9kaWVzOiBCb2R5W10pOiBicm9hZFBoYXNlUGFpcltdIHtcclxuICAgICAgICBsZXQgYnJvYWRQaGFzZVBhaXJMaXN0OiBicm9hZFBoYXNlUGFpcltdID0gW10sXHJcbiAgICAgICAgICAgIGksIGosIGxlbiA9IGJvZGllcy5sZW5ndGg7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8g5YyF5Zu055uS5ZyoeOi9tOS4iuaOkuW6jyDvvIjnm7TmjqXmj5LlhaXmjpLluo/vvIlcclxuICAgICAgICAvLyDnrKzkuIDmrKHmjpLluo/ml7bljIXlm7Tnm5LotovlkJHkuo7ml6Dluo/vvIzov5nml7blpI3mnYLluqbkuLpPKG5eMikgXHJcbiAgICAgICAgLy8g6ICM5Zug5Li65pe26Ze055u45bmy5oCn77yM5Zyo5LmL5ZCO55qE5q+P5bin5YyF5Zu055uS6LaL5ZCR5pyJ5bqP77yM5q2k5pe255u05o6l5o+S5YWl5o6S5bqP5pWI546H5pyA6auY77yM5Li6TyhuXjIpXHJcbiAgICAgICAgVXRpbC5pbnNlcnRTb3J0PEJvZHk+KGJvZGllcywgKGJvZHlBLCBib2R5QikgPT4gYm9keUEuYm91bmQubWluLnggLSBib2R5Qi5ib3VuZC5taW4ueCk7XHJcbiAgICBcclxuICAgICAgICBmb3IoaSA9IDA7IGkgPCBsZW47IGkrKykge1xyXG4gICAgICAgICAgICBmb3IoaiA9IGkgKyAxOyBqIDwgbGVuOyBqKyspIHtcclxuICAgICAgICAgICAgICAgIC8vIOW3sue7j+S4jeWPr+iDveWPkeeUn+eisOaSnuS6hu+8jOi3s+WHuuW+queOr1xyXG4gICAgICAgICAgICAgICAgaWYoYm9kaWVzW2ldLmJvdW5kLm1heC54IDwgYm9kaWVzW2pdLmJvdW5kLm1pbi54KSBicmVhaztcclxuXHJcbiAgICAgICAgICAgICAgICAvLyDoi6VB77yMQuS4jeWPr+S7peWPkeeUn+eisOaSnu+8jOi/lOWbnlxyXG4gICAgICAgICAgICAgICAgaWYoIXRoaXMuY2FuQ29sbGlkZShib2RpZXNbaV0sIGJvZGllc1tqXSkpIGNvbnRpbnVlO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIOS4gOS4quS4quWvueavlOWMheWbtOebkuaYr+WQpuebuOS6pFxyXG4gICAgICAgICAgICAgICAgaWYoYm9kaWVzW2ldLmJvdW5kLmlzSW50ZXJzZWN0KGJvZGllc1tqXS5ib3VuZCkpIHtcclxuICAgICAgICAgICAgICAgICAgICBicm9hZFBoYXNlUGFpckxpc3QucHVzaCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvZHlBOiBib2RpZXNbaV0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvZHlCOiBib2RpZXNbal0sXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBicm9hZFBoYXNlUGFpckxpc3Q7XHJcbiAgICB9IFxyXG59XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///15\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.NarrowPhase = void 0;\r\nconst sat_1 = __webpack_require__(17);\r\nconst arcs_1 = __webpack_require__(4);\r\nconst vertices_1 = __webpack_require__(2);\r\nconst util_1 = __webpack_require__(0);\r\nclass NarrowPhase {\r\n    constructor(engine, opt) {\r\n        this.engine = engine;\r\n        this.SAT = new sat_1.SAT(opt);\r\n    }\r\n    /**\r\n     * 检测\r\n     * @param broadPhasePairList 粗检查生成的潜在碰撞对\r\n     */\r\n    detect(broadPhasePairList) {\r\n        let collisions = [], prevCollision = null, pair, partsA, partsB, partA, partB, i, j, k;\r\n        for (i = 0; i < broadPhasePairList.length; i++) {\r\n            pair = broadPhasePairList[i];\r\n            partsA = pair.bodyA.parts;\r\n            partsB = pair.bodyB.parts;\r\n            for (j = 0; j < partsA.length; j++) {\r\n                partA = partsA[j];\r\n                for (k = 0; k < partsB.length; k++) {\r\n                    partB = partsB[k];\r\n                    // 两个子图形包围盒不相交，跳过\r\n                    let axesA = partA instanceof vertices_1.Poly ? partA.axes : [], axesB = partB instanceof vertices_1.Poly ? partB.axes : [], intersection = partA.bound.isIntersect(partB.bound);\r\n                    if (!intersection)\r\n                        continue;\r\n                    prevCollision = this.getPrevCollision(partA, partB, this.engine.manifoldTable);\r\n                    // A,B皆为圆形\r\n                    if (partA instanceof arcs_1.Arc && partB instanceof arcs_1.Arc) {\r\n                        collisions.push(this.SAT.circleCollideCircle(partA, partB, prevCollision));\r\n                    }\r\n                    // A为多边形，B为圆形\r\n                    else if (partA instanceof vertices_1.Poly && partB instanceof arcs_1.Arc) {\r\n                        collisions.push(this.SAT.polygonCollideBody(partA, partB, prevCollision));\r\n                    }\r\n                    // A为圆形，B为多边形\r\n                    else if (partA instanceof arcs_1.Arc && partB instanceof vertices_1.Poly) {\r\n                        collisions.push(this.SAT.polygonCollideBody(partB, partA, prevCollision));\r\n                    }\r\n                    // A,B皆为多边形\r\n                    else {\r\n                        collisions.push(this.SAT.polygonCollideBody(partA, partB, prevCollision));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return collisions;\r\n    }\r\n    /**\r\n     * 获取上一次碰撞\r\n     * @param partA\r\n     * @param partB\r\n     * @param manifoldTable\r\n     */\r\n    getPrevCollision(partA, partB, manifoldTable) {\r\n        let id = util_1.Util.compositeId(partA.id, partB.id), manifold = manifoldTable.table[id];\r\n        if (this.engine.manifoldTable.enableCache && manifold && manifold.isActive) {\r\n            return manifold.collision;\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\nexports.NarrowPhase = NarrowPhase;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///16\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.SAT = void 0;\r\nconst vector_1 = __webpack_require__(1);\r\nconst vertices_1 = __webpack_require__(2);\r\nconst arcs_1 = __webpack_require__(4);\r\nconst manifold_1 = __webpack_require__(7);\r\nconst vClosest_1 = __webpack_require__(18);\r\nconst contact_1 = __webpack_require__(5);\r\nconst util_1 = __webpack_require__(0);\r\nconst axesFilter_closestVertices_1 = __webpack_require__(25);\r\n/**\r\n * 分离轴算法\r\n * 参考：https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\r\n */\r\nclass SAT {\r\n    constructor(opt) {\r\n        this.enableAxesFilter = true;\r\n        this.axesFilterThreshold = 8;\r\n        util_1.Util.merge(this, opt);\r\n    }\r\n    /**\r\n     * 多边形 - 多边形或圆形（geometry）\r\n     * @param poly\r\n     * @param geometry\r\n     * @param intersection\r\n     * @param prevCollision\r\n     */\r\n    polygonCollideBody(poly, geometry, prevCollision) {\r\n        let canReuse = this.canReuseCollision(poly, geometry, prevCollision), collision = null, result = null;\r\n        // 若能用缓存，使用缓存\r\n        if (canReuse) {\r\n            collision = prevCollision;\r\n            result = this.detect(poly, geometry, [collision.normal]);\r\n            if (result.minOverlap < 0) {\r\n                collision.collide = false;\r\n                return collision;\r\n            }\r\n        }\r\n        // 若不能用缓存，则进行完整的测试\r\n        else {\r\n            let axes = this.filterAxes(poly, geometry);\r\n            collision = new manifold_1.Collision();\r\n            result = this.detect(poly, geometry, axes);\r\n            // 若发现两个刚体投影的重叠部分是负的，即表示它们没相交\r\n            if (result.minOverlap < 0) {\r\n                collision.collide = false;\r\n                return collision;\r\n            }\r\n            let normal = this.reviseNormal(axes[result.index], poly, geometry);\r\n            collision.normal.x = normal.x;\r\n            collision.normal.y = normal.y;\r\n            collision.tangent = normal.nor();\r\n            collision.partA = poly;\r\n            collision.partB = geometry;\r\n            collision.bodyA = poly.body;\r\n            collision.bodyB = geometry.body;\r\n        }\r\n        collision.contacts = this.findContacts(poly, geometry, collision.normal, result.minOverlap);\r\n        collision.collide = true;\r\n        return collision;\r\n    }\r\n    /**\r\n     * 圆形 - 圆形\r\n     * @param circleA\r\n     * @param circleB\r\n     * @param prevCollision\r\n     */\r\n    circleCollideCircle(arcA, arcB, prevCollision) {\r\n        let axis = arcA.centroid.sub(arcB.centroid, vector_1._tempVector1), overlaps = (arcA.radius + arcB.radius) - axis.len(), collision = new manifold_1.Collision();\r\n        // 两圆心距离比两圆半径和要大，即没有发生碰撞\r\n        if (overlaps < 0) {\r\n            collision.collide = false;\r\n            return collision;\r\n        }\r\n        let normal = this.reviseNormal(axis, arcA, arcB).nol();\r\n        collision.partA = arcA;\r\n        collision.partB = arcB;\r\n        collision.bodyA = arcA.body;\r\n        collision.bodyB = arcB.body;\r\n        collision.normal.x = normal.x;\r\n        collision.normal.y = normal.y;\r\n        collision.tangent = normal.nor().nol();\r\n        let position = arcA.centroid.loc(normal.inv(vector_1._tempVector1), arcA.radius - overlaps / 2);\r\n        collision.contacts = [new contact_1.Contact(position, overlaps)];\r\n        collision.collide = true;\r\n        return collision;\r\n    }\r\n    /**\r\n     * --------------------------------------------------------------------------------------------------\r\n     */\r\n    /**\r\n     * 进行分离轴检测\r\n     * @param poly\r\n     * @param geometry\r\n     * @param axes\r\n     */\r\n    detect(poly, geometry, axes) {\r\n        let minOverlap = Infinity, overlaps, len = axes.length, i, index;\r\n        // 将两个刚体投影到所有轴上\r\n        for (i = 0; i < len; i++) {\r\n            overlaps = this.minOverlaps(poly, geometry, axes[i]);\r\n            if (overlaps < 0) {\r\n                return {\r\n                    minOverlap: overlaps,\r\n                    index\r\n                };\r\n            }\r\n            if (overlaps < minOverlap) {\r\n                minOverlap = overlaps;\r\n                index = i;\r\n            }\r\n        }\r\n        return {\r\n            minOverlap,\r\n            index\r\n        };\r\n    }\r\n    /**\r\n     * 过滤有可能的轴和顶点集\r\n     * @param poly\r\n     * @param geometry\r\n     */\r\n    filterAxes(poly, geometry) {\r\n        let axes = [], circleAxis;\r\n        // 若geometry是多边形\r\n        if (geometry instanceof vertices_1.Poly) {\r\n            axes.push(...poly.axes);\r\n            axes.push(...geometry.axes);\r\n        }\r\n        // 是圆形\r\n        else {\r\n            circleAxis = arcs_1.Arcs.getAxes(geometry, poly);\r\n            axes.push(circleAxis, ...poly.axes);\r\n        }\r\n        // 如果开启了轴过滤功能并且两个图形得轴的数量大于给定的阈值，进行轴过滤\r\n        if (this.enableAxesFilter && axes.length >= this.axesFilterThreshold) {\r\n            axes = axesFilter_closestVertices_1.axesFilter_closestVertices(poly, geometry);\r\n            // axes = axesFilter_intersection(poly, geometry, intersection);\r\n            if (circleAxis) {\r\n                axes.push(circleAxis);\r\n            }\r\n        }\r\n        // console.log(axes);\r\n        return vertices_1.Vertices.uniqueAxes(axes);\r\n    }\r\n    /**\r\n     * 修正碰撞法线方向，使其始终背向刚体A\r\n     * @param normal 要修正的法线\r\n     * @param bodyA 刚体A\r\n     * @param bodyB 刚体B\r\n     */\r\n    reviseNormal(normal, geometryA, geometryB) {\r\n        if (normal.dot(geometryB.centroid.sub(geometryA.centroid, vector_1._tempVector1)) > 0) {\r\n            return normal.inv();\r\n        }\r\n        return normal.col();\r\n    }\r\n    /**\r\n     * 求最小投影重叠\r\n     * @param poly\r\n     * @param geometry\r\n     * @param axis 投影轴\r\n     */\r\n    minOverlaps(poly, geometry, axis) {\r\n        let projection1, projection2;\r\n        // 若geometry是多边形\r\n        if (geometry instanceof vertices_1.Poly) {\r\n            projection1 = vertices_1.Vertices.projection(poly.vertexList, axis),\r\n                projection2 = vertices_1.Vertices.projection(geometry.vertexList, axis);\r\n        }\r\n        // 是圆形\r\n        else {\r\n            projection1 = vertices_1.Vertices.projection(poly.vertexList, axis),\r\n                projection2 = arcs_1.Arcs.Projection(geometry, axis);\r\n        }\r\n        return Math.min(projection1.max - projection2.min, projection2.max - projection1.min);\r\n    }\r\n    /**\r\n     * 查看碰撞缓存是否可以复用\r\n     * @param geometryA\r\n     * @param geometryB\r\n     * @param prevCollision 上一次的碰撞\r\n     */\r\n    canReuseCollision(geometryA, geometryB, prevCollision) {\r\n        // 若上次碰撞的缓存存在\r\n        if (prevCollision) {\r\n            let bodyA = geometryA.body, bodyB = geometryB.body, motion = Math.sqrt(bodyA.motion + bodyB.motion);\r\n            // 若上次碰撞判定为真，且当前碰撞对刚体趋于静止，可复用\r\n            return prevCollision.collide && motion < 0.05;\r\n        }\r\n        // 碰撞缓存不存在，直接判定无法复用\r\n        return false;\r\n    }\r\n    /**\r\n     * 寻找碰撞点\r\n     * @param poly\r\n     * @param geometry\r\n     * @param normal\r\n     * @param depth\r\n     */\r\n    findContacts(poly, geometry, normal, depth) {\r\n        if (geometry instanceof vertices_1.Poly) {\r\n            return vClosest_1.VClosest(poly, geometry, normal, depth);\r\n            //return VClip(poly, geometry, normal, depth);\r\n        }\r\n        else {\r\n            let vertex = geometry.centroid.loc(normal, geometry.radius - depth / 2);\r\n            return [new contact_1.Contact(vertex, depth)];\r\n        }\r\n    }\r\n}\r\nexports.SAT = SAT;\r\n;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///17\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.VClosest = void 0;\r\nconst vertices_1 = __webpack_require__(2);\r\nconst contact_1 = __webpack_require__(5);\r\n/**\r\n * 将顶点按照在法线上投影的大小顺序排序\r\n * @param vertexList\r\n * @param normal\r\n */\r\nfunction orderProjectionVertexInNormalDirection(vertexList, normal) {\r\n    return vertexList.slice(0).sort((vertexA, vertexB) => vertexA.dot(normal) - vertexB.dot(normal));\r\n}\r\n/**\r\n * 最近内部顶点法寻找碰撞点\r\n * 详见：https://github.com/phenomLi/Blog/issues/41\r\n * @param poly\r\n * @param geometry\r\n */\r\nfunction VClosest(poly, geometry, normal, depth) {\r\n    let potentialContactsA = [], potentialContactsB = [], contacts = [], normalInv = normal.inv(), i;\r\n    let vertexListA = poly.vertexList, vertexListB = geometry.vertexList;\r\n    // 寻找多边形A最接近多边形B的两个点\r\n    potentialContactsA = orderProjectionVertexInNormalDirection(vertexListA, normal);\r\n    for (i = 0; i < potentialContactsA.length; i++) {\r\n        // 查看这些点是否在多边形B内部\r\n        if (vertices_1.Vertices.isContains(vertexListB, potentialContactsA[i])) {\r\n            // 如果是，则这个点记为一个碰撞点\r\n            contacts.push(new contact_1.Contact(potentialContactsA[i], depth));\r\n        }\r\n        else {\r\n            if (i !== 0)\r\n                break;\r\n        }\r\n    }\r\n    if (contacts.length >= 2)\r\n        return contacts;\r\n    // 同理上面\r\n    potentialContactsB = orderProjectionVertexInNormalDirection(vertexListB, normalInv);\r\n    for (i = 0; i < potentialContactsB.length; i++) {\r\n        if (vertices_1.Vertices.isContains(vertexListA, potentialContactsB[i])) {\r\n            contacts.push(new contact_1.Contact(potentialContactsB[i], depth));\r\n        }\r\n        else {\r\n            if (i !== 0)\r\n                break;\r\n        }\r\n    }\r\n    // 边界情况：即没有碰撞点的情况\r\n    if (contacts.length < 1) {\r\n        contacts.push(new contact_1.Contact(potentialContactsA[0], depth));\r\n    }\r\n    return contacts;\r\n}\r\nexports.VClosest = VClosest;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29sbGlzaW9uL3ZDbG9zZXN0LnRzPzAzZDYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMENBQWdFO0FBR2hFLHlDQUFnRDtBQUdoRDs7OztHQUlHO0FBQ0gsU0FBUyxzQ0FBc0MsQ0FBQyxVQUFzQixFQUFFLE1BQWM7SUFDbEYsT0FBTyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBQ3JHLENBQUM7QUFHRDs7Ozs7R0FLRztBQUNILFNBQWdCLFFBQVEsQ0FBQyxJQUFVLEVBQUUsUUFBa0IsRUFBRSxNQUFjLEVBQUUsS0FBYTtJQUNsRixJQUFJLGtCQUFrQixHQUFhLEVBQUUsRUFDakMsa0JBQWtCLEdBQWEsRUFBRSxFQUNqQyxRQUFRLEdBQWMsRUFBRSxFQUN4QixTQUFTLEdBQUcsTUFBTSxDQUFDLEdBQUcsRUFBRSxFQUN4QixDQUFDLENBQUM7SUFFTixJQUFJLFdBQVcsR0FBRyxJQUFJLENBQUMsVUFBVSxFQUM3QixXQUFXLEdBQVUsUUFBUyxDQUFDLFVBQVUsQ0FBQztJQUU5QyxvQkFBb0I7SUFDcEIsa0JBQWtCLEdBQUcsc0NBQXNDLENBQUMsV0FBVyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBRWpGLEtBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsa0JBQWtCLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzNDLGlCQUFpQjtRQUNqQixJQUFHLG1CQUFRLENBQUMsVUFBVSxDQUFDLFdBQVcsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ3hELGtCQUFrQjtZQUNsQixRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksaUJBQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQyxDQUFDO1NBQzVEO2FBQ0k7WUFDRCxJQUFHLENBQUMsS0FBSyxDQUFDO2dCQUFFLE1BQU07U0FDckI7S0FDSjtJQUVELElBQUcsUUFBUSxDQUFDLE1BQU0sSUFBSSxDQUFDO1FBQUUsT0FBTyxRQUFRLENBQUM7SUFFekMsT0FBTztJQUNQLGtCQUFrQixHQUFHLHNDQUFzQyxDQUFDLFdBQVcsRUFBRSxTQUFTLENBQUMsQ0FBQztJQUVwRixLQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLGtCQUFrQixDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUMzQyxJQUFHLG1CQUFRLENBQUMsVUFBVSxDQUFDLFdBQVcsRUFBRSxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO1lBQ3hELFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxpQkFBTyxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7U0FDNUQ7YUFDSTtZQUNELElBQUcsQ0FBQyxLQUFLLENBQUM7Z0JBQUUsTUFBTTtTQUNyQjtLQUNKO0lBRUQsaUJBQWlCO0lBQ2pCLElBQUcsUUFBUSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7UUFDcEIsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLGlCQUFPLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQztLQUM1RDtJQUVELE9BQU8sUUFBUSxDQUFDO0FBQ3BCLENBQUM7QUE1Q0QsNEJBNENDIiwiZmlsZSI6IjE4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVmVydGV4TGlzdCwgUG9seSwgVmVydGljZXMgfSBmcm9tIFwiLi4vY29tbW9uL3ZlcnRpY2VzXCI7XHJcbmltcG9ydCB7IFZlY3RvciB9IGZyb20gXCIuLi9tYXRoL3ZlY3RvclwiO1xyXG5pbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuL21hbmlmb2xkXCI7XHJcbmltcG9ydCB7IENvbnRhY3QgfSBmcm9tIFwiLi4vY29uc3RyYWludC9jb250YWN0XCI7XHJcblxyXG5cclxuLyoqXHJcbiAqIOWwhumhtueCueaMieeFp+WcqOazlee6v+S4iuaKleW9seeahOWkp+Wwj+mhuuW6j+aOkuW6j1xyXG4gKiBAcGFyYW0gdmVydGV4TGlzdCBcclxuICogQHBhcmFtIG5vcm1hbCBcclxuICovXHJcbmZ1bmN0aW9uIG9yZGVyUHJvamVjdGlvblZlcnRleEluTm9ybWFsRGlyZWN0aW9uKHZlcnRleExpc3Q6IFZlcnRleExpc3QsIG5vcm1hbDogVmVjdG9yKTogVmVjdG9yW10ge1xyXG4gICAgcmV0dXJuIHZlcnRleExpc3Quc2xpY2UoMCkuc29ydCgodmVydGV4QSwgdmVydGV4QikgPT4gdmVydGV4QS5kb3Qobm9ybWFsKSAtIHZlcnRleEIuZG90KG5vcm1hbCkpO1xyXG59XHJcblxyXG5cclxuLyoqXHJcbiAqIOacgOi/keWGhemDqOmhtueCueazleWvu+aJvueisOaSnueCuVxyXG4gKiDor6bop4HvvJpodHRwczovL2dpdGh1Yi5jb20vcGhlbm9tTGkvQmxvZy9pc3N1ZXMvNDFcclxuICogQHBhcmFtIHBvbHkgXHJcbiAqIEBwYXJhbSBnZW9tZXRyeSBcclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBWQ2xvc2VzdChwb2x5OiBQb2x5LCBnZW9tZXRyeTogR2VvbWV0cnksIG5vcm1hbDogVmVjdG9yLCBkZXB0aDogbnVtYmVyKTogQ29udGFjdFtdIHtcclxuICAgIGxldCBwb3RlbnRpYWxDb250YWN0c0E6IFZlY3RvcltdID0gW10sXHJcbiAgICAgICAgcG90ZW50aWFsQ29udGFjdHNCOiBWZWN0b3JbXSA9IFtdLFxyXG4gICAgICAgIGNvbnRhY3RzOiBDb250YWN0W10gPSBbXSxcclxuICAgICAgICBub3JtYWxJbnYgPSBub3JtYWwuaW52KCksXHJcbiAgICAgICAgaTtcclxuXHJcbiAgICBsZXQgdmVydGV4TGlzdEEgPSBwb2x5LnZlcnRleExpc3QsXHJcbiAgICAgICAgdmVydGV4TGlzdEIgPSAoPFBvbHk+Z2VvbWV0cnkpLnZlcnRleExpc3Q7XHJcblxyXG4gICAgLy8g5a+75om+5aSa6L655b2iQeacgOaOpei/keWkmui+ueW9okLnmoTkuKTkuKrngrlcclxuICAgIHBvdGVudGlhbENvbnRhY3RzQSA9IG9yZGVyUHJvamVjdGlvblZlcnRleEluTm9ybWFsRGlyZWN0aW9uKHZlcnRleExpc3RBLCBub3JtYWwpO1xyXG5cclxuICAgIGZvcihpID0gMDsgaSA8IHBvdGVudGlhbENvbnRhY3RzQS5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIC8vIOafpeeci+i/meS6m+eCueaYr+WQpuWcqOWkmui+ueW9okLlhoXpg6hcclxuICAgICAgICBpZihWZXJ0aWNlcy5pc0NvbnRhaW5zKHZlcnRleExpc3RCLCBwb3RlbnRpYWxDb250YWN0c0FbaV0pKSB7XHJcbiAgICAgICAgICAgIC8vIOWmguaenOaYr++8jOWImei/meS4queCueiusOS4uuS4gOS4queisOaSnueCuVxyXG4gICAgICAgICAgICBjb250YWN0cy5wdXNoKG5ldyBDb250YWN0KHBvdGVudGlhbENvbnRhY3RzQVtpXSwgZGVwdGgpKTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpZihpICE9PSAwKSBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYoY29udGFjdHMubGVuZ3RoID49IDIpIHJldHVybiBjb250YWN0cztcclxuXHJcbiAgICAvLyDlkIznkIbkuIrpnaJcclxuICAgIHBvdGVudGlhbENvbnRhY3RzQiA9IG9yZGVyUHJvamVjdGlvblZlcnRleEluTm9ybWFsRGlyZWN0aW9uKHZlcnRleExpc3RCLCBub3JtYWxJbnYpO1xyXG5cclxuICAgIGZvcihpID0gMDsgaSA8IHBvdGVudGlhbENvbnRhY3RzQi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGlmKFZlcnRpY2VzLmlzQ29udGFpbnModmVydGV4TGlzdEEsIHBvdGVudGlhbENvbnRhY3RzQltpXSkpIHtcclxuICAgICAgICAgICAgY29udGFjdHMucHVzaChuZXcgQ29udGFjdChwb3RlbnRpYWxDb250YWN0c0JbaV0sIGRlcHRoKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpZihpICE9PSAwKSBicmVhaztcclxuICAgICAgICB9IFxyXG4gICAgfVxyXG5cclxuICAgIC8vIOi+ueeVjOaDheWGte+8muWNs+ayoeacieeisOaSnueCueeahOaDheWGtVxyXG4gICAgaWYoY29udGFjdHMubGVuZ3RoIDwgMSkge1xyXG4gICAgICAgIGNvbnRhY3RzLnB1c2gobmV3IENvbnRhY3QocG90ZW50aWFsQ29udGFjdHNBWzBdLCBkZXB0aCkpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBjb250YWN0cztcclxufVxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///18\n')},,function(module,exports,__webpack_require__){"use strict";eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Sleeping = void 0;\r\nconst util_1 = __webpack_require__(0);\r\nconst eventEmitter_1 = __webpack_require__(3);\r\n/**\r\n * 休眠管理器\r\n */\r\nclass Sleeping {\r\n    constructor(opt) {\r\n        this.sleepThreshold = 60;\r\n        this.sleepMotionThreshold = 0.0009;\r\n        this.wakeMotionThreshold = 0.8;\r\n        util_1.Util.merge(this, opt);\r\n    }\r\n    /**\r\n     * 使刚体睡眠\r\n     * @param body\r\n     */\r\n    sleep(body) {\r\n        body.sleeping = true;\r\n        body.sleepCounter = this.sleepThreshold;\r\n        body.velocity.x = 0;\r\n        body.velocity.y = 0;\r\n        body.angularVelocity = 0;\r\n        body.motion = 0;\r\n        eventEmitter_1.Event.emit(body, 'sleepStart', body);\r\n    }\r\n    /**\r\n     * 唤醒刚体\r\n     * @param body\r\n     */\r\n    wake(body) {\r\n        body.sleeping = false;\r\n        body.sleepCounter = 0;\r\n        eventEmitter_1.Event.emit(body, 'sleepEnd', body);\r\n    }\r\n    /**\r\n     * 改变刚体的状态，使其唤醒或休眠\r\n     * @param bodies\r\n     */\r\n    update(bodies) {\r\n        let body, i;\r\n        for (i = 0; i < bodies.length; i++) {\r\n            body = bodies[i];\r\n            if (body.fixed)\r\n                continue;\r\n            let motion = body.motion;\r\n            // 若刚体合外力不为0，则唤醒\r\n            // if (body.force.x !== 0 || body.force.y !== 0) {\r\n            //     this.wake(body);\r\n            //     continue;\r\n            // }\r\n            // 若刚体已经休眠，则返回\r\n            if (body.sleeping)\r\n                continue;\r\n            // 若刚体动量 < 休眠阈值，则刚体休眠计算 + 1\r\n            if (motion < this.sleepMotionThreshold) {\r\n                body.sleepCounter += 1;\r\n                // 若刚体休眠计数器达到休眠阈值，则进行休眠\r\n                if (body.sleepCounter >= this.sleepThreshold) {\r\n                    this.sleep(body);\r\n                }\r\n            }\r\n            else {\r\n                if (body.sleepCounter > 0) {\r\n                    body.sleepCounter -= 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 刚体碰撞后，判断是否需要唤醒\r\n     * @param manifolds\r\n     */\r\n    afterCollision(manifolds) {\r\n        let manifold, bodyA, bodyB;\r\n        // wake up bodies involved in collisions\r\n        for (var i = 0; i < manifolds.length; i++) {\r\n            manifold = manifolds[i];\r\n            bodyA = manifold.bodyA;\r\n            bodyB = manifold.bodyB;\r\n            // 若A为休眠状态且B的动量大于休眠阈值，唤醒A\r\n            if (!bodyA.fixed && bodyA.sleeping && bodyB.motion > this.wakeMotionThreshold) {\r\n                this.wake(bodyA);\r\n                continue;\r\n            }\r\n            // B同理上面\r\n            if (!bodyB.fixed && bodyB.sleeping && bodyA.motion > this.wakeMotionThreshold) {\r\n                this.wake(bodyB);\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.Sleeping = Sleeping;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29yZS9zbGVlcGluZy50cz9kNWNkIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLHNDQUFzQztBQUN0Qyw4Q0FBOEM7QUFJOUM7O0dBRUc7QUFFSCxNQUFhLFFBQVE7SUFXakIsWUFBWSxHQUFjO1FBQ3RCLElBQUksQ0FBQyxjQUFjLEdBQUcsRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxNQUFNLENBQUM7UUFDbkMsSUFBSSxDQUFDLG1CQUFtQixHQUFHLEdBQUcsQ0FBQztRQUUvQixXQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsS0FBSyxDQUFDLElBQVU7UUFDWixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUNyQixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7UUFFeEMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsZUFBZSxHQUFHLENBQUMsQ0FBQztRQUN6QixJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUVoQixvQkFBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsWUFBWSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFFRDs7O09BR0c7SUFDSCxJQUFJLENBQUMsSUFBVTtRQUNYLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxDQUFDO1FBQ3RCLG9CQUFLLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxVQUFVLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVEOzs7T0FHRztJQUNILE1BQU0sQ0FBQyxNQUFjO1FBQ2pCLElBQUksSUFBVSxFQUNWLENBQUMsQ0FBQztRQUVOLEtBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMvQixJQUFJLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBRWpCLElBQUcsSUFBSSxDQUFDLEtBQUs7Z0JBQUUsU0FBUztZQUV4QixJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1lBRXpCLGdCQUFnQjtZQUNoQixrREFBa0Q7WUFDbEQsdUJBQXVCO1lBQ3ZCLGdCQUFnQjtZQUNoQixJQUFJO1lBRUosY0FBYztZQUNkLElBQUcsSUFBSSxDQUFDLFFBQVE7Z0JBQUUsU0FBUztZQUUzQiwyQkFBMkI7WUFDM0IsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixFQUFFO2dCQUNwQyxJQUFJLENBQUMsWUFBWSxJQUFJLENBQUMsQ0FBQztnQkFFdkIsdUJBQXVCO2dCQUN2QixJQUFJLElBQUksQ0FBQyxZQUFZLElBQUksSUFBSSxDQUFDLGNBQWMsRUFBRTtvQkFDMUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztpQkFDcEI7YUFDSjtpQkFDSTtnQkFDRCxJQUFJLElBQUksQ0FBQyxZQUFZLEdBQUcsQ0FBQyxFQUFFO29CQUN2QixJQUFJLENBQUMsWUFBWSxJQUFJLENBQUMsQ0FBQztpQkFDMUI7YUFDSjtTQUNKO0lBQ0wsQ0FBQztJQUVEOzs7T0FHRztJQUNILGNBQWMsQ0FBQyxTQUFxQjtRQUNoQyxJQUFJLFFBQWtCLEVBQ2xCLEtBQVcsRUFBRSxLQUFXLENBQUM7UUFFN0Isd0NBQXdDO1FBQ3hDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3ZDLFFBQVEsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDeEIsS0FBSyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUM7WUFDdkIsS0FBSyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUM7WUFFdkIseUJBQXlCO1lBQ3pCLElBQUcsQ0FBQyxLQUFLLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQyxRQUFRLElBQUksS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsbUJBQW1CLEVBQUU7Z0JBQzFFLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQ2pCLFNBQVM7YUFDWjtZQUVELFFBQVE7WUFDUixJQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUMsUUFBUSxJQUFJLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLG1CQUFtQixFQUFFO2dCQUMxRSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUNqQixTQUFTO2FBQ1o7U0FDSjtJQUNMLENBQUM7Q0FDSjtBQWpIRCw0QkFpSEMiLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb2R5IH0gZnJvbSBcIi4uL2JvZHkvYm9keVwiO1xyXG5pbXBvcnQgeyBFbmdpbmVPcHQgfSBmcm9tIFwiLi9lbmdpbmVcIjtcclxuaW1wb3J0IHsgVXRpbCB9IGZyb20gXCIuLi9jb21tb24vdXRpbFwiO1xyXG5pbXBvcnQgeyBFdmVudCB9IGZyb20gXCIuLi9ldmVudC9ldmVudEVtaXR0ZXJcIjtcclxuaW1wb3J0IHsgTWFuaWZvbGQgfSBmcm9tIFwiLi4vY29sbGlzaW9uL21hbmlmb2xkXCI7XHJcblxyXG5cclxuLyoqXHJcbiAqIOS8keecoOeuoeeQhuWZqFxyXG4gKi9cclxuXHJcbmV4cG9ydCBjbGFzcyBTbGVlcGluZyB7XHJcblxyXG4gICAgLy8g5Yik5a6a5LyR55yg5bin5qCR6ZiI5YC8XHJcbiAgICBzbGVlcFRocmVzaG9sZDogbnVtYmVyO1xyXG4gICAgLy8g5Yik5a6a5LyR55yg5Yqo6YeP6ZiI5YC8XHJcbiAgICBzbGVlcE1vdGlvblRocmVzaG9sZDogbnVtYmVyO1xyXG4gICAgLy8g5Yik5a6a5ZSk6YaS5Yqo6YeP6ZiI5YC8XHJcbiAgICB3YWtlTW90aW9uVGhyZXNob2xkOiBudW1iZXI7XHJcbiAgICAvLyDlgY/lt67ns7vmlbBcclxuICAgIG1pbkJpYXM6IG51bWJlcjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihvcHQ6IEVuZ2luZU9wdCkge1xyXG4gICAgICAgIHRoaXMuc2xlZXBUaHJlc2hvbGQgPSA2MDtcclxuICAgICAgICB0aGlzLnNsZWVwTW90aW9uVGhyZXNob2xkID0gMC4wMDA5O1xyXG4gICAgICAgIHRoaXMud2FrZU1vdGlvblRocmVzaG9sZCA9IDAuODtcclxuXHJcbiAgICAgICAgVXRpbC5tZXJnZSh0aGlzLCBvcHQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5L2/5Yia5L2T552h55ygXHJcbiAgICAgKiBAcGFyYW0gYm9keSBcclxuICAgICAqL1xyXG4gICAgc2xlZXAoYm9keTogQm9keSkge1xyXG4gICAgICAgIGJvZHkuc2xlZXBpbmcgPSB0cnVlO1xyXG4gICAgICAgIGJvZHkuc2xlZXBDb3VudGVyID0gdGhpcy5zbGVlcFRocmVzaG9sZDtcclxuXHJcbiAgICAgICAgYm9keS52ZWxvY2l0eS54ID0gMDtcclxuICAgICAgICBib2R5LnZlbG9jaXR5LnkgPSAwO1xyXG4gICAgICAgIGJvZHkuYW5ndWxhclZlbG9jaXR5ID0gMDtcclxuICAgICAgICBib2R5Lm1vdGlvbiA9IDA7XHJcblxyXG4gICAgICAgIEV2ZW50LmVtaXQoYm9keSwgJ3NsZWVwU3RhcnQnLCBib2R5KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWUpOmGkuWImuS9k1xyXG4gICAgICogQHBhcmFtIGJvZHkgXHJcbiAgICAgKi9cclxuICAgIHdha2UoYm9keTogQm9keSkge1xyXG4gICAgICAgIGJvZHkuc2xlZXBpbmcgPSBmYWxzZTtcclxuICAgICAgICBib2R5LnNsZWVwQ291bnRlciA9IDA7XHJcbiAgICAgICAgRXZlbnQuZW1pdChib2R5LCAnc2xlZXBFbmQnLCBib2R5KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaUueWPmOWImuS9k+eahOeKtuaAge+8jOS9v+WFtuWUpOmGkuaIluS8keecoFxyXG4gICAgICogQHBhcmFtIGJvZGllc1xyXG4gICAgICovXHJcbiAgICB1cGRhdGUoYm9kaWVzOiBCb2R5W10pIHtcclxuICAgICAgICBsZXQgYm9keTogQm9keSxcclxuICAgICAgICAgICAgaTtcclxuXHJcbiAgICAgICAgZm9yKGkgPSAwOyBpIDwgYm9kaWVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGJvZHkgPSBib2RpZXNbaV07XHJcblxyXG4gICAgICAgICAgICBpZihib2R5LmZpeGVkKSBjb250aW51ZTtcclxuXHJcbiAgICAgICAgICAgIGxldCBtb3Rpb24gPSBib2R5Lm1vdGlvbjtcclxuXHJcbiAgICAgICAgICAgIC8vIOiLpeWImuS9k+WQiOWkluWKm+S4jeS4ujDvvIzliJnllKTphpJcclxuICAgICAgICAgICAgLy8gaWYgKGJvZHkuZm9yY2UueCAhPT0gMCB8fCBib2R5LmZvcmNlLnkgIT09IDApIHtcclxuICAgICAgICAgICAgLy8gICAgIHRoaXMud2FrZShib2R5KTtcclxuICAgICAgICAgICAgLy8gICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAvLyB9XHJcblxyXG4gICAgICAgICAgICAvLyDoi6XliJrkvZPlt7Lnu4/kvJHnnKDvvIzliJnov5Tlm55cclxuICAgICAgICAgICAgaWYoYm9keS5zbGVlcGluZykgY29udGludWU7XHJcblxyXG4gICAgICAgICAgICAvLyDoi6XliJrkvZPliqjph48gPCDkvJHnnKDpmIjlgLzvvIzliJnliJrkvZPkvJHnnKDorqHnrpcgKyAxXHJcbiAgICAgICAgICAgIGlmIChtb3Rpb24gPCB0aGlzLnNsZWVwTW90aW9uVGhyZXNob2xkKSB7XHJcbiAgICAgICAgICAgICAgICBib2R5LnNsZWVwQ291bnRlciArPSAxO1xyXG5cclxuICAgICAgICAgICAgICAgIC8vIOiLpeWImuS9k+S8keecoOiuoeaVsOWZqOi+vuWIsOS8keecoOmYiOWAvO+8jOWImei/m+ihjOS8keecoFxyXG4gICAgICAgICAgICAgICAgaWYgKGJvZHkuc2xlZXBDb3VudGVyID49IHRoaXMuc2xlZXBUaHJlc2hvbGQpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnNsZWVwKGJvZHkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IFxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmIChib2R5LnNsZWVwQ291bnRlciA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBib2R5LnNsZWVwQ291bnRlciAtPSAxO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yia5L2T56Kw5pKe5ZCO77yM5Yik5pat5piv5ZCm6ZyA6KaB5ZSk6YaSXHJcbiAgICAgKiBAcGFyYW0gbWFuaWZvbGRzXHJcbiAgICAgKi9cclxuICAgIGFmdGVyQ29sbGlzaW9uKG1hbmlmb2xkczogTWFuaWZvbGRbXSkge1xyXG4gICAgICAgIGxldCBtYW5pZm9sZDogTWFuaWZvbGQsXHJcbiAgICAgICAgICAgIGJvZHlBOiBCb2R5LCBib2R5QjogQm9keTtcclxuXHJcbiAgICAgICAgLy8gd2FrZSB1cCBib2RpZXMgaW52b2x2ZWQgaW4gY29sbGlzaW9uc1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbWFuaWZvbGRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIG1hbmlmb2xkID0gbWFuaWZvbGRzW2ldO1xyXG4gICAgICAgICAgICBib2R5QSA9IG1hbmlmb2xkLmJvZHlBO1xyXG4gICAgICAgICAgICBib2R5QiA9IG1hbmlmb2xkLmJvZHlCO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy8g6IulQeS4uuS8keecoOeKtuaAgeS4lELnmoTliqjph4/lpKfkuo7kvJHnnKDpmIjlgLzvvIzllKTphpJBXHJcbiAgICAgICAgICAgIGlmKCFib2R5QS5maXhlZCAmJiBib2R5QS5zbGVlcGluZyAmJiBib2R5Qi5tb3Rpb24gPiB0aGlzLndha2VNb3Rpb25UaHJlc2hvbGQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMud2FrZShib2R5QSk7XHJcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gQuWQjOeQhuS4iumdolxyXG4gICAgICAgICAgICBpZighYm9keUIuZml4ZWQgJiYgYm9keUIuc2xlZXBpbmcgJiYgYm9keUEubW90aW9uID4gdGhpcy53YWtlTW90aW9uVGhyZXNob2xkKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLndha2UoYm9keUIpO1xyXG4gICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///20\n")},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.ManifoldTable = void 0;\r\nconst manifold_1 = __webpack_require__(7);\r\nconst util_1 = __webpack_require__(0);\r\nclass ManifoldTable {\r\n    constructor(opt) {\r\n        this.enableCache = false;\r\n        this.manifoldRemoveThreshold = 1000;\r\n        this.table = {};\r\n        this.list = [];\r\n        this.collisionStart = [];\r\n        this.collisionEnd = [];\r\n        this.collisionActive = [];\r\n        util_1.Util.merge(this, opt);\r\n    }\r\n    /**\r\n     * 更新所有流形\r\n     * @param collisions\r\n     * @param timeStamp\r\n     */\r\n    update(collisions, timeStamp) {\r\n        let manifold, id, collision, i;\r\n        this.collisionStart.length = 0;\r\n        this.collisionEnd.length = 0;\r\n        this.collisionActive.length = 0;\r\n        // 清空确认激活状态\r\n        for (i = 0; i < this.list.length; i++) {\r\n            this.list[i].confirmedActive = false;\r\n        }\r\n        for (i = 0; i < collisions.length; i++) {\r\n            collision = collisions[i];\r\n            // 只有真实发生碰撞的碰撞对才会更新对应的流形\r\n            if (collision.collide) {\r\n                id = util_1.Util.compositeId(collision.partA.id, collision.partB.id);\r\n                manifold = this.table[id];\r\n                // 若对应流形存在\r\n                if (manifold) {\r\n                    // 若流形上一刻已经被激活\r\n                    if (manifold.isActive) {\r\n                        this.collisionActive.push(manifold);\r\n                    }\r\n                    // 否则表明该流形第一次发生碰撞\r\n                    else {\r\n                        this.collisionStart.push(manifold);\r\n                    }\r\n                    manifold.update(collision, timeStamp);\r\n                    manifold.confirmedActive = true;\r\n                }\r\n                // 若不存在，则创建对应流形\r\n                else {\r\n                    manifold = new manifold_1.Manifold(collision, timeStamp);\r\n                    this.table[id] = manifold;\r\n                    this.list.push(manifold);\r\n                    this.collisionStart.push(manifold);\r\n                }\r\n            }\r\n        }\r\n        // 遍历查找上一次发生碰撞且当前没有发生碰撞的流形\r\n        for (i = 0; i < this.list.length; i++) {\r\n            manifold = this.list[i];\r\n            // ，将其激活状态取消\r\n            if (manifold.isActive && !manifold.confirmedActive) {\r\n                manifold.toggleActive(false, timeStamp);\r\n                // 标记为碰撞结束\r\n                this.collisionEnd.push(manifold);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 过滤超时的碰撞流形\r\n     * @param timeStamp\r\n     */\r\n    filter(timeStamp) {\r\n        let manifold, i;\r\n        for (i = 0; i < this.list.length; i++) {\r\n            manifold = this.list[i];\r\n            // 若流形的两刚体有其一处于休眠状态，更新事件，不清除\r\n            if (manifold.bodyA.sleeping || manifold.bodyB.sleeping) {\r\n                manifold.timeUpdated = timeStamp;\r\n                continue;\r\n            }\r\n            // 若流形上次更新的时间离现在已经大于设定阈值，则需要清除\r\n            if (timeStamp - manifold.timeUpdated > this.manifoldRemoveThreshold) {\r\n                delete this.table[manifold.id];\r\n                this.list.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 清空流形表和队列\r\n     */\r\n    clear() {\r\n        this.table = {};\r\n        this.list.length = 0;\r\n        this.collisionStart.length = 0;\r\n        this.collisionEnd.length = 0;\r\n        this.collisionActive.length = 0;\r\n    }\r\n}\r\nexports.ManifoldTable = ManifoldTable;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///21\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.BodiesFactory = void 0;\r\nconst circle_1 = __webpack_require__(23);\r\nconst polygon_1 = __webpack_require__(9);\r\nconst rect_1 = __webpack_require__(24);\r\nconst vector_1 = __webpack_require__(1);\r\nconst util_1 = __webpack_require__(0);\r\nclass BodiesFactory {\r\n    /**\r\n     * 创造圆形\r\n     * @param x x\r\n     * @param y y\r\n     * @param radius 半径\r\n     * @param opt 配置项\r\n     */\r\n    Circle(x, y, radius, opt) {\r\n        opt = opt || {};\r\n        util_1.Util.extend(opt, {\r\n            origin: new vector_1.Vector(x, y),\r\n            radius: radius\r\n        });\r\n        return new circle_1.Circle(opt);\r\n        ;\r\n    }\r\n    /**\r\n     * 创造多边形\r\n     * @param x x\r\n     * @param y y\r\n     * @param v 顶点集\r\n     * @param opt 配置项\r\n     */\r\n    Polygon(x, y, v, opt) {\r\n        opt = opt || {};\r\n        let vertices = v.map(vertex => new vector_1.Vector(vertex[0], vertex[1]));\r\n        util_1.Util.extend(opt, {\r\n            origin: new vector_1.Vector(x, y),\r\n            vertices\r\n        });\r\n        return new polygon_1.Polygon(opt);\r\n    }\r\n    /**\r\n     * 创造矩形\r\n     * @param x x\r\n     * @param y y\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @param opt 配置项\r\n     */\r\n    Rect(x, y, width, height, opt) {\r\n        opt = opt || {};\r\n        util_1.Util.extend(opt, {\r\n            origin: new vector_1.Vector(x, y),\r\n            width,\r\n            height\r\n        });\r\n        return new rect_1.Rect(opt);\r\n    }\r\n}\r\nexports.BodiesFactory = BodiesFactory;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29yZS9ib2RpZXNGYWN0b3J5LnRzPzE2ZmQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEseUNBQW1EO0FBQ25ELHlDQUFzRDtBQUN0RCx1Q0FBNkM7QUFDN0Msd0NBQXdDO0FBQ3hDLHNDQUFzQztBQUl0QyxNQUFhLGFBQWE7SUFFdEI7Ozs7OztPQU1HO0lBQ0gsTUFBTSxDQUFDLENBQVMsRUFBRSxDQUFTLEVBQUUsTUFBYyxFQUFFLEdBQWU7UUFDeEQsR0FBRyxHQUFHLEdBQUcsSUFBZSxFQUFFLENBQUM7UUFFM0IsV0FBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUU7WUFDYixNQUFNLEVBQUUsSUFBSSxlQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUN4QixNQUFNLEVBQUUsTUFBTTtTQUNqQixDQUFDLENBQUM7UUFFSCxPQUFPLElBQUksZUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQUEsQ0FBQztJQUM1QixDQUFDO0lBRUQ7Ozs7OztPQU1HO0lBQ0gsT0FBTyxDQUFDLENBQVMsRUFBRSxDQUFTLEVBQUUsQ0FBa0IsRUFBRSxHQUFnQjtRQUM5RCxHQUFHLEdBQUcsR0FBRyxJQUFnQixFQUFFLENBQUM7UUFFNUIsSUFBSSxRQUFRLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLElBQUksZUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWpFLFdBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFO1lBQ2IsTUFBTSxFQUFFLElBQUksZUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDeEIsUUFBUTtTQUNYLENBQUMsQ0FBQztRQUVILE9BQU8sSUFBSSxpQkFBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFRDs7Ozs7OztPQU9HO0lBQ0gsSUFBSSxDQUFDLENBQVMsRUFBRSxDQUFTLEVBQUUsS0FBYSxFQUFFLE1BQWMsRUFBRSxHQUFhO1FBQ25FLEdBQUcsR0FBRyxHQUFHLElBQWEsRUFBRSxDQUFDO1FBRXpCLFdBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFO1lBQ2IsTUFBTSxFQUFFLElBQUksZUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDeEIsS0FBSztZQUNMLE1BQU07U0FDVCxDQUFDLENBQUM7UUFFSCxPQUFPLElBQUksV0FBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3pCLENBQUM7Q0FDSjtBQTNERCxzQ0EyREMiLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaXJjbGUsIENpcmNsZU9wdCB9IGZyb20gXCIuLi9ib2R5L2NpcmNsZVwiO1xyXG5pbXBvcnQgeyBQb2x5Z29uLCBQb2x5Z29uT3B0IH0gZnJvbSBcIi4uL2JvZHkvcG9seWdvblwiO1xyXG5pbXBvcnQgeyBSZWN0LCBSZWN0T3B0IH0gZnJvbSBcIi4uL2JvZHkvcmVjdFwiO1xyXG5pbXBvcnQgeyBWZWN0b3IgfSBmcm9tIFwiLi4vbWF0aC92ZWN0b3JcIjtcclxuaW1wb3J0IHsgVXRpbCB9IGZyb20gXCIuLi9jb21tb24vdXRpbFwiO1xyXG5cclxuXHJcblxyXG5leHBvcnQgY2xhc3MgQm9kaWVzRmFjdG9yeSB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliJvpgKDlnIblvaJcclxuICAgICAqIEBwYXJhbSB4IHhcclxuICAgICAqIEBwYXJhbSB5IHlcclxuICAgICAqIEBwYXJhbSByYWRpdXMg5Y2K5b6EIFxyXG4gICAgICogQHBhcmFtIG9wdCDphY3nva7poblcclxuICAgICAqL1xyXG4gICAgQ2lyY2xlKHg6IG51bWJlciwgeTogbnVtYmVyLCByYWRpdXM6IG51bWJlciwgb3B0PzogQ2lyY2xlT3B0KTogQ2lyY2xlIHtcclxuICAgICAgICBvcHQgPSBvcHQgfHwgPENpcmNsZU9wdD57fTtcclxuXHJcbiAgICAgICAgVXRpbC5leHRlbmQob3B0LCB7XHJcbiAgICAgICAgICAgIG9yaWdpbjogbmV3IFZlY3Rvcih4LCB5KSxcclxuICAgICAgICAgICAgcmFkaXVzOiByYWRpdXNcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG5ldyBDaXJjbGUob3B0KTs7XHJcbiAgICB9ICAgXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliJvpgKDlpJrovrnlvaJcclxuICAgICAqIEBwYXJhbSB4IHhcclxuICAgICAqIEBwYXJhbSB5IHlcclxuICAgICAqIEBwYXJhbSB2IOmhtueCuembhiBcclxuICAgICAqIEBwYXJhbSBvcHQg6YWN572u6aG5XHJcbiAgICAgKi9cclxuICAgIFBvbHlnb24oeDogbnVtYmVyLCB5OiBudW1iZXIsIHY6IEFycmF5PG51bWJlcltdPiwgb3B0PzogUG9seWdvbk9wdCk6IFBvbHlnb24ge1xyXG4gICAgICAgIG9wdCA9IG9wdCB8fCA8UG9seWdvbk9wdD57fTtcclxuXHJcbiAgICAgICAgbGV0IHZlcnRpY2VzID0gdi5tYXAodmVydGV4ID0+IG5ldyBWZWN0b3IodmVydGV4WzBdLCB2ZXJ0ZXhbMV0pKTtcclxuXHJcbiAgICAgICAgVXRpbC5leHRlbmQob3B0LCB7XHJcbiAgICAgICAgICAgIG9yaWdpbjogbmV3IFZlY3Rvcih4LCB5KSxcclxuICAgICAgICAgICAgdmVydGljZXNcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG5ldyBQb2x5Z29uKG9wdCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliJvpgKDnn6nlvaJcclxuICAgICAqIEBwYXJhbSB4IHggXHJcbiAgICAgKiBAcGFyYW0geSB5XHJcbiAgICAgKiBAcGFyYW0gd2lkdGgg5a69IFxyXG4gICAgICogQHBhcmFtIGhlaWdodCDpq5hcclxuICAgICAqIEBwYXJhbSBvcHQg6YWN572u6aG5XHJcbiAgICAgKi9cclxuICAgIFJlY3QoeDogbnVtYmVyLCB5OiBudW1iZXIsIHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyLCBvcHQ/OiBSZWN0T3B0KTogUmVjdCB7XHJcbiAgICAgICAgb3B0ID0gb3B0IHx8IDxSZWN0T3B0Pnt9O1xyXG5cclxuICAgICAgICBVdGlsLmV4dGVuZChvcHQsIHtcclxuICAgICAgICAgICAgb3JpZ2luOiBuZXcgVmVjdG9yKHgsIHkpLFxyXG4gICAgICAgICAgICB3aWR0aCxcclxuICAgICAgICAgICAgaGVpZ2h0XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHJldHVybiBuZXcgUmVjdChvcHQpO1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///22\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Circle = void 0;\r\nconst body_1 = __webpack_require__(8);\r\nconst arcs_1 = __webpack_require__(4);\r\nclass Circle extends body_1.Body {\r\n    constructor(opt) {\r\n        super(opt, body_1.bodyType.circle);\r\n        this.arc = this.getArc();\r\n        this.parts = [this.arc];\r\n        this.bound = this.arc.bound;\r\n    }\r\n    getArea() {\r\n        return Math.PI * this.radius * this.radius;\r\n    }\r\n    getCentroid() {\r\n        return this.origin.col();\r\n    }\r\n    getInertia() {\r\n        return 0.5 * this.mass * Math.pow(this.radius, 2);\r\n    }\r\n    /**\r\n     * 获取圆形信息包\r\n     */\r\n    getArc() {\r\n        return arcs_1.Arcs.create(this);\r\n    }\r\n    translate(distance) {\r\n        // 位移图形原点\r\n        this.origin.x += distance.x;\r\n        this.origin.y += distance.y;\r\n        // 位移圆形\r\n        arcs_1.Arcs.translate(this.arc, distance);\r\n    }\r\n}\r\nexports.Circle = Circle;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYm9keS9jaXJjbGUudHM/NWFiNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxzQ0FBaUQ7QUFHakQsc0NBQTJDO0FBWTNDLE1BQWEsTUFBTyxTQUFRLFdBQUk7SUFLNUIsWUFBWSxHQUFjO1FBQ3RCLEtBQUssQ0FBQyxHQUFHLEVBQUUsZUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRTVCLElBQUksQ0FBQyxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDeEIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQztJQUNoQyxDQUFDO0lBRUQsT0FBTztRQUNILE9BQU8sSUFBSSxDQUFDLEVBQUUsR0FBQyxJQUFJLENBQUMsTUFBTSxHQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDM0MsQ0FBQztJQUVELFdBQVc7UUFDUCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVELFVBQVU7UUFDTixPQUFPLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRUQ7O09BRUc7SUFDSCxNQUFNO1FBQ0YsT0FBTyxXQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFFRCxTQUFTLENBQUMsUUFBZ0I7UUFDdEIsU0FBUztRQUNULElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDNUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksUUFBUSxDQUFDLENBQUMsQ0FBQztRQUU1QixPQUFPO1FBQ1AsV0FBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7Q0FDSjtBQXhDRCx3QkF3Q0MiLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb2R5LCBCb2R5T3B0LCBib2R5VHlwZSB9IGZyb20gXCIuL2JvZHlcIjtcclxuaW1wb3J0IHsgVmVjdG9yIH0gZnJvbSBcIi4uL21hdGgvdmVjdG9yXCI7XHJcbmltcG9ydCB7IEJvdW5kIH0gZnJvbSBcIi4uL2NvbGxpc2lvbi9ib3VuZFwiO1xyXG5pbXBvcnQgeyBBcmMsIEFyY3MgfSBmcm9tIFwiLi4vY29tbW9uL2FyY3NcIjtcclxuXHJcbi8qKlxyXG4gKiDlnIblvaLliJrkvZNcclxuICovXHJcblxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBDaXJjbGVPcHQgZXh0ZW5kcyBCb2R5T3B0IHtcclxuICAgIHJhZGl1czogbnVtYmVyO1xyXG59XHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIENpcmNsZSBleHRlbmRzIEJvZHkge1xyXG4gICAgLy8g5Y2K5b6EXHJcbiAgICByYWRpdXM6IG51bWJlcjtcclxuICAgIGFyYzogQXJjO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG9wdDogQ2lyY2xlT3B0KSB7XHJcbiAgICAgICAgc3VwZXIob3B0LCBib2R5VHlwZS5jaXJjbGUpO1xyXG5cclxuICAgICAgICB0aGlzLmFyYyA9IHRoaXMuZ2V0QXJjKCk7XHJcbiAgICAgICAgdGhpcy5wYXJ0cyA9IFt0aGlzLmFyY107XHJcbiAgICAgICAgdGhpcy5ib3VuZCA9IHRoaXMuYXJjLmJvdW5kO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEFyZWEoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gTWF0aC5QSSp0aGlzLnJhZGl1cyp0aGlzLnJhZGl1cztcclxuICAgIH1cclxuXHJcbiAgICBnZXRDZW50cm9pZCgpOiBWZWN0b3Ige1xyXG4gICAgICAgIHJldHVybiB0aGlzLm9yaWdpbi5jb2woKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRJbmVydGlhKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIDAuNSAqIHRoaXMubWFzcyAqIE1hdGgucG93KHRoaXMucmFkaXVzLCAyKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOiOt+WPluWchuW9ouS/oeaBr+WMhVxyXG4gICAgICovXHJcbiAgICBnZXRBcmMoKTogQXJjIHtcclxuICAgICAgICByZXR1cm4gQXJjcy5jcmVhdGUodGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgdHJhbnNsYXRlKGRpc3RhbmNlOiBWZWN0b3IpIHtcclxuICAgICAgICAvLyDkvY3np7vlm77lvaLljp/ngrlcclxuICAgICAgICB0aGlzLm9yaWdpbi54ICs9IGRpc3RhbmNlLng7XHJcbiAgICAgICAgdGhpcy5vcmlnaW4ueSArPSBkaXN0YW5jZS55O1xyXG5cclxuICAgICAgICAvLyDkvY3np7vlnIblvaJcclxuICAgICAgICBBcmNzLnRyYW5zbGF0ZSh0aGlzLmFyYywgZGlzdGFuY2UpO1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///23\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\n/**\r\n * 矩形刚体\r\n */\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.Rect = void 0;\r\nconst polygon_1 = __webpack_require__(9);\r\nconst vector_1 = __webpack_require__(1);\r\nconst vertices_1 = __webpack_require__(2);\r\nclass Rect extends polygon_1.Polygon {\r\n    constructor(opt) {\r\n        super(opt);\r\n    }\r\n    getPoly() {\r\n        let leftTop = this.origin.col(), rightTop = leftTop.add(new vector_1.Vector(this.width, 0)), rightBottom = leftTop.add(new vector_1.Vector(this.width, this.height)), leftBottom = leftTop.add(new vector_1.Vector(0, this.height)), poly = vertices_1.Vertices.create(this, [leftTop, rightTop, rightBottom, leftBottom]);\r\n        return poly;\r\n    }\r\n    getArea() {\r\n        return this.width * this.height;\r\n    }\r\n    getCentroid() {\r\n        return this.origin.add(new vector_1.Vector(this.width / 2, this.height / 2));\r\n    }\r\n    getInertia() {\r\n        return this.mass * (this.width * this.width + this.height * this.height) / 12;\r\n    }\r\n}\r\nexports.Rect = Rect;\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvYm9keS9yZWN0LnRzPzJkYWIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOztHQUVHOzs7QUFFSCx5Q0FBZ0Q7QUFDaEQsd0NBQXdDO0FBQ3hDLDBDQUFvRDtBQVVwRCxNQUFhLElBQUssU0FBUSxpQkFBTztJQU03QixZQUFZLEdBQVk7UUFDcEIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2YsQ0FBQztJQUVELE9BQU87UUFDSCxJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxFQUMzQixRQUFRLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLGVBQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQ2pELFdBQVcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksZUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQzlELFVBQVUsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksZUFBTSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFDcEQsSUFBSSxHQUFHLG1CQUFRLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxDQUFDLENBQUM7UUFFL0UsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVELE9BQU87UUFDSCxPQUFPLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNwQyxDQUFDO0lBRUQsV0FBVztRQUNQLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxlQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUUsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3hFLENBQUM7SUFFRCxVQUFVO1FBQ04sT0FBTyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNsRixDQUFDO0NBQ0o7QUEvQkQsb0JBK0JDIiwiZmlsZSI6IjI0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIOefqeW9ouWImuS9k1xyXG4gKi9cclxuXHJcbmltcG9ydCB7IFBvbHlnb24sIFBvbHlnb25PcHQgfSBmcm9tIFwiLi9wb2x5Z29uXCI7XHJcbmltcG9ydCB7IFZlY3RvciB9IGZyb20gXCIuLi9tYXRoL3ZlY3RvclwiO1xyXG5pbXBvcnQgeyBQb2x5LCBWZXJ0aWNlcyB9IGZyb20gXCIuLi9jb21tb24vdmVydGljZXNcIjtcclxuXHJcblxyXG5cclxuZXhwb3J0IGludGVyZmFjZSBSZWN0T3B0IGV4dGVuZHMgUG9seWdvbk9wdCB7XHJcbiAgICB3aWR0aDogbnVtYmVyO1xyXG4gICAgaGVpZ2h0OiBudW1iZXI7XHJcbn1cclxuXHJcblxyXG5leHBvcnQgY2xhc3MgUmVjdCBleHRlbmRzIFBvbHlnb24ge1xyXG4gICAgLy8g5a69XHJcbiAgICB3aWR0aDogbnVtYmVyO1xyXG4gICAgLy8g6auYXHJcbiAgICBoZWlnaHQ6IG51bWJlcjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihvcHQ6IFJlY3RPcHQpIHtcclxuICAgICAgICBzdXBlcihvcHQpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFBvbHkoKTogUG9seSB7XHJcbiAgICAgICAgbGV0IGxlZnRUb3AgPSB0aGlzLm9yaWdpbi5jb2woKSxcclxuICAgICAgICAgICAgcmlnaHRUb3AgPSBsZWZ0VG9wLmFkZChuZXcgVmVjdG9yKHRoaXMud2lkdGgsIDApKSxcclxuICAgICAgICAgICAgcmlnaHRCb3R0b20gPSBsZWZ0VG9wLmFkZChuZXcgVmVjdG9yKHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KSksXHJcbiAgICAgICAgICAgIGxlZnRCb3R0b20gPSBsZWZ0VG9wLmFkZChuZXcgVmVjdG9yKDAsIHRoaXMuaGVpZ2h0KSksXHJcbiAgICAgICAgICAgIHBvbHkgPSBWZXJ0aWNlcy5jcmVhdGUodGhpcywgW2xlZnRUb3AsIHJpZ2h0VG9wLCByaWdodEJvdHRvbSwgbGVmdEJvdHRvbV0pO1xyXG5cclxuICAgICAgICByZXR1cm4gcG9seTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRBcmVhKCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMud2lkdGggKiB0aGlzLmhlaWdodDtcclxuICAgIH1cclxuXHJcbiAgICBnZXRDZW50cm9pZCgpOiBWZWN0b3Ige1xyXG4gICAgICAgIHJldHVybiB0aGlzLm9yaWdpbi5hZGQobmV3IFZlY3Rvcih0aGlzLndpZHRoIC8gMiwgdGhpcy5oZWlnaHQgLyAyKSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0SW5lcnRpYSgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm1hc3MgKiAodGhpcy53aWR0aCAqIHRoaXMud2lkdGggKyB0aGlzLmhlaWdodCAqIHRoaXMuaGVpZ2h0KSAvIDEyO1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///24\n')},function(module,exports,__webpack_require__){"use strict";eval('\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nexports.axesFilter_closestVertices = void 0;\r\nconst vertices_1 = __webpack_require__(2);\r\nconst vector_1 = __webpack_require__(1);\r\nfunction axesFilter_closestVertices(geometryA, geometryB) {\r\n    const centroidVector = geometryA.centroid.sub(geometryB.centroid, vector_1._tempVector1), axes = [];\r\n    if (geometryA instanceof vertices_1.Poly) {\r\n        axes.push(...findAxisPair(geometryA, centroidVector));\r\n    }\r\n    if (geometryB instanceof vertices_1.Poly) {\r\n        axes.push(...findAxisPair(geometryB, centroidVector.inv(vector_1._tempVector1)));\r\n    }\r\n    return axes;\r\n}\r\nexports.axesFilter_closestVertices = axesFilter_closestVertices;\r\n/**\r\n * @param poly\r\n * @param centroidVector\r\n */\r\nfunction findAxisPair(poly, centroidVector) {\r\n    let v = poly.vertexList, axes = poly.axes, vertex, projection, minProjection = Infinity, index, last, res = [];\r\n    for (let i = 0; i < v.length; i++) {\r\n        vertex = v[i];\r\n        projection = vertex.dot(centroidVector);\r\n        if (projection < minProjection) {\r\n            minProjection = projection;\r\n            index = i;\r\n        }\r\n    }\r\n    last = index > 0 ? index - 1 : v.length - 1;\r\n    if (axes[last]) {\r\n        res.push(axes[last]);\r\n    }\r\n    if (axes[index]) {\r\n        res.push(axes[index]);\r\n    }\r\n    return res;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvY29sbGlzaW9uL2F4ZXNGaWx0ZXJfY2xvc2VzdFZlcnRpY2VzLnRzPzY5MGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsMENBQXNEO0FBQ3RELHdDQUFzRDtBQUt0RCxTQUFnQiwwQkFBMEIsQ0FBQyxTQUFtQixFQUFFLFNBQW1CO0lBQy9FLE1BQU0sY0FBYyxHQUFHLFNBQVMsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUUscUJBQVksQ0FBQyxFQUN6RSxJQUFJLEdBQWEsRUFBRSxDQUFDO0lBRTFCLElBQUcsU0FBUyxZQUFZLGVBQUksRUFBRTtRQUMxQixJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsWUFBWSxDQUFDLFNBQVMsRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFDO0tBQ3pEO0lBRUQsSUFBRyxTQUFTLFlBQVksZUFBSSxFQUFFO1FBQzFCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxZQUFZLENBQUMsU0FBUyxFQUFFLGNBQWMsQ0FBQyxHQUFHLENBQUMscUJBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUMzRTtJQUVELE9BQU8sSUFBSSxDQUFDO0FBQ2hCLENBQUM7QUFiRCxnRUFhQztBQUdEOzs7R0FHRztBQUNILFNBQVMsWUFBWSxDQUFDLElBQVUsRUFBRSxjQUFzQjtJQUNwRCxJQUFJLENBQUMsR0FBZSxJQUFJLENBQUMsVUFBVSxFQUMvQixJQUFJLEdBQWEsSUFBSSxDQUFDLElBQUksRUFDMUIsTUFBYyxFQUNkLFVBQWtCLEVBQ2xCLGFBQWEsR0FBVyxRQUFRLEVBQ2hDLEtBQWEsRUFDYixJQUFZLEVBQ1osR0FBRyxHQUFhLEVBQUUsQ0FBQztJQUV2QixLQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUM5QixNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2QsVUFBVSxHQUFHLE1BQU0sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7UUFFeEMsSUFBRyxVQUFVLEdBQUcsYUFBYSxFQUFFO1lBQzNCLGFBQWEsR0FBRyxVQUFVLENBQUM7WUFDM0IsS0FBSyxHQUFHLENBQUMsQ0FBQztTQUNiO0tBQ0o7SUFFRCxJQUFJLEdBQUcsS0FBSyxHQUFHLENBQUMsRUFBQyxDQUFDLEtBQUssR0FBRyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztJQUUxQyxJQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUNYLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7S0FDeEI7SUFFRCxJQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUNaLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7S0FDekI7SUFFRCxPQUFPLEdBQUcsQ0FBQztBQUNmLENBQUMiLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHZW9tZXRyeSB9IGZyb20gXCIuL21hbmlmb2xkXCI7XHJcbmltcG9ydCB7IFBvbHksIFZlcnRleExpc3QgfSBmcm9tIFwiLi4vY29tbW9uL3ZlcnRpY2VzXCI7XHJcbmltcG9ydCB7IFZlY3RvciwgX3RlbXBWZWN0b3IxIH0gZnJvbSBcIi4uL21hdGgvdmVjdG9yXCI7XHJcblxyXG5cclxuXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYXhlc0ZpbHRlcl9jbG9zZXN0VmVydGljZXMoZ2VvbWV0cnlBOiBHZW9tZXRyeSwgZ2VvbWV0cnlCOiBHZW9tZXRyeSk6IFZlY3RvcltdIHtcclxuICAgIGNvbnN0IGNlbnRyb2lkVmVjdG9yID0gZ2VvbWV0cnlBLmNlbnRyb2lkLnN1YihnZW9tZXRyeUIuY2VudHJvaWQsIF90ZW1wVmVjdG9yMSksXHJcbiAgICAgICAgICBheGVzOiBWZWN0b3JbXSA9IFtdO1xyXG5cclxuICAgIGlmKGdlb21ldHJ5QSBpbnN0YW5jZW9mIFBvbHkpIHtcclxuICAgICAgICBheGVzLnB1c2goLi4uZmluZEF4aXNQYWlyKGdlb21ldHJ5QSwgY2VudHJvaWRWZWN0b3IpKTtcclxuICAgIH1cclxuXHJcbiAgICBpZihnZW9tZXRyeUIgaW5zdGFuY2VvZiBQb2x5KSB7XHJcbiAgICAgICAgYXhlcy5wdXNoKC4uLmZpbmRBeGlzUGFpcihnZW9tZXRyeUIsIGNlbnRyb2lkVmVjdG9yLmludihfdGVtcFZlY3RvcjEpKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGF4ZXM7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICogQHBhcmFtIHBvbHkgXHJcbiAqIEBwYXJhbSBjZW50cm9pZFZlY3RvciBcclxuICovXHJcbmZ1bmN0aW9uIGZpbmRBeGlzUGFpcihwb2x5OiBQb2x5LCBjZW50cm9pZFZlY3RvcjogVmVjdG9yKTogVmVjdG9yW10ge1xyXG4gICAgbGV0IHY6IFZlcnRleExpc3QgPSBwb2x5LnZlcnRleExpc3QsXHJcbiAgICAgICAgYXhlczogVmVjdG9yW10gPSBwb2x5LmF4ZXMsXHJcbiAgICAgICAgdmVydGV4OiBWZWN0b3IsXHJcbiAgICAgICAgcHJvamVjdGlvbjogbnVtYmVyLFxyXG4gICAgICAgIG1pblByb2plY3Rpb246IG51bWJlciA9IEluZmluaXR5LFxyXG4gICAgICAgIGluZGV4OiBudW1iZXIsXHJcbiAgICAgICAgbGFzdDogbnVtYmVyLFxyXG4gICAgICAgIHJlczogVmVjdG9yW10gPSBbXTtcclxuXHJcbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgdi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIHZlcnRleCA9IHZbaV07XHJcbiAgICAgICAgcHJvamVjdGlvbiA9IHZlcnRleC5kb3QoY2VudHJvaWRWZWN0b3IpO1xyXG5cclxuICAgICAgICBpZihwcm9qZWN0aW9uIDwgbWluUHJvamVjdGlvbikge1xyXG4gICAgICAgICAgICBtaW5Qcm9qZWN0aW9uID0gcHJvamVjdGlvbjtcclxuICAgICAgICAgICAgaW5kZXggPSBpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBsYXN0ID0gaW5kZXggPiAwPyBpbmRleCAtIDE6IHYubGVuZ3RoIC0gMTtcclxuXHJcbiAgICBpZihheGVzW2xhc3RdKSB7XHJcbiAgICAgICAgcmVzLnB1c2goYXhlc1tsYXN0XSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYoYXhlc1tpbmRleF0pIHtcclxuICAgICAgICByZXMucHVzaChheGVzW2luZGV4XSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHJlcztcclxufVxyXG5cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///25\n')}])}));